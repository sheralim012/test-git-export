<problem linenum="400" tex_filename="./week2_ps2.tex" attempts="10" display_name="TM2. TPCP maps are quantum operations (2 of 3)" max_attempts="10">
  <p>
Complete the following sequence of logic to show that [mathjaxinline]\mathcal{N}[/mathjaxinline] can be recovered from [mathjaxinline]J(\mathcal{N})[/mathjaxinline] via the equation </p>
  <table id="a0000000012" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
    <tr id="eqn1p5">
      <td class="equation" style="width:80%; border:none">[mathjax]\mathcal{N}(X) = d {\rm Tr}_ R[J(\mathcal{N})(I \otimes X^ T)].[/mathjax]</td>
      <td class="eqnnum" style="width:20%; border:none;text-align:right">(1.5)</td>
    </tr>
  </table>
  <p>
This implies that the map [mathjaxinline]\mathcal{N}\rightarrow J(\mathcal{N})[/mathjaxinline] is injective. (In fact it is known as the Choi-Jamio≈Çkowski isomorphism.) </p>
  <span>
    <customresponse>
      <drag_and_drop_input img="/static/images/ps1a_tcp2/ps1a_tcp2_dnd.png" target_outline="false" one_per_target="true" no_labels="true" label_bg_color="rgb(222, 139, 238)">
        <draggable id="rmpositivity" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label1.png" can_reuse="true"/>
        <draggable id="rmlinearity" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label2.png" can_reuse="true"/>
        <draggable id="rmunitarity" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label3.png" can_reuse="true"/>
        <draggable id="ketiRbrajR" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label4.png" can_reuse="true"/>
        <draggable id="ketiAbrajA" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label5.png" can_reuse="true"/>
        <draggable id="ketiR" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label6.png" can_reuse="true"/>
        <draggable id="ketjR" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label7.png" can_reuse="true"/>
        <draggable id="ketiA" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label8.png" can_reuse="true"/>
        <draggable id="ketjA" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label9.png" can_reuse="true"/>
        <draggable id="XT" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label10.png" can_reuse="true"/>
        <draggable id="Xij" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label11.png" can_reuse="true"/>
        <draggable id="X" icon="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_label12.png" can_reuse="true"/>
        <target id="5" x="522" y="6" w="91" h="52"/>
        <target id="2" x="693" y="6" w="91" h="52"/>
        <target id="16" x="490" y="91" w="90" h="51"/>
        <target id="13" x="594" y="91" w="91" h="51"/>
        <target id="14" x="475" y="173" w="90" h="51"/>
        <target id="6" x="579" y="173" w="91" h="51"/>
        <target id="3" x="433" y="254" w="91" h="52"/>
        <target id="15" x="356" y="336" w="90" h="51"/>
        <target id="4" x="298" y="420" w="91" h="52"/>
        <target id="1" x="535" y="509" w="91" h="51"/>
      </drag_and_drop_input>
      <answer>
caset = [{'ketiRbrajR': '5'}, {'XT': '2'}, {'ketiRbrajR': '16'}, {'XT': '13'}, {'XT': '14'}, {'ketiR': '6'}, {'Xij': '3'}, {'Xij': '15'}, {'X': '4'}, {'rmlinearity': '1'}]
# custom checking for reusable labels - assumes all targets get some label
import json
ans = json.loads(submission[0])
correct = ['correct']
for rule in caset:
    if rule not in ans:
        correct = ['incorrect']
        break

# use this for debugging
# messages = ['ans=%s' % submission[0]]
</answer>
    </customresponse>
    <solution>
      <img src="/static/images/ps1a_tcp2/ps1a_tcp2_dnd_sol_2FL4N8.png"/>
    </solution>
  </span>
</problem>
