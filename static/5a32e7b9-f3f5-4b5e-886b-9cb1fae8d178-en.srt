0
00:00:00,000 --> 00:00:00,000


1
00:00:00,000 --> 00:00:02,000
In addition to the bit flip code,

2
00:00:02,000 --> 00:00:04,000
we also looked at a phase flip code.

3
00:00:04,000 --> 00:00:08,000
And let's just look at it very briefly here.

4
00:00:08,000 --> 00:00:11,000
We're not going to go through the same analysis,

5
00:00:11,000 --> 00:00:13,000
but I want to show you the parallel of what the syndrome

6
00:00:13,000 --> 00:00:15,000
measurement operators are.

7
00:00:15,000 --> 00:00:22,000


8
00:00:22,000 --> 00:00:30,000
Here, the logical code words were plus, plus, plus,

9
00:00:30,000 --> 00:00:35,000
and minus, minus, minus.

10
00:00:35,000 --> 00:00:39,000
Remember plus and minus are 0, plus or minus

11
00:00:39,000 --> 00:00:43,000
1, divided by root 2.

12
00:00:43,000 --> 00:00:44,000
OK.

13
00:00:44,000 --> 00:00:57,000
And here, the syndrome operators are easy to figure out directly

14
00:00:57,000 --> 00:01:00,000
from the bit flip code because, remember,

15
00:01:00,000 --> 00:01:02,000
all we did to get to the phase flip code

16
00:01:02,000 --> 00:01:05,000
was to apply a Hadamard operator.

17
00:01:05,000 --> 00:01:09,000
So if we apply a Hadamard to a Z operator

18
00:01:09,000 --> 00:01:12,000
here, so we conjugate h, what do we get?

19
00:01:12,000 --> 00:01:15,000


20
00:01:15,000 --> 00:01:17,000
X, that's right.

21
00:01:17,000 --> 00:01:24,000
So U1 will be XXI, and U2 will be IXX,

22
00:01:24,000 --> 00:01:29,000
and this is because HZH is equal to X.

23
00:01:29,000 --> 00:01:33,000
And so in the Hadamard basis, we say the syndrome operator

24
00:01:33,000 --> 00:01:37,000
has become these, XXI and IXX.

25
00:01:37,000 --> 00:01:38,000
OK.

26
00:01:38,000 --> 00:01:40,000
So that was very fast.

27
00:01:40,000 --> 00:01:44,000
Now, the reason this is useful to go into

28
00:01:44,000 --> 00:01:50,000
is because it lets us revisit this famous code.

29
00:01:50,000 --> 00:01:56,000
Shor's 9-qubit code.

30
00:01:56,000 --> 00:01:59,000
The problem with a bit flip code here

31
00:01:59,000 --> 00:02:01,000
is that it only corrects for a bit flips.

32
00:02:01,000 --> 00:02:03,000
This only corrects for face flips,

33
00:02:03,000 --> 00:02:04,000
and you'd like to be able to correct

34
00:02:04,000 --> 00:02:07,000
for an arbitrary single qubit error, which

35
00:02:07,000 --> 00:02:10,000
is what the classical codes do, they

36
00:02:10,000 --> 00:02:12,000
correct for arbitrary single bit errors.

37
00:02:12,000 --> 00:02:17,000
But here, we have to correct both phase and bit value

38
00:02:17,000 --> 00:02:18,000
errors.

39
00:02:18,000 --> 00:02:22,000
And Shor 9-qubit code was the very first to ever do that.

40
00:02:22,000 --> 00:02:25,000
And when he came out with it, it was beautiful and obvious

41
00:02:25,000 --> 00:02:28,000
why it worked, but people didn't have a theory of why it worked

42
00:02:28,000 --> 00:02:31,000
and what it is a member of a family for.

43
00:02:31,000 --> 00:02:33,000
And I'll get a little into that when

44
00:02:33,000 --> 00:02:37,000
we see the conditions for quantitative error correction.

45
00:02:37,000 --> 00:02:40,000
But now that we have this formalism of what the syndrome

46
00:02:40,000 --> 00:02:43,000
operators are and the recovery operators are,

47
00:02:43,000 --> 00:02:46,000
we can easily see what the 9-qubit code is doing.

48
00:02:46,000 --> 00:02:50,000
So remember, the code parameters are n, k.

49
00:02:50,000 --> 00:02:52,000


50
00:02:52,000 --> 00:03:03,000
And for this, n is equal to 9, and K is equal to 1.

51
00:03:03,000 --> 00:03:05,000
OK.

52
00:03:05,000 --> 00:03:10,000
So the code words of the short code are these.

53
00:03:10,000 --> 00:03:27,000
0 is 000 plus 111 times 3 times normalized by square root of 8.

54
00:03:27,000 --> 00:03:44,000
And logical 1 is 0000 minus 111 times 3 times divided by 8.

55
00:03:44,000 --> 00:03:45,000
Square root.

56
00:03:45,000 --> 00:03:49,000
Now, what I want to give you is a syndrome operator fore

57
00:03:49,000 --> 00:03:52,000
Shor's 9-qubit code because that way

58
00:03:52,000 --> 00:03:55,000
you'll know what the entire error correction procedure is.

59
00:03:55,000 --> 00:03:57,000
You can figure out what the recovery operators

60
00:03:57,000 --> 00:04:00,000
are fairly straightforwardly.

61
00:04:00,000 --> 00:04:03,000
But the syndrome operators might not be so obvious.

62
00:04:03,000 --> 00:04:14,000


63
00:04:14,000 --> 00:04:30,000
They are Z1 Z2, Z2, Z3, Z4, Z5, Z5, Z6, Z7, Z8, Z8, Z8.

64
00:04:30,000 --> 00:04:34,000
And these correct for what kind of errors?

65
00:04:34,000 --> 00:04:37,000


66
00:04:37,000 --> 00:04:39,000
Yes, please.

67
00:04:39,000 --> 00:04:40,000
Bit flip errors.

68
00:04:40,000 --> 00:04:51,000


69
00:04:51,000 --> 00:04:54,000
And then perhaps the non obvious ones

70
00:04:54,000 --> 00:04:57,000
are the face flips syndrome operators.

71
00:04:57,000 --> 00:05:03,000
They are X1, X2, X3, X4, X5, X6.

72
00:05:03,000 --> 00:05:05,000
So that's one operator.

73
00:05:05,000 --> 00:05:15,000
And the other one is X4, X5, X6, X7, X8, X9.

74
00:05:15,000 --> 00:05:22,000
So altogether, we have 1, 2, 4, 6, 7, 8, 8 operators.

75
00:05:22,000 --> 00:05:24,000
It encloses 1 qubit.

76
00:05:24,000 --> 00:05:31,000
And this is not an accident that there always seems to be twos--

77
00:05:31,000 --> 00:05:33,000
one fewer syndrome operator than the number

78
00:05:33,000 --> 00:05:40,000
of qubits that are used to do the encoding.

79
00:05:40,000 --> 00:05:43,000
So we had a 3-qubit code here, we have two syndrome operators

80
00:05:43,000 --> 00:05:47,000
we have a 9-qubit code here, we have eight syndrome operators.

81
00:05:47,000 --> 00:05:48,000
There's a pattern to this.

82
00:05:48,000 --> 00:05:52,000
And that pattern we will not see in this semester's course,

83
00:05:52,000 --> 00:05:54,000
but it led to a beautiful PhD thesis

84
00:05:54,000 --> 00:05:57,000
from Caltech by Daniel Gottesman, which

85
00:05:57,000 --> 00:06:00,000
set the floor for something today

86
00:06:00,000 --> 00:06:02,000
known as stabilizer codes.

87
00:06:02,000 --> 00:06:04,000
And that's a beautiful formalism that

88
00:06:04,000 --> 00:06:08,000
is almost directly analogous to the formalism of linear codes

89
00:06:08,000 --> 00:06:10,000
for classical codes.

90
00:06:10,000 --> 00:06:13,000
And we don't have the time to cover that this semester,

91
00:06:13,000 --> 00:06:15,000
but it's a beautiful theory that you

92
00:06:15,000 --> 00:06:18,000
can get into if you take a second semester course.

93
00:06:18,000 --> 00:06:19,000
OK.

94
00:06:19,000 --> 00:06:22,000
What I want to do, though, is to take five minutes

95
00:06:22,000 --> 00:06:26,000
or so and just challenge you to give me an error.

96
00:06:26,000 --> 00:06:31,000
And then we'll work out the syndrome for that error

97
00:06:31,000 --> 00:06:32,000
for the 9-qubit code.

98
00:06:32,000 --> 00:06:35,000
I claim that every single qubit error

99
00:06:35,000 --> 00:06:41,000
you give me, that's an X, a Z, or Y, because Y

100
00:06:41,000 --> 00:06:44,000
is X times Z, with up to sines.

101
00:06:44,000 --> 00:06:49,000
There will be a unique value of the eight syndrome bits

102
00:06:49,000 --> 00:06:51,000
that we measure here.

103
00:06:51,000 --> 00:06:54,000
And we don't have to work them all out, but at least one

104
00:06:54,000 --> 00:06:58,000
of those syndrome bits should be a 1 instead of a 0

105
00:06:58,000 --> 00:07:04,000
showing me that there's an error associated with that syndrome.

106
00:07:04,000 --> 00:07:05,000
OK.

107
00:07:05,000 --> 00:07:09,000
So somebody give me an error specified by an X,

108
00:07:09,000 --> 00:07:14,000
Y, or a Z on a specified qubit, 1 through 9.

109
00:07:14,000 --> 00:07:16,000
Who's first?

110
00:07:16,000 --> 00:07:18,000
You've raised your hand too many times.

111
00:07:18,000 --> 00:07:20,000
Anybody else?

112
00:07:20,000 --> 00:07:22,000
This is an easy question.

113
00:07:22,000 --> 00:07:23,000
Yes, please.

114
00:07:23,000 --> 00:07:24,000
Yes.

115
00:07:24,000 --> 00:07:27,000
X on 5.

116
00:07:27,000 --> 00:07:34,000
So let's write a little table for an error, which is X on 5,

117
00:07:34,000 --> 00:07:36,000
in this case.

118
00:07:36,000 --> 00:07:43,000
Which syndrome operator is non-zero?

119
00:07:43,000 --> 00:07:46,000
OK.

120
00:07:46,000 --> 00:07:51,000
So I claim that that's covered right here.

121
00:07:51,000 --> 00:07:54,000
This pair of Z's is actually measuring

122
00:07:54,000 --> 00:07:57,000
the parity between qubits.

123
00:07:57,000 --> 00:08:00,000
So it says, are these two qubits the same?

124
00:08:00,000 --> 00:08:03,000
Are they both 0's or are they both 1's?

125
00:08:03,000 --> 00:08:06,000
If they're both 0's, then this is a 0.

126
00:08:06,000 --> 00:08:09,000
If one is a 0 and the other one is a 1,

127
00:08:09,000 --> 00:08:11,000
then the measurement gives you a 1 instead,

128
00:08:11,000 --> 00:08:14,000
because it sees the parity is different.

129
00:08:14,000 --> 00:08:16,000
Notice how it's always comparing two qubits.

130
00:08:16,000 --> 00:08:21,000
It never looks at the value of the encoded qubit.

131
00:08:21,000 --> 00:08:25,000
It looks at these patterns between qubits.

132
00:08:25,000 --> 00:08:28,000
So if you flip just the fifth qubit,

133
00:08:28,000 --> 00:08:31,000
then this suddenly will give you a minus sign

134
00:08:31,000 --> 00:08:35,000
and this will give you a minus sign.

135
00:08:35,000 --> 00:08:44,000
So we get Z4, Z5, and Z5, Z6 will be non-0.

136
00:08:44,000 --> 00:08:50,000
Now, if you flip a qubit like the fifth qubit,

137
00:08:50,000 --> 00:08:51,000
does that change the value of this syndrome?

138
00:08:51,000 --> 00:08:56,000


139
00:08:56,000 --> 00:08:59,000
We didn't go into the phase flip code very much,

140
00:08:59,000 --> 00:09:03,000
but there should be a fast way by which you

141
00:09:03,000 --> 00:09:08,000
can argue it does not change the syndrome measurement value.

142
00:09:08,000 --> 00:09:10,000
Why is that?

143
00:09:10,000 --> 00:09:13,000
And it's just the idea that this error

144
00:09:13,000 --> 00:09:16,000
commutes with the measurement observable.

145
00:09:16,000 --> 00:09:18,000
And if you commute with the measurement observable,

146
00:09:18,000 --> 00:09:22,000
you don't change the measurement result.

147
00:09:22,000 --> 00:09:26,000
So X5 commutes with this because it's just

148
00:09:26,000 --> 00:09:31,000
another X. And so it doesn't change the measurement result.

149
00:09:31,000 --> 00:09:34,000
But the reason that's true is exactly the one

150
00:09:34,000 --> 00:09:35,000
that you describe.

151
00:09:35,000 --> 00:09:39,000
So it's more fundamental to say what you said.

152
00:09:39,000 --> 00:09:41,000
And the upshot is that we can use this simpler argument

153
00:09:41,000 --> 00:09:44,000
of any observable that can be used with our measurement

154
00:09:44,000 --> 00:09:48,000
observable cannot change the measurement value when you are

155
00:09:48,000 --> 00:09:51,000
making these larger arguments.

156
00:09:51,000 --> 00:09:52,000
OK.

157
00:09:52,000 --> 00:09:56,000
So another error.

158
00:09:56,000 --> 00:09:57,000
That was an easy one.

159
00:09:57,000 --> 00:10:05,000


160
00:10:05,000 --> 00:10:07,000
Y6.

161
00:10:07,000 --> 00:10:08,000
Y6.

162
00:10:08,000 --> 00:10:09,000
Right.

163
00:10:09,000 --> 00:10:10,000
Great.

164
00:10:10,000 --> 00:10:11,000
OK.

165
00:10:11,000 --> 00:10:20,000
So Y6 is a product of Z6 and X6, so you can think

166
00:10:20,000 --> 00:10:22,000
that both errors occurred.

167
00:10:22,000 --> 00:10:29,000
Now, that X6 is clearly going to change this operator

168
00:10:29,000 --> 00:10:32,000
here and not this operator.

169
00:10:32,000 --> 00:10:33,000
So we get a Z5, Z6.

170
00:10:33,000 --> 00:10:38,000


171
00:10:38,000 --> 00:10:42,000
But the X6 is going to commute with all of these.

172
00:10:42,000 --> 00:10:45,000
On the other hand, the Y6--

173
00:10:45,000 --> 00:10:50,000
excuse me, the Z6, is going to commute with all of these.

174
00:10:50,000 --> 00:10:56,000
Remember these two are the phase flip error syndrome.

175
00:10:56,000 --> 00:11:03,000


176
00:11:03,000 --> 00:11:08,000
And so the Z6 is going to trigger the X1,

177
00:11:08,000 --> 00:11:17,000
X2, X3, X4, X5, X6 operator and that's going to be equal to 1

178
00:11:17,000 --> 00:11:18,000
when you do the measurement.

179
00:11:18,000 --> 00:11:21,000


180
00:11:21,000 --> 00:11:23,000
I'm missing one, too.

181
00:11:23,000 --> 00:11:24,000
Right?

182
00:11:24,000 --> 00:11:26,000
It's also going to trigger the last one.

183
00:11:26,000 --> 00:11:32,000
So that's X4, X5, X6, X7, X8, X9.

184
00:11:32,000 --> 00:11:35,000


185
00:11:35,000 --> 00:11:37,000
So in many ways, what you can do is,

186
00:11:37,000 --> 00:11:43,000
you can take this combination here, the first three qubits,

187
00:11:43,000 --> 00:11:46,000
is actually like one monster qubit.

188
00:11:46,000 --> 00:11:48,000
And here's another monster qubit.

189
00:11:48,000 --> 00:11:56,000
So this is like X, 1, 2, 3, X, 4, 5, 6 is equal to this thing.

190
00:11:56,000 --> 00:12:04,000
This is like X 4, 5, 6, X 7, 8, 9, is equal to this thing.

191
00:12:04,000 --> 00:12:09,000
So you can see this is just like the bit flip cases here,

192
00:12:09,000 --> 00:12:14,000
but with monster grouping of three qubits acting as one.

193
00:12:14,000 --> 00:12:17,000
And the reason that's true is because we have the structure

194
00:12:17,000 --> 00:12:21,000
up here of a plus plus plus.

195
00:12:21,000 --> 00:12:24,000
If I were to write out that whole state,

196
00:12:24,000 --> 00:12:29,000
this 0000 plus 111 cubed--

197
00:12:29,000 --> 00:12:29,000
see?

198
00:12:29,000 --> 00:12:32,000
I started dropping my cats.

199
00:12:32,000 --> 00:12:44,000
This is 000 plus 111, 000 plus 111, 000 plus 111, like that.

200
00:12:44,000 --> 00:12:46,000
And so this is, if you look at it from afar,

201
00:12:46,000 --> 00:12:50,000
it looks like a monster plus plus plus,

202
00:12:50,000 --> 00:12:57,000
and then the 000 minus 111 is something like a minus minus

203
00:12:57,000 --> 00:12:59,000
minus.

204
00:12:59,000 --> 00:13:02,000
And so that's the phase flip code.

205
00:13:02,000 --> 00:13:05,000
That's why our error syndromes look like these groupings

206
00:13:05,000 --> 00:13:07,000
of excess together.

207
00:13:07,000 --> 00:13:09,000
OK.

208
00:13:09,000 --> 00:13:11,000
So this is a game that you can play,

209
00:13:11,000 --> 00:13:12,000
and what you'd like to do is to figure out

210
00:13:12,000 --> 00:13:16,000
the minimum number of these kinds of syndrome operators

211
00:13:16,000 --> 00:13:20,000
in order to be able to uniquely determine a given error.

212
00:13:20,000 --> 00:13:23,000
And this gives you bounds on how many

213
00:13:23,000 --> 00:13:26,000
qubits you need in order to correct what number of errors

214
00:13:26,000 --> 00:13:27,000
and so forth.

215
00:13:27,000 --> 00:13:30,000


