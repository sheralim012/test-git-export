0
00:00:00,000 --> 00:00:00,000


1
00:00:00,000 --> 00:00:02,000
So let me now switch to a much simpler code

2
00:00:02,000 --> 00:00:04,000
that we can still learn some things from.

3
00:00:04,000 --> 00:00:14,000
So the next code I want to talk about is the trivial code,

4
00:00:14,000 --> 00:00:17,000
where our stabilizer space--

5
00:00:17,000 --> 00:00:30,000
so the code space just looks like n minus k0's tensored

6
00:00:30,000 --> 00:00:36,000
with a totally arbitrary state on k qubits.

7
00:00:36,000 --> 00:00:39,000


8
00:00:39,000 --> 00:00:41,000
So we get a few things out of this.

9
00:00:41,000 --> 00:00:45,000
We get a reminder that a quantum code is just a subspace.

10
00:00:45,000 --> 00:00:49,000
It doesn't have to have any useful properties.

11
00:00:49,000 --> 00:00:53,000
This is mathematically as much a code as anything else.

12
00:00:53,000 --> 00:00:57,000
Of course, its distance is not very good.

13
00:00:57,000 --> 00:01:00,000
But it's no less a code than the Shor nine-qubit code.

14
00:01:00,000 --> 00:01:04,000


15
00:01:04,000 --> 00:01:09,000
So we can see some of this claim here illustrated

16
00:01:09,000 --> 00:01:10,000
for the trivial code.

17
00:01:10,000 --> 00:01:14,000
So first, let's write down the stabilizer group.

18
00:01:14,000 --> 00:01:17,000
So what is the group of Paulis that

19
00:01:17,000 --> 00:01:22,000
stabilize these states for which these states are plus one item

20
00:01:22,000 --> 00:01:23,000
states.

21
00:01:23,000 --> 00:01:26,000


22
00:01:26,000 --> 00:01:27,000
Or maybe I should-- yeah, can someone

23
00:01:27,000 --> 00:01:30,000
named a Pauli that stabilizes this state?

24
00:01:30,000 --> 00:01:32,000


25
00:01:32,000 --> 00:01:34,000
z1, right.

26
00:01:34,000 --> 00:01:38,000
So if I act on this with z1, there's

27
00:01:38,000 --> 00:01:41,000
a zero in the first qubit, so it's going to be a plus one.

28
00:01:41,000 --> 00:01:45,000
And of course, once you've got z1,

29
00:01:45,000 --> 00:01:50,000
you can imagine you get all of the z's up through n minus k.

30
00:01:50,000 --> 00:01:54,000
Because you have zeros in all those positions.

31
00:01:54,000 --> 00:01:56,000
And these are clearly independent also.

32
00:01:56,000 --> 00:01:58,000
There's no way to make a non-trivial product

33
00:01:58,000 --> 00:02:01,000
of these equal to the identity.

34
00:02:01,000 --> 00:02:04,000
Are there any more stabilizers?

35
00:02:04,000 --> 00:02:06,000
I mean, x1 through xn minus k doesn't

36
00:02:06,000 --> 00:02:08,000
seem like that's going to work.

37
00:02:08,000 --> 00:02:10,000
Anything else?

38
00:02:10,000 --> 00:02:15,000
So Vs, the set of these states for all possible psi.

39
00:02:15,000 --> 00:02:17,000
So it might be that for some psi,

40
00:02:17,000 --> 00:02:18,000
there's something that stabilizes it.

41
00:02:18,000 --> 00:02:21,000
But you would need something that works for all states spi.

42
00:02:21,000 --> 00:02:24,000


43
00:02:24,000 --> 00:02:25,000
Yeah?

44
00:02:25,000 --> 00:02:26,000
Identity?

45
00:02:26,000 --> 00:02:28,000
The identity, yes.

46
00:02:28,000 --> 00:02:30,000
I usually do not list the identity

47
00:02:30,000 --> 00:02:34,000
in a list of generators, because we always have it for free.

48
00:02:34,000 --> 00:02:36,000
So when I say--

49
00:02:36,000 --> 00:02:38,000
not so obvious I think from the terminology.

50
00:02:38,000 --> 00:02:41,000
But when I say I've got a bunch of generators,

51
00:02:41,000 --> 00:02:44,000
and I do this sort of bracket notation,

52
00:02:44,000 --> 00:02:46,000
I mean all products of these generators.

53
00:02:46,000 --> 00:02:48,000
But that includes the empty product,

54
00:02:48,000 --> 00:02:54,000
which I just by definition take to be the identity.

55
00:02:54,000 --> 00:02:58,000
But yes, identity definitely stabilizes everything.

56
00:02:58,000 --> 00:02:59,000
Yeah?

57
00:02:59,000 --> 00:03:01,000
[INAUDIBLE]?

58
00:03:01,000 --> 00:03:03,000
Yes, but that would be contained in this.

59
00:03:03,000 --> 00:03:04,000
So, yeah.

60
00:03:04,000 --> 00:03:06,000


61
00:03:06,000 --> 00:03:09,000
People having trouble coming up with more.

62
00:03:09,000 --> 00:03:11,000
I didn't want to argue that there are no more.

63
00:03:11,000 --> 00:03:17,000


64
00:03:17,000 --> 00:03:20,000
OK, so let's try and think about that.

65
00:03:20,000 --> 00:03:23,000
Remember, so I have n minus k independent generators.

66
00:03:23,000 --> 00:03:27,000
What dimension do I have for a stabilizer space?

67
00:03:27,000 --> 00:03:29,000
You know, if I have a subspace stabilized

68
00:03:29,000 --> 00:03:30,000
by n minus k independent polys.

69
00:03:30,000 --> 00:03:33,000
Do you remember how to calculate the dimension of it?

70
00:03:33,000 --> 00:03:36,000


71
00:03:36,000 --> 00:03:39,000
So I start with two to the n dimensions.

72
00:03:39,000 --> 00:03:41,000
Every time I add a stabilizer, what happens?

73
00:03:41,000 --> 00:03:43,000


74
00:03:43,000 --> 00:03:44,000
Cut it down by half.

75
00:03:44,000 --> 00:03:47,000
Good so I do that n minus k times.

76
00:03:47,000 --> 00:03:48,000
What am I left with?

77
00:03:48,000 --> 00:03:51,000


78
00:03:51,000 --> 00:03:53,000
Two to the k, right.

79
00:03:53,000 --> 00:03:54,000
And what dimension is this?

80
00:03:54,000 --> 00:03:59,000


81
00:03:59,000 --> 00:04:00,000
Two to the k, right?

82
00:04:00,000 --> 00:04:02,000
Because I'm starting with psi as a two to the k

83
00:04:02,000 --> 00:04:04,000
dimensional state, and I'm applying isometry

84
00:04:04,000 --> 00:04:06,000
into this larger space.

85
00:04:06,000 --> 00:04:09,000
Or if you like, I can just run over a basis of this,

86
00:04:09,000 --> 00:04:12,000
and each one of these are going to be orthogonal states

87
00:04:12,000 --> 00:04:13,000
in the subspace.

88
00:04:13,000 --> 00:04:15,000
So I don't have any room for more generators.

89
00:04:15,000 --> 00:04:17,000
If I had another inventor generator,

90
00:04:17,000 --> 00:04:19,000
I would cut down the dimension too low.

91
00:04:19,000 --> 00:04:22,000
So that's a good way of knowing when it's time to stop.

92
00:04:22,000 --> 00:04:25,000
I've figured out a bunch of generators.

93
00:04:25,000 --> 00:04:26,000
And then I know by dimension counting

94
00:04:26,000 --> 00:04:28,000
if I had any more, that would be too much.

95
00:04:28,000 --> 00:04:31,000
So I stop here.

96
00:04:31,000 --> 00:04:32,000
So these are the stabilizers.

97
00:04:32,000 --> 00:04:38,000


98
00:04:38,000 --> 00:04:41,000
Let's compute the normalizer group now.

99
00:04:41,000 --> 00:04:46,000
So normalizer group is going to include all of S. What

100
00:04:46,000 --> 00:04:48,000
are some operators that commute with everything in S

101
00:04:48,000 --> 00:04:50,000
that I haven't already listed?

102
00:04:50,000 --> 00:04:55,000


103
00:04:55,000 --> 00:04:56,000
Pair of x's?

104
00:04:56,000 --> 00:05:03,000


105
00:05:03,000 --> 00:05:09,000
A pair of x's would commute with the product of all these Z's,

106
00:05:09,000 --> 00:05:11,000
but would not commute with them individually.

107
00:05:11,000 --> 00:05:12,000
That's a good point.

108
00:05:12,000 --> 00:05:18,000
If I take x1, x2, it will not commute with Z1, for example.

109
00:05:18,000 --> 00:05:22,000
But it will commute with Z1 times Z2.

110
00:05:22,000 --> 00:05:27,000
Any operator in the [? q ?] to k subspace.

111
00:05:27,000 --> 00:05:29,000
Any operator in what?

112
00:05:29,000 --> 00:05:30,000
In the [? q to ?] k?

113
00:05:30,000 --> 00:05:31,000
Right.

114
00:05:31,000 --> 00:05:34,000
So any operator on these qubits.

115
00:05:34,000 --> 00:05:36,000
So these are the last k qubits.

116
00:05:36,000 --> 00:05:46,000
So I can put xn minus k plus 1 through xn z n minus k plus 1

117
00:05:46,000 --> 00:05:47,000
through zn.

118
00:05:47,000 --> 00:05:50,000


119
00:05:50,000 --> 00:05:52,000
And that covers all of those qubits.

120
00:05:52,000 --> 00:05:55,000


121
00:05:55,000 --> 00:05:58,000
And in fact, that's everything that we have here.

122
00:05:58,000 --> 00:06:00,000
Those are all of the remaining vectors.

123
00:06:00,000 --> 00:06:05,000


124
00:06:05,000 --> 00:06:08,000
One way we can see this, by the way-- you know, why do we

125
00:06:08,000 --> 00:06:09,000
know that we can stop here?

126
00:06:09,000 --> 00:06:11,000
One reason that we can see this is in terms

127
00:06:11,000 --> 00:06:13,000
of linear algebra over f2.

128
00:06:13,000 --> 00:06:19,000
So if you look at l of S, the dimension of l of S

129
00:06:19,000 --> 00:06:21,000
is equal to n minus k.

130
00:06:21,000 --> 00:06:24,000


131
00:06:24,000 --> 00:06:27,000
You have a minus k dimensional stabilizer space.

132
00:06:27,000 --> 00:06:36,000
And so if you look at the dimension of l of N of S,

133
00:06:36,000 --> 00:06:38,000
it's going to be--

134
00:06:38,000 --> 00:06:40,000
this is the space perpendicular to this one.

135
00:06:40,000 --> 00:06:42,000
So what you do--

136
00:06:42,000 --> 00:06:45,000
this is true in any field--

137
00:06:45,000 --> 00:06:50,000
say I have a space of dimension d, the space

138
00:06:50,000 --> 00:06:52,000
that's perpendicular to it is the dimension

139
00:06:52,000 --> 00:06:55,000
of the ambient space minus d.

140
00:06:55,000 --> 00:07:02,000
So this is going to be dimension of f2 to the 2n minus

141
00:07:02,000 --> 00:07:07,000
dimension of l of S. Because it's

142
00:07:07,000 --> 00:07:09,000
all the vectors in f2 to the 2n and that

143
00:07:09,000 --> 00:07:11,000
are orthogonal to these.

144
00:07:11,000 --> 00:07:14,000
And basically, every independent vector

145
00:07:14,000 --> 00:07:17,000
here gives you a new constraint, which cuts down

146
00:07:17,000 --> 00:07:19,000
the dimensionality by one.

147
00:07:19,000 --> 00:07:23,000
So we're left with n plus k.

148
00:07:23,000 --> 00:07:24,000
Right?

149
00:07:24,000 --> 00:07:27,000
2n minus parenthesis n minus k.

150
00:07:27,000 --> 00:07:31,000
So we can think of that as we have

151
00:07:31,000 --> 00:07:37,000
the original n minus k from the stabilizers,

152
00:07:37,000 --> 00:07:40,000
plus 2k from the logical operators.

153
00:07:40,000 --> 00:07:45,000
So this is kind of another justification

154
00:07:45,000 --> 00:07:47,000
of why the logical operators look

155
00:07:47,000 --> 00:07:52,000
like this, why we have k logical x's and k logical Z's

156
00:07:52,000 --> 00:07:55,000
corresponding to our k logical qubits.

157
00:07:55,000 --> 00:07:57,000
This is sort of an example.

158
00:07:57,000 --> 00:07:59,000
This trivial code is kind of an example of what

159
00:07:59,000 --> 00:08:01,000
happens for a general code.

160
00:08:01,000 --> 00:08:02,000
But what's nice about it, the reason

161
00:08:02,000 --> 00:08:04,000
why I bother to mention it, is that it's

162
00:08:04,000 --> 00:08:08,000
kind of a without loss of generality example.

163
00:08:08,000 --> 00:08:12,000
So this is kind of a--

164
00:08:12,000 --> 00:08:16,000
when I first saw this, I was very surprised by this fact.

165
00:08:16,000 --> 00:08:19,000
But later I think it helps shed light

166
00:08:19,000 --> 00:08:21,000
on the structure of these codes.

167
00:08:21,000 --> 00:08:40,000
So I claim that if c is equal to VS for some stabilizer group S,

168
00:08:40,000 --> 00:08:50,000
then there exists a unitary U such that U times the code

169
00:08:50,000 --> 00:08:56,000
space is equivalent to the trivial code.

170
00:08:56,000 --> 00:08:57,000
I don't know why I wrote equivalence.

171
00:08:57,000 --> 00:09:01,000
Is equal to the trivial code space.

172
00:09:01,000 --> 00:09:06,000


173
00:09:06,000 --> 00:09:15,000
And when you act on a subspace, the stabilizer group

174
00:09:15,000 --> 00:09:16,000
also transforms.

175
00:09:16,000 --> 00:09:21,000
So the UC is stabilized by USU dagger.

176
00:09:21,000 --> 00:09:24,000


177
00:09:24,000 --> 00:09:25,000
And so I claim that this of course

178
00:09:25,000 --> 00:09:31,000
would be equal to the group generated by Z1 through Z n

179
00:09:31,000 --> 00:09:38,000
minus k for some k.

180
00:09:38,000 --> 00:09:47,000
Well actually, for k equal log the dimension of c.

181
00:09:47,000 --> 00:09:49,000


