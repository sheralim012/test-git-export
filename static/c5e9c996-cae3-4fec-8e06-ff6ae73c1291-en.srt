0
00:00:00,000 --> 00:00:00,000


1
00:00:00,000 --> 00:00:02,000
So let me tell you the proof of this.

2
00:00:02,000 --> 00:00:06,000
So the idea of Gottesman-Knill is we cannot afford to write

3
00:00:06,000 --> 00:00:09,000
down the state of the wave vector.

4
00:00:09,000 --> 00:00:11,000
But we can maintain it--

5
00:00:11,000 --> 00:00:14,000
we can think about the state just in terms of the stabilizer

6
00:00:14,000 --> 00:00:15,000
generators.

7
00:00:15,000 --> 00:00:27,000
So the idea is you keep track of the stabilizers,

8
00:00:27,000 --> 00:00:32,000
more precisely the stabilizer generators.

9
00:00:32,000 --> 00:00:34,000
OK, so let's see what this looks like.

10
00:00:34,000 --> 00:00:47,000
So initially, the state is just n copies of the 0 state.

11
00:00:47,000 --> 00:00:51,000
So I can think of it as a one-dimensional stabilizer

12
00:00:51,000 --> 00:00:52,000
subspace.

13
00:00:52,000 --> 00:00:55,000
So remind me, what are the polys that stabilize this subspace?

14
00:00:55,000 --> 00:01:04,000


15
00:01:04,000 --> 00:01:07,000
Yeah.

16
00:01:07,000 --> 00:01:08,000
Say that again, z what?

17
00:01:08,000 --> 00:01:09,000
[INAUDIBLE]

18
00:01:09,000 --> 00:01:10,000


19
00:01:10,000 --> 00:01:13,000
Right, so a z on each individual qubit.

20
00:01:13,000 --> 00:01:15,000
So the stabilizer subgroup you can think of as

21
00:01:15,000 --> 00:01:23,000
generated by z1, z2, through zn.

22
00:01:23,000 --> 00:01:24,000
Right?

23
00:01:24,000 --> 00:01:26,000
Because if the plus-1 eigenstate of zi,

24
00:01:26,000 --> 00:01:30,000
that means that the i-th qubit must

25
00:01:30,000 --> 00:01:31,000
be in the [INAUDIBLE] 0 state.

26
00:01:31,000 --> 00:01:34,000


27
00:01:34,000 --> 00:01:37,000
And it's crucial I keep track of the generators

28
00:01:37,000 --> 00:01:39,000
here, right, because there are 2 to the n possible products

29
00:01:39,000 --> 00:01:40,000
of these.

30
00:01:40,000 --> 00:01:41,000
I cannot write down all of those.

31
00:01:41,000 --> 00:01:42,000
But that would be wasteful.

32
00:01:42,000 --> 00:01:45,000
You know, I just need to write down the generators,

33
00:01:45,000 --> 00:01:47,000
and then I know the whole space.

34
00:01:47,000 --> 00:01:50,000
And I'm going to write these in terms of operators,

35
00:01:50,000 --> 00:01:54,000
but hopefully you should see that I can just as well do it

36
00:01:54,000 --> 00:01:57,000
in terms of the f2 linear algebra perspective.

37
00:01:57,000 --> 00:02:00,000
Like, I could think of these as vectors in f2 to the 2n,

38
00:02:00,000 --> 00:02:03,000
and it's really just saying the same thing.

39
00:02:03,000 --> 00:02:10,000
So when I perform a unitary, then I'm

40
00:02:10,000 --> 00:02:22,000
going to map this to uz1, u-dagger through uzn, u-dagger.

41
00:02:22,000 --> 00:02:25,000
So I now need to update these stabilizers.

42
00:02:25,000 --> 00:02:33,000
But I can do this with f2 linear algebra,

43
00:02:33,000 --> 00:02:37,000
right, because this unitary just corresponds

44
00:02:37,000 --> 00:02:41,000
to multiplying by some symplectic matrix

45
00:02:41,000 --> 00:02:45,000
and maybe performing a phase.

46
00:02:45,000 --> 00:02:48,000
And you might worry big Clifford is hard to describe,

47
00:02:48,000 --> 00:02:51,000
but the big Clifford I can always break up into--

48
00:02:51,000 --> 00:02:53,000
in fact, it's given to me as a circuit, right.

49
00:02:53,000 --> 00:02:55,000
And the circuit is just a sequence

50
00:02:55,000 --> 00:02:57,000
of one and two cubic gates--

51
00:02:57,000 --> 00:02:59,000
Hadamards, phase gates, controlled-NOT.

52
00:02:59,000 --> 00:03:01,000
And so, for each one of those it's

53
00:03:01,000 --> 00:03:06,000
a very simple calculation to update these stabilizers.

54
00:03:06,000 --> 00:03:08,000
And so, as I go through the circuit,

55
00:03:08,000 --> 00:03:13,000
I just track my n different stabilizers as they evolve.

56
00:03:13,000 --> 00:03:16,000
OK?

57
00:03:16,000 --> 00:03:18,000
So now I've done my circuit.

58
00:03:18,000 --> 00:03:21,000
I have a pure state at the end, and it remains only

59
00:03:21,000 --> 00:03:24,000
to simulate measurement.

60
00:03:24,000 --> 00:03:26,000
So measurement is the tricky part.

61
00:03:26,000 --> 00:03:31,000


62
00:03:31,000 --> 00:03:34,000
Now, because I can kind of rotate one stabilizer

63
00:03:34,000 --> 00:03:44,000
into any other one, it suffices to measure z1.

64
00:03:44,000 --> 00:03:47,000
And because I can do adaptive measurements,

65
00:03:47,000 --> 00:03:49,000
let's say I want to measure all the qubits-- like I measure z1,

66
00:03:49,000 --> 00:03:51,000
then z2, then da-da-da, zn--

67
00:03:51,000 --> 00:03:54,000
that still fits within this adaptive--

68
00:03:54,000 --> 00:03:55,000
where'd I write it?

69
00:03:55,000 --> 00:03:57,000
Up here, this adaptive framework.

70
00:03:57,000 --> 00:03:59,000
Right, I could do z1 and then swap qubits 1 and 2, and then

71
00:03:59,000 --> 00:04:02,000
measure z1 again, then swap qubits 1 and 3 and measure z1

72
00:04:02,000 --> 00:04:03,000
again.

73
00:04:03,000 --> 00:04:05,000
So if I can just measure z1, I can basically

74
00:04:05,000 --> 00:04:08,000
measure all the qubits in the computational basis

75
00:04:08,000 --> 00:04:10,000
or whatever subset I feel like.

76
00:04:10,000 --> 00:04:13,000


77
00:04:13,000 --> 00:04:17,000
OK, so how do I measure z1?

78
00:04:17,000 --> 00:04:21,000
So there's a few cases here.

79
00:04:21,000 --> 00:04:24,000
Suppose that z1 is contained in s.

80
00:04:24,000 --> 00:04:26,000


81
00:04:26,000 --> 00:04:31,000
Then what happens with my measurement?

82
00:04:31,000 --> 00:04:34,000
What outcome will I get?

83
00:04:34,000 --> 00:04:35,000
Or will it be random?

84
00:04:35,000 --> 00:04:52,000


85
00:04:52,000 --> 00:04:57,000
So I have a state which is stabilized by s, right.

86
00:04:57,000 --> 00:05:05,000
So that means that if I act on the state with anything of s,

87
00:05:05,000 --> 00:05:08,000
I get back the state itself.

88
00:05:08,000 --> 00:05:11,000
z1 is in s, and I'm measuring z1.

89
00:05:11,000 --> 00:05:14,000
So what is the outcome of that measurement going to be?

90
00:05:14,000 --> 00:05:17,000


91
00:05:17,000 --> 00:05:19,000
What's that?

92
00:05:19,000 --> 00:05:21,000
Plus 1, right.

93
00:05:21,000 --> 00:05:24,000
My state is a plus-1 eigenspace of everything of s,

94
00:05:24,000 --> 00:05:26,000
including z1.

95
00:05:26,000 --> 00:05:27,000
So if I'm in an eigenstate and I measure,

96
00:05:27,000 --> 00:05:30,000
I get a deterministic answer.

97
00:05:30,000 --> 00:05:35,000
So if z1 is in s, outcome is plus 1.

98
00:05:35,000 --> 00:05:36,000
Great.

99
00:05:36,000 --> 00:05:38,000
Now, not quite done.

100
00:05:38,000 --> 00:05:39,000
I'm doing this adaptively, right.

101
00:05:39,000 --> 00:05:41,000
I'm going to make a measurement and then do some more unitary,

102
00:05:41,000 --> 00:05:43,000
then another measurement.

103
00:05:43,000 --> 00:05:45,000
So I have to worry about the post-measurement state.

104
00:05:45,000 --> 00:05:48,000
So how does the state change after the measurement?

105
00:05:48,000 --> 00:05:52,000


106
00:05:52,000 --> 00:05:53,000
Getting a-- shaking a head.

107
00:05:53,000 --> 00:05:57,000


108
00:05:57,000 --> 00:06:01,000
It doesn't change because--?

109
00:06:01,000 --> 00:06:03,000
Right, because it's an eigenstate.

110
00:06:03,000 --> 00:06:04,000
And so when I get an eigenstate, I

111
00:06:04,000 --> 00:06:06,000
have a deterministic answer and no change.

112
00:06:06,000 --> 00:06:13,000
So outcome plus 1, state unchanged.

113
00:06:13,000 --> 00:06:15,000
Great.

114
00:06:15,000 --> 00:06:22,000
So now there's a different case, which

115
00:06:22,000 --> 00:06:30,000
will give me outcome minus 1, state unchanged.

116
00:06:30,000 --> 00:06:34,000
What is the condition that would give rise to this outcome?

117
00:06:34,000 --> 00:06:36,000
Yeah?

118
00:06:36,000 --> 00:06:37,000
Exactly.

119
00:06:37,000 --> 00:06:46,000
So if I just say, if minus z1 is in the stabilizer,

120
00:06:46,000 --> 00:06:48,000
then the outcome is--

121
00:06:48,000 --> 00:06:49,000
that it's the other way around.

122
00:06:49,000 --> 00:06:52,000
Then I deterministically get outcome minus 1.

123
00:06:52,000 --> 00:06:54,000
Because I'm stabilized by minus z1

124
00:06:54,000 --> 00:06:57,000
means that I'm a plus-1 eigenstate of that operator

125
00:06:57,000 --> 00:07:01,000
or a minus-1 eigenstate of z1.

126
00:07:01,000 --> 00:07:06,000
OK, now the next case is at plus or minus z1

127
00:07:06,000 --> 00:07:08,000
is not contained in s.

128
00:07:08,000 --> 00:07:19,000


129
00:07:19,000 --> 00:07:30,000
So as an aside, I claim that s here is equal to n of s.

130
00:07:30,000 --> 00:07:31,000
And this is not always true.

131
00:07:31,000 --> 00:07:35,000
In general, n of s can be bigger than s.

132
00:07:35,000 --> 00:07:38,000
But I claim that if you have a one-dimensional stabilizer

133
00:07:38,000 --> 00:07:43,000
subspace, then s is equal to n of s.

134
00:07:43,000 --> 00:07:47,000
So there is a few reasons for this.

135
00:07:47,000 --> 00:07:56,000
One of them, remember that if s has size 2 to the k,

136
00:07:56,000 --> 00:08:01,000
then n of s has size--

137
00:08:01,000 --> 00:08:04,000
sorry, 2 to the n minus k, then n of s

138
00:08:04,000 --> 00:08:09,000
has size 2 to the n of s, 2 to the n plus k.

139
00:08:09,000 --> 00:08:10,000
That's something we derived before.

140
00:08:10,000 --> 00:08:13,000
So if k is 0, then these have the same size.

141
00:08:13,000 --> 00:08:19,000
But n of s contains s.

142
00:08:19,000 --> 00:08:21,000
And they have the same size, so they must be the same set.

143
00:08:21,000 --> 00:08:27,000


144
00:08:27,000 --> 00:08:35,000
Another argument for this is that if you

145
00:08:35,000 --> 00:08:39,000
look at the things that are in n of s, but not s,

146
00:08:39,000 --> 00:08:42,000
these are things which cause non-trivial changes,

147
00:08:42,000 --> 00:08:45,000
but leave you within the subspace.

148
00:08:45,000 --> 00:08:47,000
But if you're subspace is one-dimensional,

149
00:08:47,000 --> 00:08:53,000
then there are no operators that will map you

150
00:08:53,000 --> 00:08:54,000
to a different state.

151
00:08:54,000 --> 00:08:57,000


152
00:08:57,000 --> 00:08:59,000
There are no other states to map you to, right.

153
00:08:59,000 --> 00:09:01,000
All you can do is change the phase.

154
00:09:01,000 --> 00:09:05,000
So there can be nothing in n of s that that's outside of s,

155
00:09:05,000 --> 00:09:08,000
except for minus identities.

156
00:09:08,000 --> 00:09:16,000
So what that means is that plus or minus z1 is also not

157
00:09:16,000 --> 00:09:22,000
in n of s, which means there exists--

158
00:09:22,000 --> 00:09:29,000
so let's say that s, we've been tracking the generators,

159
00:09:29,000 --> 00:09:31,000
and they're si through sn minus k.

160
00:09:31,000 --> 00:09:40,000
That means that there exists some j, such that z1 and sj

161
00:09:40,000 --> 00:09:41,000
anti-commute.

162
00:09:41,000 --> 00:09:49,000


163
00:09:49,000 --> 00:09:50,000
So at least one, right.

164
00:09:50,000 --> 00:09:52,000
That's what it means to not be in the normalizer.

165
00:09:52,000 --> 00:09:55,000
It means you don't commute with all of them, i.e.

166
00:09:55,000 --> 00:09:57,000
you anti-commute with at least one of them, maybe more.

167
00:09:57,000 --> 00:10:08,000


168
00:10:08,000 --> 00:10:14,000
So what I would like to do is get to the situation

169
00:10:14,000 --> 00:10:19,000
where z1 only anti-commutes with one of them, OK.

170
00:10:19,000 --> 00:10:21,000
So how am I going to do this?

171
00:10:21,000 --> 00:10:30,000
So first, reorder so that instead of it just being sum

172
00:10:30,000 --> 00:10:44,000
sj, it's s1, so that z1,s1 is equal to minus s1,z1.

173
00:10:44,000 --> 00:10:49,000
I mean, I have n things in some arbitrary order.

174
00:10:49,000 --> 00:10:49,000
Oh, I'm sorry.

175
00:10:49,000 --> 00:10:52,000
I wrote s1 through sn minus k.

176
00:10:52,000 --> 00:10:53,000
That should have been just sn, right,

177
00:10:53,000 --> 00:10:57,000
because I have n stabilizer generators--

178
00:10:57,000 --> 00:11:00,000
because I have one-dimensional state.

179
00:11:00,000 --> 00:11:04,000
So I don't care about the order of the generators.

180
00:11:04,000 --> 00:11:08,000
So let's just call the one that I know I anti-commute with s1.

181
00:11:08,000 --> 00:11:11,000
Now there might be more that I anti-commute with.

182
00:11:11,000 --> 00:11:18,000
So suppose there exists some other j, more than one,

183
00:11:18,000 --> 00:11:26,000
such that z1 and sj anti-commute.

184
00:11:26,000 --> 00:11:29,000


185
00:11:29,000 --> 00:11:32,000
I only want z1 to anti-commute with one of the generators,

186
00:11:32,000 --> 00:11:36,000
not with all of them, or not with many of them.

187
00:11:36,000 --> 00:11:38,000
So what can I do about this?

188
00:11:38,000 --> 00:11:40,000
Well I have a few freedom in my choices of generator.

189
00:11:40,000 --> 00:11:43,000
So first of all, I mean, I can obviously reorder them.

190
00:11:43,000 --> 00:11:45,000
That's what I just did.

191
00:11:45,000 --> 00:11:47,000
But I can also multiply them by each other,

192
00:11:47,000 --> 00:11:50,000
and I will still get a valid set of generators.

193
00:11:50,000 --> 00:11:52,000
So it's like if I take a linearly independent set

194
00:11:52,000 --> 00:11:55,000
of vectors and I add one vector to another one,

195
00:11:55,000 --> 00:11:59,000
still the linearly independent, still generates the same set.

196
00:11:59,000 --> 00:12:08,000
So what I can do is replace sj with s1 times sj, OK.

197
00:12:08,000 --> 00:12:10,000
They still generate the same set because I'm just

198
00:12:10,000 --> 00:12:12,000
taking all products of them.

199
00:12:12,000 --> 00:12:21,000
And so anytime I would have used sj prime, I just use these two.

200
00:12:21,000 --> 00:12:23,000
And it definitely is--

201
00:12:23,000 --> 00:12:25,000
any product involving sj-prime will still

202
00:12:25,000 --> 00:12:28,000
be a product involving s1 and sj.

203
00:12:28,000 --> 00:12:30,000
And vice versa, any product involving sj,

204
00:12:30,000 --> 00:12:33,000
I could write in terms of sj-prime.

205
00:12:33,000 --> 00:12:37,000
And now, I claim that if z1 anti-commutes

206
00:12:37,000 --> 00:12:43,000
with both s1 and sj, then it will commute with sj-prime.

207
00:12:43,000 --> 00:12:49,000
So now z1, sj-prime is equal to sj-prime, z1

208
00:12:49,000 --> 00:12:52,000
because when I move sj-prime past it,

209
00:12:52,000 --> 00:12:55,000
it's like I'm moving s1 and sj.

210
00:12:55,000 --> 00:12:56,000
Each one of them will pick up a minus-1.

211
00:12:56,000 --> 00:12:58,000
Overall, I'll pick up a plus-1.

212
00:12:58,000 --> 00:13:00,000


213
00:13:00,000 --> 00:13:01,000
OK?

214
00:13:01,000 --> 00:13:05,000


215
00:13:05,000 --> 00:13:07,000
So now I can replace s--

216
00:13:07,000 --> 00:13:13,000


217
00:13:13,000 --> 00:13:19,000
so I can have new generators, s1 through sn,

218
00:13:19,000 --> 00:13:32,000
such that only s1 anti-commutes with z1.

219
00:13:32,000 --> 00:13:36,000
And so what that means is, I don't have to worry about all

220
00:13:36,000 --> 00:13:39,000
of the other stabilizer generators.

221
00:13:39,000 --> 00:13:43,000
When I measure z1, it's going to mess up

222
00:13:43,000 --> 00:13:46,000
the stabilizers somehow, right.

223
00:13:46,000 --> 00:13:47,000
I can't always say the state doesn't change.

224
00:13:47,000 --> 00:13:49,000
The state's going to change.

225
00:13:49,000 --> 00:13:51,000
But it's not going to be total chaos.

226
00:13:51,000 --> 00:13:53,000
It's not going to change all the stabilizers.

227
00:13:53,000 --> 00:13:56,000
It commutes with now s2 through sn,

228
00:13:56,000 --> 00:13:58,000
so it will not change any of those.

229
00:13:58,000 --> 00:14:00,000
It will only change s1.

230
00:14:00,000 --> 00:14:02,000
So that's going to make my life a lot easier.

231
00:14:02,000 --> 00:14:05,000
So now I could just ignore s2 through sn.

232
00:14:05,000 --> 00:14:09,000
Let's just focus in on s1 and see what z1 does here.

233
00:14:09,000 --> 00:14:12,000
OK?

234
00:14:12,000 --> 00:14:16,000
Furthermore, we can now see a little bit about s1.

235
00:14:16,000 --> 00:14:21,000
So suppose I know that s1 anti-commutes with z1.

236
00:14:21,000 --> 00:14:24,000
What can I say about s1 as a poly?

237
00:14:24,000 --> 00:14:31,000


238
00:14:31,000 --> 00:14:32,000
Yeah.

239
00:14:32,000 --> 00:14:35,000
Say that again.

240
00:14:35,000 --> 00:14:37,000
A little bit louder.

241
00:14:37,000 --> 00:14:39,000
Orthogonal.

242
00:14:39,000 --> 00:14:42,000
Right, so in terms of f2, we can say

243
00:14:42,000 --> 00:14:48,000
that it has inner product 1 with this corresponding vector.

244
00:14:48,000 --> 00:14:51,000
But let's just think about s1 as like a poly

245
00:14:51,000 --> 00:14:53,000
on the first qubit, a poly on the second qubit,

246
00:14:53,000 --> 00:14:55,000
a poly on the third qubit, et cetera.

247
00:14:55,000 --> 00:14:57,000
What can I say about those polys?

248
00:14:57,000 --> 00:15:04,000
Like, what can I say about the poly on the second qubit

249
00:15:04,000 --> 00:15:05,000
or on the first qubit?

250
00:15:05,000 --> 00:15:15,000


251
00:15:15,000 --> 00:15:18,000
So I can write, you know, s1 is equal to--

252
00:15:18,000 --> 00:15:20,000
you know, what goes in the first qubit,

253
00:15:20,000 --> 00:15:21,000
second qubit, third qubit?

254
00:15:21,000 --> 00:15:22,000
Yeah.

255
00:15:22,000 --> 00:15:24,000
[INAUDIBLE]

256
00:15:24,000 --> 00:15:25,000


257
00:15:25,000 --> 00:15:30,000
Right, so the first qubit has to be either x or y.

258
00:15:30,000 --> 00:15:33,000


259
00:15:33,000 --> 00:15:40,000
So let me write x1 or y1 times something else--

260
00:15:40,000 --> 00:15:42,000
let's call it g--

261
00:15:42,000 --> 00:15:47,000
which is only on qubits 2 through n.

262
00:15:47,000 --> 00:15:53,000


263
00:15:53,000 --> 00:16:00,000
And furthermore, all the other s2 through sn--

264
00:16:00,000 --> 00:16:09,000
similar logic-- means that these are i or z1 times

265
00:16:09,000 --> 00:16:19,000
something, operator on qubits 2 through n.

266
00:16:19,000 --> 00:16:28,000
So now what's going to happen when I make this measurement?

267
00:16:28,000 --> 00:16:32,000
To give a sense of it, suppose that this s1 was just x1.

268
00:16:32,000 --> 00:16:38,000
Then what happens is, when I measure z1,

269
00:16:38,000 --> 00:16:42,000
I get a random plus-minus 1 outcome.

270
00:16:42,000 --> 00:16:45,000


271
00:16:45,000 --> 00:16:47,000
Corresponding to the outcome, I'm

272
00:16:47,000 --> 00:16:49,000
going to add a new generator.

273
00:16:49,000 --> 00:16:54,000
So I'm going to add plus or minus z1

274
00:16:54,000 --> 00:16:57,000
to the set of stabilizers.

275
00:16:57,000 --> 00:17:05,000
And I'm going to just discard s1.

276
00:17:05,000 --> 00:17:09,000
So if this was, for example, just poly-x, x1, and I measure

277
00:17:09,000 --> 00:17:12,000
in the z basis, I just forget, you know,

278
00:17:12,000 --> 00:17:17,000
whatever that information was, I lose that information.

279
00:17:17,000 --> 00:17:20,000
I lose whether it was a plus x or a minus x

280
00:17:20,000 --> 00:17:22,000
or a plus y or a minus y.

281
00:17:22,000 --> 00:17:24,000
That gets thrown away and replaced

282
00:17:24,000 --> 00:17:28,000
with this new stabilizer.

283
00:17:28,000 --> 00:17:31,000
So I do all that to s1.

284
00:17:31,000 --> 00:17:33,000
s2 through sn, it's nice.

285
00:17:33,000 --> 00:17:34,000
I can just leave them alone.

286
00:17:34,000 --> 00:17:35,000
They don't change.

287
00:17:35,000 --> 00:17:38,000
So I just changed this one stabilizer.

288
00:17:38,000 --> 00:17:38,000
So that's it.

289
00:17:38,000 --> 00:17:40,000
That's the whole algorithm.

290
00:17:40,000 --> 00:17:41,000
If I just do this--

291
00:17:41,000 --> 00:17:44,000
and each one of these steps is simple linear algebra over f2--

292
00:17:44,000 --> 00:17:47,000
I can simulate a Clifford circuit,

293
00:17:47,000 --> 00:17:52,000
which is a pretty non-trivial class of quantum circuits.

294
00:17:52,000 --> 00:17:52,000


