{
    "start": [
        0, 
        0, 
        3000, 
        6000, 
        8000, 
        12000, 
        18000, 
        22000, 
        27000, 
        34000, 
        34000, 
        39000, 
        44000, 
        49000, 
        51000, 
        54000, 
        61000, 
        66000, 
        69000, 
        72000, 
        77000, 
        79000, 
        85000, 
        87000, 
        91000, 
        93000, 
        96000, 
        99000, 
        102000, 
        105000, 
        109000, 
        113000, 
        117000, 
        121000, 
        125000, 
        129000, 
        131000, 
        134000, 
        136000, 
        140000, 
        143000, 
        145000, 
        150000, 
        154000, 
        157000, 
        165000, 
        168000, 
        178000, 
        181000, 
        183000, 
        186000, 
        188000
    ], 
    "end": [
        0, 
        3000, 
        6000, 
        8000, 
        12000, 
        18000, 
        22000, 
        27000, 
        34000, 
        34000, 
        39000, 
        44000, 
        49000, 
        51000, 
        54000, 
        61000, 
        66000, 
        69000, 
        72000, 
        77000, 
        79000, 
        85000, 
        87000, 
        91000, 
        93000, 
        96000, 
        99000, 
        102000, 
        105000, 
        109000, 
        113000, 
        117000, 
        121000, 
        125000, 
        129000, 
        131000, 
        134000, 
        136000, 
        140000, 
        143000, 
        145000, 
        150000, 
        154000, 
        157000, 
        165000, 
        168000, 
        178000, 
        181000, 
        183000, 
        186000, 
        188000, 
        189000
    ], 
    "text": [
        "", 
        "Let me describe some examples of fault tolerant procedures", 
        "and what are in non-fault tolerant procedures.", 
        "Suppose I want to compute a not function.", 
        "", 
        "Well, these will be poor ways of doing them.", 
        "", 
        "And these will be good, or fault tolerant, ways of doing that.", 
        "So again, let's imagine that we encode in the triple redundancy", 
        "code.", 
        "So we have a number A that comes in.", 
        "And then we perform three not gates.", 
        "And if we run through a single majority voting gate and then", 
        "copy the output three times.", 
        "This is no good, because there's a single point of failure.", 
        "", 
        "And this violates the idea here that a single component failure", 
        "causes, at most, one error in the output.", 
        "So we found, as you saw in the example,", 
        "that a good way of doing this fault tolerantly", 
        "is to have three majority voting gates.", 
        "", 
        "Like so.", 
        "And this then is a fault tolerant procedure.", 
        "OK.", 
        "If we're having multiple bits do something,", 
        "and now let's start to use some of our quantum computing", 
        "circuit terminology.", 
        "And we want to compute a controlled not gate.", 
        "", 
        "Classically still, but using quantum circuit drawing.", 
        "This is either 000 or 111 when it's encoded.", 
        "So clearly, if we wanted to, we could just", 
        "perform a controlled not gate by using the top bit.", 
        "Because they're all supposed to be the same.", 
        "And so if there were no errors, this", 
        "would be a perfectly fine controlled not gate", 
        "between two blocks.", 
        "But clearly, if this wire failed,", 
        "we would have another single point failure.", 
        "So it's not a fault tolerant procedure.", 
        "Instead, one of the canonical ideas behind fault tolerance", 
        "is to separate gates off into different bits.", 
        "And this construction is called transversal gates.", 
        "", 
        "Transversal gate constructions.", 
        "It just means do your gates bitwise in parallel.", 
        "And this then allows errors only to propagate between the bits", 
        "that are interacting together.", 
        "And we will use the same idea for our quantum circuit", 
        "constructions that are fault tolerant.", 
        ""
    ]
}