{
    "start": [
        0, 
        0, 
        2000, 
        4000, 
        7000, 
        11000, 
        13000, 
        14000, 
        17000, 
        19000, 
        22000, 
        28000, 
        30000, 
        33000, 
        37000, 
        39000, 
        41000, 
        43000, 
        45000, 
        46000, 
        49000, 
        53000, 
        61000, 
        65000, 
        68000, 
        70000, 
        73000, 
        76000, 
        79000, 
        81000, 
        84000, 
        87000, 
        91000, 
        94000, 
        96000, 
        98000, 
        101000, 
        104000, 
        108000, 
        113000, 
        116000, 
        119000, 
        129000, 
        139000, 
        142000, 
        149000, 
        152000, 
        156000, 
        158000, 
        163000, 
        166000, 
        167000, 
        169000, 
        170000, 
        173000, 
        174000, 
        177000, 
        178000, 
        183000, 
        186000, 
        188000, 
        190000, 
        192000, 
        194000, 
        195000, 
        199000, 
        202000, 
        207000
    ], 
    "end": [
        0, 
        2000, 
        4000, 
        7000, 
        11000, 
        13000, 
        14000, 
        17000, 
        19000, 
        22000, 
        28000, 
        30000, 
        33000, 
        37000, 
        39000, 
        41000, 
        43000, 
        45000, 
        46000, 
        49000, 
        53000, 
        61000, 
        65000, 
        68000, 
        70000, 
        73000, 
        76000, 
        79000, 
        81000, 
        84000, 
        87000, 
        91000, 
        94000, 
        96000, 
        98000, 
        101000, 
        104000, 
        108000, 
        113000, 
        116000, 
        119000, 
        129000, 
        139000, 
        142000, 
        149000, 
        152000, 
        156000, 
        158000, 
        163000, 
        166000, 
        167000, 
        169000, 
        170000, 
        173000, 
        174000, 
        177000, 
        178000, 
        183000, 
        186000, 
        188000, 
        190000, 
        192000, 
        194000, 
        195000, 
        199000, 
        202000, 
        207000, 
        207000
    ], 
    "text": [
        "", 
        "Algorithm-wise, this does not seem great", 
        "because I use up the state to do this,", 
        "and there's a lot of group elements.", 
        "I just learned one group element, but the group is vast.", 
        "Think Simon's algorithm, 2 to the n elements.", 
        "I've just learned about one of them.", 
        "", 
        "So this is not that great.", 
        "", 
        "So suppose we could reuse this state.", 
        "Suppose we didn't damage the state.", 
        "Then we would be in good shape because we could just", 
        "query once and then reuse this state for every single group", 
        "element.", 
        "That doesn't take any more time.", 
        "The queries are needed to create the state.", 
        "But once we have a copy of state,", 
        "we could keep on reusing it.", 
        "", 
        "But we can't do that because measurement damages the state.", 
        "So the trick-- so the idea is reuse the state.", 
        "But let's look at how the measurement damages the state.", 
        "If g is not in H, OK, are our answers", 
        "are half, half, looks like they'll be some damage.", 
        "But if g is in H, this things acts trivially.", 
        "It does nothing to the state.", 
        "And in fact, that's generally true of measurements.", 
        "If I have a two-outcome measurement", 
        "and one outcome happens with probability 1,", 
        "then it also causes no damage to the state.", 
        "If I'm doing a projector and I project", 
        "and I get some outcome with probably 1,", 
        "then that means my state was already in that subspace.", 
        "So there's no collapse.", 
        "And this fact is robust in that if I", 
        "get an outcome with probability 1 minus epsilon,", 
        "the damage turns out you can bound by order root epsilon.", 
        "So this is an extremely general fact, which is--", 
        "", 
        "so let me just sketch this out.", 
        "So if measurement outcome is nearly certain,", 
        "then there's almost no damage from the measurement.", 
        "This principle has sometimes been called", 
        "the gentle measurement lemma.", 
        "And I think the first time it appeared", 
        "in the quantum-information literature", 
        "was in Andreas Winter's PhD thesis.", 
        "", 
        "Now Andreas Winter's English is probably better than mine.", 
        "He had read Ulysses.", 
        "I have not.", 
        "But at the time he was newer to it.", 
        "And so when he translated it, he called it the tender", 
        "measurement lemma.", 
        "", 
        "Which would be nice if that name stuck,", 
        "but no, it's called the gentle measurement lemma.", 
        "And that will allow us to use our state.", 
        "Now you might worry, well, what do you", 
        "mean the measurement is almost certain?", 
        "In one case it's 1, fine.", 
        "But the other case it's half, half.", 
        "That is not almost certain.", 
        "So first I have to show you how we can make the measurement", 
        "outcome nearly certain, and then we", 
        "can talk about the proof of the gentle measurement lemma.", 
        ""
    ]
}