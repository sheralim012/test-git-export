{
    "start": [
        0, 
        0, 
        2000, 
        3000, 
        8000, 
        15000, 
        21000, 
        29000, 
        31000, 
        37000, 
        47000, 
        50000, 
        58000, 
        63000, 
        66000, 
        74000, 
        76000, 
        79000, 
        84000, 
        87000, 
        92000, 
        96000, 
        101000, 
        106000, 
        116000, 
        119000, 
        120000, 
        124000, 
        127000, 
        129000, 
        132000, 
        134000, 
        137000, 
        139000, 
        142000, 
        143000, 
        146000, 
        148000, 
        151000, 
        156000, 
        157000, 
        163000, 
        171000, 
        173000, 
        177000, 
        179000, 
        182000, 
        185000, 
        186000, 
        193000, 
        196000, 
        198000, 
        199000, 
        203000, 
        208000, 
        210000, 
        212000, 
        215000, 
        219000, 
        222000, 
        233000, 
        238000, 
        243000, 
        247000, 
        249000, 
        255000, 
        257000, 
        264000, 
        268000, 
        271000, 
        274000, 
        278000, 
        278000, 
        281000, 
        282000, 
        284000, 
        285000, 
        291000, 
        291000, 
        292000, 
        295000, 
        295000, 
        297000, 
        301000, 
        303000, 
        305000, 
        309000, 
        311000, 
        313000, 
        314000, 
        316000, 
        318000, 
        320000, 
        324000, 
        324000, 
        332000, 
        334000, 
        336000, 
        339000, 
        342000, 
        345000, 
        349000, 
        352000, 
        354000, 
        357000, 
        371000, 
        376000, 
        385000, 
        393000, 
        400000, 
        412000, 
        418000, 
        418000, 
        427000, 
        432000, 
        436000, 
        441000, 
        443000, 
        446000, 
        449000, 
        457000, 
        460000, 
        464000, 
        466000, 
        470000, 
        473000, 
        475000, 
        477000, 
        479000, 
        481000, 
        483000, 
        485000, 
        488000, 
        499000, 
        505000, 
        507000, 
        512000, 
        529000, 
        533000, 
        539000, 
        555000, 
        556000, 
        560000, 
        562000, 
        568000, 
        573000, 
        575000
    ], 
    "end": [
        0, 
        2000, 
        3000, 
        8000, 
        15000, 
        21000, 
        29000, 
        31000, 
        37000, 
        47000, 
        50000, 
        58000, 
        63000, 
        66000, 
        74000, 
        76000, 
        79000, 
        84000, 
        87000, 
        92000, 
        96000, 
        101000, 
        106000, 
        116000, 
        119000, 
        120000, 
        124000, 
        127000, 
        129000, 
        132000, 
        134000, 
        137000, 
        139000, 
        142000, 
        143000, 
        146000, 
        148000, 
        151000, 
        156000, 
        157000, 
        163000, 
        171000, 
        173000, 
        177000, 
        179000, 
        182000, 
        185000, 
        186000, 
        193000, 
        196000, 
        198000, 
        199000, 
        203000, 
        208000, 
        210000, 
        212000, 
        215000, 
        219000, 
        222000, 
        233000, 
        238000, 
        243000, 
        247000, 
        249000, 
        255000, 
        257000, 
        264000, 
        268000, 
        271000, 
        274000, 
        278000, 
        278000, 
        281000, 
        282000, 
        284000, 
        285000, 
        291000, 
        291000, 
        292000, 
        295000, 
        295000, 
        297000, 
        301000, 
        303000, 
        305000, 
        309000, 
        311000, 
        313000, 
        314000, 
        316000, 
        318000, 
        320000, 
        324000, 
        324000, 
        332000, 
        334000, 
        336000, 
        339000, 
        342000, 
        345000, 
        349000, 
        352000, 
        354000, 
        357000, 
        371000, 
        376000, 
        385000, 
        393000, 
        400000, 
        412000, 
        418000, 
        418000, 
        427000, 
        432000, 
        436000, 
        441000, 
        443000, 
        446000, 
        449000, 
        457000, 
        460000, 
        464000, 
        466000, 
        470000, 
        473000, 
        475000, 
        477000, 
        479000, 
        481000, 
        483000, 
        485000, 
        488000, 
        499000, 
        505000, 
        507000, 
        512000, 
        529000, 
        533000, 
        539000, 
        555000, 
        556000, 
        560000, 
        562000, 
        568000, 
        573000, 
        575000, 
        578000
    ], 
    "text": [
        "", 
        "So let me first continue the Abelian hidden subgroup", 
        "problem.", 
        "Our set up is at f of x equals f of y if and only if x minus y", 
        "is in h, which is a subgroup of our group g.", 
        "And when we left off, the measurement", 
        "yields an outcome, y, which is some character of the group", 
        "so g hat-- remember there's a set of characters.", 
        "", 
        "With probability, given by this normalization factor,", 
        "the size of h divided by the size of g,", 
        "times the thing we defined, Chi y of h.", 
        "And Chi y of h is very simple.", 
        "", 
        "It's one if y belongs to--", 
        "here I'm going into something new.", 
        "Last time I said it's one if the character chi sub", 
        "y acts trivially on all of h and it's zero if not.", 
        "So let me just define the set of characters that", 
        "act trivially on h as h perp.", 
        "So this is analogous to the perp from vector spaces,", 
        "but here h is a subgroup and h perp is a set of characters.", 
        "So this is going to be the set of y prime in g hat such", 
        "that Chi y prime restricted to h is one.", 
        "So by this notation, Chi sub y prime,", 
        "that's a function on all of g.", 
        "Here I'm restricting it to h and I'm", 
        "asking whether it's trivial, if it's it's equal to one,", 
        "on all of h.", 
        "So the set of all such characters,", 
        "I'm going to call that h perp.", 
        "It's analogous to what you get in a vector space", 
        "where you say the perp of a vector space", 
        "is a set of all vectors perpendicular to everything", 
        "in that vector space.", 
        "Now I'm saying the h perp of a subgroup", 
        "is the set of all characters that", 
        "act trivially on that subgroup.", 
        "So for such a character, y is in that subgroup, Chi y of h", 
        "is just going to be one.", 
        "So maybe I should recall Pi y of h", 
        "is just the average over h of the character.", 
        "So if it's one on all values of the subgroup,", 
        "then the average is also going to be one.", 
        "And then what we found is that if it's not", 
        "one on every single thing in the subgroup, then", 
        "it must average out to zero, just by analogy with the way", 
        "itself for the cyclic group.", 
        "So zero if y is not in h perp.", 
        "So if you remember in Simon's algorithm,", 
        "we have this hidden shift, a.", 
        "The subgroup is very simple, it's", 
        "just the identity and adding a.", 
        "We obtained a random vector in the orthogonal complement,", 
        "in this n minus one dimensional vector space.", 
        "So here we're getting something analogous,", 
        "except before everything lived in f2 to the n.", 
        "Now we start with a subgroup and we get something perpendicular,", 
        "really meaning a character that acts trivially on the subgroup.", 
        "And so we obtained y drawn uniformly randomly from h perp,", 
        "because the probability is the same for all members in h perp.", 
        "In fact, you can tell from this that the size of h perp--", 
        "actually this is a good test to see if you're awake.", 
        "What is the size of h perp?", 
        "", 
        "How many characters act trivially on h?", 
        "", 
        "Does not seem so easy, because the group's fully general,", 
        "characters might have this complicated structure,", 
        "but there is a clue on the board that will help you do it.", 
        "", 
        "Any guesses?", 
        "", 
        "No, you're scratching your chin.", 
        "Yes?", 
        "G over h, right.", 
        "The size of h perp is the size of g divided by the size of h.", 
        "Good.", 
        "Why is that true?", 
        "", 
        "Exactly.", 
        "Probability is normalized.", 
        "Every y in h perp has this much probability,", 
        "size of h over size of g, and that", 
        "has to account for all of the probability.", 
        "Because if you're not in h, we assign probability zero.", 
        "So that's how many things there are, and we just", 
        "draw uniformly from among them.", 
        "Just like in Simon's algorithm, we", 
        "had a subspace of dimension n minus one,", 
        "had a two to the n minus one elements,", 
        "and we got a random sample from that subspace.", 
        "Now we get a random sample from each h perp,", 
        "which has this size.", 
        "", 
        "So we have this thing.", 
        "Now let's talk about the analog of the last step of Simon's", 
        "algorithm where you actually reconstruct the subgroup.", 
        "So y is yielding some information.", 
        "So we just ran the quantum algorithm and we got y.", 
        "That gave us some information, but not enough to nail down h.", 
        "So let's see actually what do we know about h?", 
        "So let me define one more thing.", 
        "Let me define the kernel of Chi y.", 
        "", 
        "So the kernel is a set of G on which Chi y act trivially.", 
        "So you could say that h perp is the set of y", 
        "such that h is contained in the kernel of Chi y.", 
        "And so if we repeat our algorithm, the one that", 
        "produced y, and obtain samples y1 through ym,", 
        "then we know that h is contained in the intersection", 
        "of their kernels.", 
        "", 
        "So each time you learn y1, y2, y3, et cetera,", 
        "you learn something that contains h.", 
        "So it might contain more than h.", 
        "So it might not uniquely determine it,", 
        "but if I take more of them, maybe their intersections", 
        "will keep on getting smaller.", 
        "So going back to Simon's algorithm,", 
        "we have this n minus one dimensional vector space,", 
        "we keep drawing vectors from it, and the span", 
        "of those vectors in general will get larger.", 
        "If I draw a random one vector, dimension one.", 
        "Draw another vector, I could be unluckily and draw the same", 
        "as the first one, but otherwise, if they're", 
        "linearly independent, I'm up to dimension two.", 
        "When I draw a third vector, I could", 
        "be unlucky-- it could fall into the subspace I've already", 
        "chosen, but probably it won't be.", 
        "Probably I'll go up to dimension three.", 
        "So now I have to argue the same thing holds here.", 
        "", 
        "So let me call all this thing k--", 
        "I didn't mean to underline it.", 
        "", 
        "So I claim that this process usually makes progress.", 
        "", 
        "In other words, if k is not equal to h,", 
        "so if k is bigger than h, then k shrinks with probability", 
        "at least one half.", 
        "", 
        "OK, so why should that be true?", 
        "", 
        "I should say it shrinks by a factor of at least one half,", 
        "so it shrinks by a substantial amount.", 
        ""
    ]
}