{
    "start": [
        0, 
        0, 
        5000, 
        14000, 
        17000, 
        23000, 
        29000, 
        32000, 
        37000, 
        41000, 
        46000, 
        50000, 
        51000, 
        57000, 
        67000, 
        74000, 
        78000, 
        81000, 
        85000, 
        87000, 
        90000, 
        93000, 
        94000, 
        96000, 
        100000, 
        102000, 
        104000, 
        107000, 
        111000, 
        113000, 
        115000, 
        117000, 
        120000, 
        122000, 
        124000, 
        127000, 
        130000
    ], 
    "end": [
        0, 
        5000, 
        14000, 
        17000, 
        23000, 
        29000, 
        32000, 
        37000, 
        41000, 
        46000, 
        50000, 
        51000, 
        57000, 
        67000, 
        74000, 
        78000, 
        81000, 
        85000, 
        87000, 
        90000, 
        93000, 
        94000, 
        96000, 
        100000, 
        102000, 
        104000, 
        107000, 
        111000, 
        113000, 
        115000, 
        117000, 
        120000, 
        122000, 
        124000, 
        127000, 
        130000, 
        133000
    ], 
    "text": [
        "", 
        "So recall if phi is a 3SAT instance,", 
        "we say that phi is a function from 0, 1 to the n to 0 and 1.", 
        "Takes in an n-bit string and it outputs", 
        "0 or 1, 0 for unsatisfied, 1 for satisfied.", 
        "And we'll define the count of phi", 
        "to be the number of satisfying assignments.", 
        "", 
        "So remember, an NP-complete problem", 
        "is to determine if this count is zero or greater than zero.", 
        "And we talked about a few things that went beyond NP.", 
        "One of them is approximate counting.", 
        "", 
        "And this was given a formula phi and a threshold T,", 
        "determine whether count of phi is greater than or equal to 2T", 
        "or less than or equal to T.", 
        "This is an example, by the way, of a promise problem.", 
        "Remember I introduced these as one type of problem, one sort", 
        "the feature of a problem that appears in complexity theory.", 
        "", 
        "This is a good wake up after spring break question.", 
        "Why is this a promise problem?", 
        "Can anyone say why that's the case?", 
        "", 
        "Why do I need that terminology to describe", 
        "approximate counting?", 
        "So if you go back to what I said about NP-complete, there", 
        "it's, I want to distinguish zero versus one or more.", 
        "Those cases are exhaustive.", 
        "It's always going to be one of those.", 
        "Whereas for approximate counting,", 
        "these cases do not cover all the possibilities.", 
        "So if it's in the middle, I don't", 
        "have to give the right answer in that case.", 
        "Equivalently, I'm promised that either it's", 
        "less than or equal to T or it's greater than or equal to 2T,", 
        ""
    ]
}