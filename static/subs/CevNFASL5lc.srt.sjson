{
    "start": [
        0, 
        0, 
        4000, 
        6000, 
        8000, 
        12000, 
        14000, 
        18000, 
        23000, 
        26000, 
        28000, 
        29000, 
        31000, 
        34000, 
        36000, 
        40000, 
        43000, 
        50000, 
        54000, 
        63000, 
        69000, 
        73000, 
        74000, 
        83000, 
        85000, 
        94000, 
        96000, 
        99000, 
        101000, 
        104000, 
        107000, 
        110000, 
        111000, 
        118000, 
        122000, 
        129000, 
        131000, 
        135000, 
        139000, 
        140000, 
        146000, 
        149000, 
        150000, 
        152000, 
        152000, 
        153000, 
        160000, 
        166000, 
        179000, 
        180000, 
        182000, 
        185000, 
        187000, 
        190000, 
        193000, 
        195000, 
        196000, 
        199000, 
        205000, 
        212000, 
        215000, 
        219000, 
        233000, 
        237000, 
        239000, 
        249000, 
        256000, 
        256000, 
        261000, 
        263000, 
        267000, 
        269000, 
        275000, 
        278000, 
        280000, 
        283000, 
        285000, 
        287000, 
        292000, 
        294000, 
        300000, 
        300000, 
        302000, 
        304000, 
        307000, 
        309000, 
        311000, 
        314000, 
        318000, 
        319000, 
        322000, 
        325000, 
        327000, 
        329000, 
        333000, 
        341000, 
        342000, 
        344000, 
        347000, 
        351000, 
        354000, 
        356000, 
        357000, 
        361000, 
        365000, 
        367000, 
        374000, 
        378000, 
        378000, 
        380000, 
        383000, 
        386000, 
        388000, 
        392000, 
        400000, 
        405000, 
        407000, 
        408000, 
        409000, 
        413000, 
        414000, 
        418000, 
        420000, 
        426000, 
        428000, 
        433000, 
        441000, 
        443000, 
        446000, 
        447000, 
        452000, 
        455000, 
        456000, 
        459000, 
        461000, 
        463000, 
        465000, 
        467000, 
        469000, 
        473000, 
        477000, 
        483000, 
        486000, 
        488000, 
        498000, 
        502000, 
        502000, 
        505000, 
        509000, 
        513000, 
        515000, 
        517000, 
        519000, 
        522000, 
        525000, 
        529000
    ], 
    "end": [
        0, 
        4000, 
        6000, 
        8000, 
        12000, 
        14000, 
        18000, 
        23000, 
        26000, 
        28000, 
        29000, 
        31000, 
        34000, 
        36000, 
        40000, 
        43000, 
        50000, 
        54000, 
        63000, 
        69000, 
        73000, 
        74000, 
        83000, 
        85000, 
        94000, 
        96000, 
        99000, 
        101000, 
        104000, 
        107000, 
        110000, 
        111000, 
        118000, 
        122000, 
        129000, 
        131000, 
        135000, 
        139000, 
        140000, 
        146000, 
        149000, 
        150000, 
        152000, 
        152000, 
        153000, 
        160000, 
        166000, 
        179000, 
        180000, 
        182000, 
        185000, 
        187000, 
        190000, 
        193000, 
        195000, 
        196000, 
        199000, 
        205000, 
        212000, 
        215000, 
        219000, 
        233000, 
        237000, 
        239000, 
        249000, 
        256000, 
        256000, 
        261000, 
        263000, 
        267000, 
        269000, 
        275000, 
        278000, 
        280000, 
        283000, 
        285000, 
        287000, 
        292000, 
        294000, 
        300000, 
        300000, 
        302000, 
        304000, 
        307000, 
        309000, 
        311000, 
        314000, 
        318000, 
        319000, 
        322000, 
        325000, 
        327000, 
        329000, 
        333000, 
        341000, 
        342000, 
        344000, 
        347000, 
        351000, 
        354000, 
        356000, 
        357000, 
        361000, 
        365000, 
        367000, 
        374000, 
        378000, 
        378000, 
        380000, 
        383000, 
        386000, 
        388000, 
        392000, 
        400000, 
        405000, 
        407000, 
        408000, 
        409000, 
        413000, 
        414000, 
        418000, 
        420000, 
        426000, 
        428000, 
        433000, 
        441000, 
        443000, 
        446000, 
        447000, 
        452000, 
        455000, 
        456000, 
        459000, 
        461000, 
        463000, 
        465000, 
        467000, 
        469000, 
        473000, 
        477000, 
        483000, 
        486000, 
        488000, 
        498000, 
        502000, 
        502000, 
        505000, 
        509000, 
        513000, 
        515000, 
        517000, 
        519000, 
        522000, 
        525000, 
        529000, 
        535000
    ], 
    "text": [
        "", 
        "So one large class of algorithms is called the hidden subgroup", 
        "problem.", 
        "And these, in general, are oracle problems,", 
        "in that they're defined not with respect to an input that", 
        "is a bit string, but with respect to a black box", 
        "function that we assume that we can query in superposition.", 
        "So then once you have this, to go further to applications,", 
        "you may want to find a way that this black box", 
        "function can be instantiated.", 
        "Just like for phase estimation, it", 
        "works for a black box unitary you plug-in", 
        "a specific unitary like add one, and then you", 
        "get some useful things out of it.", 
        "So HSP will be in terms of a black box function.", 
        "", 
        "And the function is going to take", 
        "its input elements of the group G and will map them to some set", 
        "S. And there's a promise that there exists a subgroup", 
        "H such that the function--", 
        "", 
        "let me just write it.", 
        "F of x equals F of y if and only if xy inverse", 
        "is in the subgroup.", 
        "So equivalently, you can say that xh equals yh.", 
        "So if you haven't seen this notation before,", 
        "this refers to what's called a code set.", 
        "So H is a subgroup.", 
        "It means if I multiply by another element of H,", 
        "I just get back something in the subgroup.", 
        "But if I multiply by something outside of H,", 
        "I'll get something distinct.", 
        "And so in general, I can divide up G into H.", 
        "And then I can think of that as identity times H", 
        "and then G1 times H, G2 times H, et cetera.", 
        "Each one of these should give me a distinct,", 
        "what's called coset of H. And they shouldn't overlap.", 
        "If G1 H and G2 H overlapped, that", 
        "would mean that they actually had", 
        "to be the same because it would mean that G1 times G2 inverse--", 
        "", 
        "Yeah.", 
        "Let me actually--", 
        "Actually, yeah.", 
        "Maybe I should justify that.", 
        "So if G1 H equals G2 H, that means", 
        "there exists H1 H2 such that G1 H1 equals", 
        "G2 H2, which means that G2 inverse G1 equals H2 H1", 
        "inverse.", 
        "Here, I'm not even assuming the group is [INAUDIBLE]..", 
        "I'm trying to write this really very generally.", 
        "", 
        "So here I've multiplied on the left by G2 inverse", 
        "and on the right by H1 inverse.", 
        "And what I have here is two things", 
        "that are in the subgroup.", 
        "", 
        "So G2 inverse times G1 is in the subgroup.", 
        "And so then, this thing here, G2 H,", 
        "is G2 times all possible elements of H.", 
        "And one of those elements is G2 inverse times G1.", 
        "So that means that G1 belongs to G2 times H. And if I have G2 H", 
        "and I multiply it on the right by any other element of H,", 
        "I keep myself in the same coset, it", 
        "implies that G1 H is contained in G2 H. And so--", 
        "", 
        "Sorry.", 
        "", 
        "I made a little mistake here.", 
        "I started this chain by saying what if these two are equal,", 
        "but that's actually the consequence I want to derive.", 
        "So what I meant to do is start by saying,", 
        "suppose their intersection is not empty.", 
        "So suppose I have these two cosets", 
        "and they contain one point in common.", 
        "So I was trying to argue the code", 
        "sets were totally distinct.", 
        "And I said, well, suppose they overlap a little bit.", 
        "Then what that means that they overlap in a single point", 
        "means there exists one H1 and H2 such that this is the case.", 
        "OK.", 
        "So the rest of the steps are fine.", 
        "Just the premise was not the right premise.", 
        "So the premise I wanted is that these things have", 
        "a non-trivial intersection.", 
        "They have a non-empty intersection.", 
        "If that's the case, then there exists H1 H2 such", 
        "that G1 blah, blah, blah then you follow the whole argument", 
        "and you find not only do they have", 
        "a non-trivial intersection, but all of one", 
        "is contained in the other one.", 
        "And furthermore, this argument was symmetric.", 
        "I could have run it the other way", 
        "and I would have found that G2 H with contained in G1 H.", 
        "So I go from this to getting that the two cosets are", 
        "just equal.", 
        "Because I argued G1 H is contained in G2 H,", 
        "but I could run it the other way so that G2 H is contained", 
        "in G1 H. And so now, that's why I get this picture", 
        "that these form a disjoint partition of G", 
        "into the different cosets.", 
        "Some of them are exactly equal.", 
        "Some of them are totally disjoint.", 
        "And so what I can say is that the function is constant.", 
        "So back to the subgroup problem.", 
        "The function is constant on each one of these cosets.", 
        "But it's different for different cosets.", 
        "OK.", 
        "So the function agrees on two points if", 
        "and only if those two are on the same coset.", 
        "I'll mention-- so I could--", 
        "let me say one more thing about cosets.", 
        "So G mod H is the set of cosets.", 
        "", 
        "This is sometimes a group, if G is a billion,", 
        "or if H is something called a normal subgroup,", 
        "this is a group.", 
        "But it's not always.", 
        "It's at least a set of sets, a set of cosets.", 
        "And so I can think of--", 
        "", 
        "well, I can define some f tilde--", 
        "", 
        "well, actually why don't I write it like this?", 
        "I'll say that F from G mod H to S", 
        "is well-defined and one to one.", 
        "So in other words, I can think of S", 
        "not as a function from the original group G,", 
        "but from the cosets.", 
        "And what well-defined means is I'm taking its input", 
        "as an entire coset, and yet I'm sending it only", 
        "to a single point.", 
        "And that means I send the whole coset to the same thing.", 
        "If I were to take a coset and send it to different things,", 
        "it would not be a well-defined function", 
        "because it wouldn't be clear what the output would be.", 
        "But I'm saying it is well-defined", 
        "because I'm constant on cosets.", 
        "It's one to one because it's distinct on distinct cosets.", 
        "So this is another way of saying the hidden subgroup condition.", 
        "So the hidden subgroup problem says the input is a function F", 
        "and the promise is that there exists a subgroup H such", 
        "that it has this funny property.", 
        "And then the goal is to find H for any S that we are input.", 
        "Obviously there exists S's that do not satisfy this promise.", 
        "All right.", 
        "You can always cook up an S that does not satisfy this promise.", 
        "But I'm going to say if you do satisfy the promise,", 
        "your goal is to find H. Can you do that?", 
        "It sounds like a very weird problem.", 
        "You know, maybe I will never come up", 
        "with an example that satisfies the promise or maybe", 
        "such examples exist but are not interesting.", 
        "It's not obvious a priori that there are interesting examples.", 
        "So later today and on Wednesday, we'll", 
        ""
    ]
}