{
    "start": [
        0, 
        0, 
        3000, 
        4000, 
        7000, 
        12000, 
        15000, 
        16000, 
        22000, 
        28000, 
        33000, 
        34000, 
        37000, 
        39000, 
        45000, 
        49000, 
        55000, 
        58000, 
        60000, 
        64000, 
        66000, 
        69000, 
        73000, 
        76000, 
        78000, 
        83000, 
        86000, 
        88000, 
        91000, 
        92000, 
        95000, 
        96000, 
        99000, 
        101000, 
        104000, 
        107000, 
        109000, 
        112000, 
        114000, 
        115000, 
        117000, 
        121000, 
        122000, 
        124000, 
        127000, 
        131000, 
        133000, 
        135000, 
        137000, 
        143000, 
        145000, 
        148000, 
        150000, 
        152000, 
        154000, 
        157000, 
        160000, 
        163000, 
        166000, 
        179000, 
        188000, 
        190000, 
        192000, 
        194000, 
        198000, 
        203000, 
        206000, 
        210000, 
        213000, 
        215000, 
        219000, 
        221000, 
        225000, 
        227000, 
        232000, 
        235000, 
        245000, 
        255000, 
        259000, 
        262000, 
        265000, 
        268000, 
        270000, 
        270000, 
        272000, 
        274000, 
        275000, 
        277000, 
        279000, 
        280000, 
        282000, 
        284000, 
        287000, 
        289000, 
        293000, 
        297000, 
        305000, 
        308000, 
        315000, 
        316000, 
        319000, 
        322000, 
        323000, 
        325000, 
        328000, 
        332000, 
        335000, 
        336000, 
        339000, 
        343000, 
        349000, 
        359000, 
        363000, 
        372000, 
        375000, 
        379000, 
        383000, 
        387000, 
        389000, 
        393000, 
        395000, 
        398000, 
        402000, 
        406000, 
        413000, 
        425000, 
        427000, 
        429000, 
        433000, 
        434000, 
        435000, 
        439000, 
        441000, 
        443000, 
        446000, 
        449000, 
        451000, 
        455000, 
        457000, 
        459000, 
        462000
    ], 
    "end": [
        0, 
        3000, 
        4000, 
        7000, 
        12000, 
        15000, 
        16000, 
        22000, 
        28000, 
        33000, 
        34000, 
        37000, 
        39000, 
        45000, 
        49000, 
        55000, 
        58000, 
        60000, 
        64000, 
        66000, 
        69000, 
        73000, 
        76000, 
        78000, 
        83000, 
        86000, 
        88000, 
        91000, 
        92000, 
        95000, 
        96000, 
        99000, 
        101000, 
        104000, 
        107000, 
        109000, 
        112000, 
        114000, 
        115000, 
        117000, 
        121000, 
        122000, 
        124000, 
        127000, 
        131000, 
        133000, 
        135000, 
        137000, 
        143000, 
        145000, 
        148000, 
        150000, 
        152000, 
        154000, 
        157000, 
        160000, 
        163000, 
        166000, 
        179000, 
        188000, 
        190000, 
        192000, 
        194000, 
        198000, 
        203000, 
        206000, 
        210000, 
        213000, 
        215000, 
        219000, 
        221000, 
        225000, 
        227000, 
        232000, 
        235000, 
        245000, 
        255000, 
        259000, 
        262000, 
        265000, 
        268000, 
        270000, 
        270000, 
        272000, 
        274000, 
        275000, 
        277000, 
        279000, 
        280000, 
        282000, 
        284000, 
        287000, 
        289000, 
        293000, 
        297000, 
        305000, 
        308000, 
        315000, 
        316000, 
        319000, 
        322000, 
        323000, 
        325000, 
        328000, 
        332000, 
        335000, 
        336000, 
        339000, 
        343000, 
        349000, 
        359000, 
        363000, 
        372000, 
        375000, 
        379000, 
        383000, 
        387000, 
        389000, 
        393000, 
        395000, 
        398000, 
        402000, 
        406000, 
        413000, 
        425000, 
        427000, 
        429000, 
        433000, 
        434000, 
        435000, 
        439000, 
        441000, 
        443000, 
        446000, 
        449000, 
        451000, 
        455000, 
        457000, 
        459000, 
        462000, 
        464000
    ], 
    "text": [
        "", 
        "The next thing I claim is that PostBQP", 
        "is equal to exact counting.", 
        "This is what I need to complete the supremacy argument.", 
        "Because if this is true, and there's a classical simulation,", 
        "then that will imply that approximate counting", 
        "equals exact counting.", 
        "So there are two directions here.", 
        "One of them, you will do on the p set.", 
        "", 
        "This is also the direction that's", 
        "not needed for the quantum supremacy argument.", 
        "All right, so the quantum supremacy argument", 
        "says if this thing that we don't believe happens--", 
        "you know, that there's a great classical simulator--", 
        "then the approximate counting contains the power of PostBQP.", 
        "And so to do the next step for contradiction, what I really", 
        "need is the other direction, that PP", 
        "is contained in PostBQP.", 
        "So this is what I'll prove to you right now,", 
        "and this is what we need for quantum supremacy.", 
        "This other thing you'll do on the p set--", 
        "it's valuable to sort of fully nail down", 
        "our understanding of these matters.", 
        "It's also, I think, nice because when you first look at BQP,", 
        "it looks like, wow, to simulate quantum mechanics just", 
        "takes exponential time.", 
        "In fact, you have to write down an exponentially long vector,", 
        "right?", 
        "That's kind of what everyone says-- n qubit means 2", 
        "to the n complex numbers.", 
        "I have to write down 2 to the n complex numbers.", 
        "That sounds like I need not only exponential time", 
        "but also exponential space.", 
        "But PP, this exact counting thing,", 
        "you don't need exponential space.", 
        "I can clearly just iterate over the exponential", 
        "in number of possibilities.", 
        "That's a for loop.", 
        "I have to write down only my index in the loop.", 
        "I don't have to write down all of my intermediate outputs.", 
        "So this only takes polynomial space.", 
        "And in fact, it's even weaker than things", 
        "you can do in general with polynomial space.", 
        "So it's kind of the weakest purely classical complexity", 
        "class that we know contains BQP.", 
        "And in fact, it contains more than that.", 
        "It contains PostBQP.", 
        "So it's a fairly powerful statement relating quantum", 
        "to classical complexity.", 
        "But it's not needed for the supremacy argument,", 
        "so I'll skip that for now.", 
        "Instead, I'll show the other direction,", 
        "that if I have a PostBQP machine,", 
        "I can do exact counting.", 
        "And it's like this argument, but it's", 
        "going to use some uniquely quantum capabilities.", 
        "", 
        "And to do this, I'm going to talk a little bit, generally,", 
        "about the power of postselection.", 
        "So I'm going to speak generally about what", 
        "you can do with postselection and then", 
        "return to this argument that PP is contained in PostBQP.", 
        "", 
        "So first, let me talk even again about classical postselection,", 
        "about PostBPP.", 
        "So remember that, for randomized computation--", 
        "this, I think, goes back to the very first lecture--", 
        "the way probability distributions", 
        "evolve is by multiplication by a stochastic matrix.", 
        "So if you have a distribution p--", 
        "", 
        "yeah, so let me write for PostBPP--", 
        "", 
        "sorry, let me say it again.", 
        "So for random classical time evolution,", 
        "it has the form p goes to Mp where M is stochastic.", 
        "", 
        "Anyone remember the definition of stochastic?", 
        "Stochastic matrix?", 
        "Or part of the definition?", 
        "Columns sum to 1?", 
        "Exactly.", 
        "That's the hard part because you're never", 
        "sure if you should do rows or columns.", 
        "But, yeah-- columns sum to 1, correct.", 
        "And what's the other criteria?", 
        "", 
        "Non-negative entries.", 
        "Non-negative entries, exactly.", 
        "Same conditions for a probability distribution--", 
        "should add up to 1, and the entries should be non-negative.", 
        "So you could equivalently say that every column should", 
        "be a valid probability distribution.", 
        "So what happens when we add postselection?", 
        "You can think of it as, if this is my matrix M,", 
        "I only keep some of the columns.", 
        "So I keep these, and I discard those.", 
        "Because, basically, some of the outcomes", 
        "are the ones that lead to a question mark.", 
        "Those are the branches of the computation that I disregard.", 
        "They don't contribute to 0.", 
        "They don't contribute to 1.", 
        "You can think of them as, I just throw away those outcomes.", 
        "And so I can think of this as a matrix that's rectangular,", 
        "where I just keep the top part of the matrix.", 
        "It doesn't have to be the top.", 
        "It could be any subset of the rows.", 
        "And since the constraint was that the columns sum to 1,", 
        "now I find that this column sums to, at most, 1.", 
        "So you could say that I have a substochastic matrix, that I", 
        "still have Mxy is non-negative.", 
        "But now, for any y, the sum over x of Mxy is, at most, 1.", 
        "But even this condition I can kind of ignore.", 
        "", 
        "Because overall normalization is something", 
        "that only matters in normal BPP, if I'm not doing postselection.", 
        "If I'm doing postselection, I don't", 
        "care what the overall scaling is of my vector.", 
        "So the total probability here now corresponds", 
        "to the chance of outputting not question mark.", 
        "But my success criteria only depends on ratios.", 
        "And ratios don't care about the overall scaling.", 
        "So the overall scaling is irrelevant.", 
        "So we can just say that we only need the condition", 
        "that our entries are non-negative.", 
        "So the fact that the total probability adds up", 
        "to 1 or to 0.01 doesn't matter.", 
        "I could have made it add up to a 10,000.", 
        "It doesn't matter.", 
        "What matters is the ratio of the entries that lead to 0", 
        "and the entries that lead to 1.", 
        "So because only the ratio matters,", 
        "I don't care about an overall rescaling.", 
        "And so I don't care about that constraint", 
        "that the probability adds up to, at most, 1.", 
        "I guess all I care about is if the probability is positive.", 
        "I didn't write that constraint in there.", 
        "But that's, really, the only important one,", 
        "is that I have some probability of getting an answer that's", 
        ""
    ]
}