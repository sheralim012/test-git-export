{
    "start": [
        0, 
        0, 
        2000, 
        11000, 
        13000, 
        15000, 
        20000, 
        25000, 
        32000, 
        37000, 
        40000, 
        44000, 
        45000, 
        54000, 
        56000, 
        61000, 
        63000, 
        66000, 
        68000, 
        75000, 
        77000, 
        79000, 
        84000, 
        88000, 
        90000, 
        94000, 
        99000, 
        104000, 
        109000, 
        111000, 
        115000, 
        120000, 
        123000, 
        130000, 
        133000, 
        151000, 
        153000, 
        153000, 
        158000, 
        162000, 
        165000, 
        167000, 
        172000, 
        183000, 
        195000, 
        199000, 
        202000, 
        206000, 
        208000, 
        211000, 
        214000, 
        217000, 
        219000, 
        223000, 
        227000, 
        229000, 
        231000, 
        233000, 
        236000, 
        237000, 
        240000, 
        242000, 
        244000, 
        245000, 
        249000, 
        258000, 
        271000, 
        281000, 
        291000, 
        293000, 
        296000, 
        302000, 
        310000, 
        311000, 
        314000, 
        317000, 
        320000, 
        323000, 
        325000, 
        332000, 
        335000, 
        339000, 
        341000, 
        344000, 
        348000, 
        352000, 
        354000, 
        356000, 
        360000, 
        363000, 
        365000, 
        372000, 
        377000, 
        381000, 
        385000, 
        388000, 
        391000, 
        393000, 
        397000, 
        398000, 
        399000, 
        407000, 
        409000, 
        414000, 
        416000, 
        418000, 
        423000, 
        431000, 
        436000, 
        437000, 
        441000, 
        444000, 
        447000, 
        449000, 
        453000, 
        455000, 
        456000, 
        460000, 
        461000, 
        463000, 
        466000, 
        469000, 
        471000
    ], 
    "end": [
        0, 
        2000, 
        11000, 
        13000, 
        15000, 
        20000, 
        25000, 
        32000, 
        37000, 
        40000, 
        44000, 
        45000, 
        54000, 
        56000, 
        61000, 
        63000, 
        66000, 
        68000, 
        75000, 
        77000, 
        79000, 
        84000, 
        88000, 
        90000, 
        94000, 
        99000, 
        104000, 
        109000, 
        111000, 
        115000, 
        120000, 
        123000, 
        130000, 
        133000, 
        151000, 
        153000, 
        153000, 
        158000, 
        162000, 
        165000, 
        167000, 
        172000, 
        183000, 
        195000, 
        199000, 
        202000, 
        206000, 
        208000, 
        211000, 
        214000, 
        217000, 
        219000, 
        223000, 
        227000, 
        229000, 
        231000, 
        233000, 
        236000, 
        237000, 
        240000, 
        242000, 
        244000, 
        245000, 
        249000, 
        258000, 
        271000, 
        281000, 
        291000, 
        293000, 
        296000, 
        302000, 
        310000, 
        311000, 
        314000, 
        317000, 
        320000, 
        323000, 
        325000, 
        332000, 
        335000, 
        339000, 
        341000, 
        344000, 
        348000, 
        352000, 
        354000, 
        356000, 
        360000, 
        363000, 
        365000, 
        372000, 
        377000, 
        381000, 
        385000, 
        388000, 
        391000, 
        393000, 
        397000, 
        398000, 
        399000, 
        407000, 
        409000, 
        414000, 
        416000, 
        418000, 
        423000, 
        431000, 
        436000, 
        437000, 
        441000, 
        444000, 
        447000, 
        449000, 
        453000, 
        455000, 
        456000, 
        460000, 
        461000, 
        463000, 
        466000, 
        469000, 
        471000, 
        473000
    ], 
    "text": [
        "", 
        "Let's review what we want we want.", 
        "So what we want is a transformation that will take x", 
        "to the Fourier transform of x.", 
        "And because I'll write this a few times,", 
        "let me call this x tilde.", 
        "So first I'll show you something easier to do,", 
        "which is to map x0 to x comma x tilde.", 
        "", 
        "Can anyone see why this is easier to do?", 
        "Can anyone see how you would perform this transformation?", 
        "So let's write out what this is.", 
        "So this is sum over xy omega sub n to the xy, xy--", 
        "oh sorry, just sum over y.", 
        "We start with x, over root n.", 
        "I guess the first step might not be so obvious.", 
        "The first step is you want to repair this without the phase.", 
        "So if I can repair the superposition", 
        "without the phase, then can anyone", 
        "see how I would complete the task, how I would", 
        "prepare the rest of the state?", 
        "So if I have the state sum over y xy--", 
        "", 
        "just ignore normalization for now--", 
        "I'm always free to add it and fill in the zero state, right?", 
        "", 
        "And then one thing to keep in mind when", 
        "looking at quantum circuits is that they include", 
        "as a subset of what you can do with the quantum", 
        "computer any classical reversible circuit.", 
        "So I can replace this 0 with any poly time computable", 
        "function of x and y.", 
        "So one thing I might do is I could put here x times y.", 
        "", 
        "Or if I wanted to, I could put 2 pi times xy over capital N--", 
        "actually, let me write this out.", 
        "Let me write first--", 
        "", 
        "OK, let me write down what I want and then we'll correct it.", 
        "So I'd like to have a register with this in the register,", 
        "with a binary representation of that.", 
        "So let's suppose that 2 pi xy over n,", 
        "if you write it in binary, looks like ak minus 1", 
        "through a1 dot a0, a minus 1, a minus 2, and so on to infinity.", 
        "So this would be the binary representation of this number.", 
        "And while this goes on infinitely far,", 
        "we don't really need to compute it infinitely far, right?", 
        "We can always cut this off at some reasonable level", 
        "to get an approximate answer.", 
        "So when I write down a real number like this,", 
        "really what I mean is a binary approximation", 
        "of it up to a level of precision that's", 
        "enough that we don't mind the numerical error.", 
        "", 
        "And that's something we can compute", 
        "efficiently given x and y.", 
        "Because we're just using classical circuits.", 
        "Using classical circuits for multiplication, division,", 
        "and so on.", 
        "", 
        "You know, there might be something more efficient,", 
        "but this is always something you can do", 
        "that would be polynomial time.", 
        "And so we can write it out as a bit string.", 
        "And then given this bit string, we can apply this phase.", 
        "So what we want to do, so we want omega n to the xy, right?", 
        "So this is equal to e to the 2pi i xy over n, which means--", 
        "", 
        "sorry, I think I made a mistake here.", 
        "Let's put in this register just xy over n.", 
        "So let's say that xy over n is the following binary string.", 
        "So then either the 2pi i xy over n will be e to the 2pi i times", 
        "this binary string here.", 
        "", 
        "And now we can make a small simplification.", 
        "We can ignore the part to the left of the decimal point.", 
        "Because that's 2 pi i times an integer.", 
        "E to that is just one.", 
        "So we had e to the 2pi i times 0 point a minus 1, a minus 2,", 
        "and so on, infinitely far.", 
        "Let's say if we do this only to m bits of precision.", 
        "So then it will be a minus 1 through a sub minus m.", 
        "", 
        "So we want to apply this phase.", 
        "So now someone tell me how I do this", 
        "in terms of elementary gates.", 
        "Phase gates, right, exactly.", 
        "So tell me which phase gates I'm going to do.", 
        "Suppose it was just one bit long.", 
        "Then this is going to equal--", 
        "if I can write this out, this is e to the i pi a minus 1", 
        "plus i pi over 2 a minus 2 plus i pi over 4.", 
        "", 
        "So what gate do I want to do to make that happen?", 
        "Let's say for a1, if it was just one bit,", 
        "if it stopped after a minus 1, what gate would I apply?", 
        "A z gate, exactly.", 
        "Because I want-- if this is 0, I want to apply no phase.", 
        "And if it's 1, I want to apply a minus 1.", 
        "So that's a z gate.", 
        "So I apply a z gate to that bit, to the qubit storing a minus 1.", 
        "What about this one?", 
        "This is an s gate, or square root of z.", 
        "This one square root of that, right?", 
        "T gate.", 
        "I'm out of letters, but you get the idea after this, right?", 
        "So in that way, I've performed this phase.", 
        "And the details take a little while to work out,", 
        "but I hope you can convince yourself", 
        "that whenever the functions I want to compute", 
        "are polynomial time computable, it's going to work out, right?", 
        "Any efficiently computable phase is one", 
        "that I can do on a quantum computer.", 
        "", 
        "OK, so then you might say, now what I've done", 
        "is I've done this.", 
        "", 
        "But that's not what I want.", 
        "I have this extra register here now.", 
        "If I discard that register, it's going to cause decoherence.", 
        "So how do I get from this thing to the state", 
        "that I actually want?", 
        ""
    ]
}