{
    "start": [
        0, 
        0, 
        3000, 
        20000, 
        27000, 
        31000, 
        34000, 
        39000, 
        43000, 
        46000, 
        49000, 
        53000, 
        55000, 
        57000, 
        59000, 
        62000, 
        65000, 
        70000, 
        74000, 
        77000, 
        79000, 
        82000, 
        83000, 
        87000, 
        90000, 
        94000, 
        98000, 
        99000, 
        101000, 
        102000, 
        105000, 
        106000, 
        113000, 
        121000, 
        124000, 
        125000, 
        130000, 
        132000, 
        136000, 
        137000, 
        139000, 
        143000
    ], 
    "end": [
        0, 
        3000, 
        20000, 
        27000, 
        31000, 
        34000, 
        39000, 
        43000, 
        46000, 
        49000, 
        53000, 
        55000, 
        57000, 
        59000, 
        62000, 
        65000, 
        70000, 
        74000, 
        77000, 
        79000, 
        82000, 
        83000, 
        87000, 
        90000, 
        94000, 
        98000, 
        99000, 
        101000, 
        102000, 
        105000, 
        106000, 
        113000, 
        121000, 
        124000, 
        125000, 
        130000, 
        132000, 
        136000, 
        137000, 
        139000, 
        143000, 
        143000
    ], 
    "text": [
        "", 
        "Let me mention one corollary, [? is that ?] we now", 
        "have an efficient algorithm for FG whenever G is abelian", 
        "and has a known decomposition.", 
        "So remember that an abelian group you can always write", 
        "as a product of cyclic groups.", 
        "And it's not hard to see that the Fourier transform", 
        "for a product group is just a tensor product of the Fourier", 
        "transforms on the individual components.", 
        "So if I've decomposed it into a product of cyclic groups,", 
        "I just have to Fourier transform each component.", 
        "And now I have an algorithm to do a Fourier transform", 
        "for any cyclic group.", 
        "So that means I can do it for any product of cyclic groups,", 
        "which means any abelian group.", 
        "The only catch is the group has to be", 
        "presented to me in a way where I can see the cyclic structure.", 
        "If the group is encoded in some weird way where", 
        "I don't know the cyclic structure, or maybe to find", 
        "the cyclic structure requires factoring", 
        "and I don't know how to do that, then I can't immediately", 
        "use this algorithm.", 
        "But if I know how to break it into cycles", 
        "and how to do the controlled addition operation for each", 
        "of the cyclic components, then I can do the Fourier transform.", 
        "And it turns out I can always find this decomposition.", 
        "So I said that in some cases, finding", 
        "the decomposition reduces to factoring, which we", 
        "can do on a quantum computer.", 
        "In fact, there's a quantum algorithm to decompose--", 
        "so I should say this.", 
        "There exists an efficient quantum algorithm for abelian", 
        "billion group decomposition.", 
        "So if I'm given an abelian group,", 
        "the elements are encoded in some way.", 
        "All I have to do is do the group addition operation.", 
        "That's already enough to be able to do", 
        "to decompose the group into its cyclic factors.", 
        "I'm not going to present that algorithm,", 
        "but I'll present related things that", 
        "will kind of give you the idea of many of the pieces of it.", 
        ""
    ]
}