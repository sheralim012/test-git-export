{
    "start": [
        0, 
        0, 
        2000, 
        4000, 
        6000, 
        6000, 
        9000, 
        11000, 
        14000, 
        16000, 
        18000, 
        21000, 
        24000, 
        26000, 
        27000, 
        29000, 
        34000, 
        38000, 
        43000, 
        46000, 
        48000, 
        50000, 
        52000, 
        59000, 
        61000, 
        64000, 
        65000, 
        68000, 
        71000, 
        73000, 
        76000, 
        84000, 
        86000, 
        88000, 
        89000, 
        91000, 
        93000, 
        102000, 
        110000, 
        113000, 
        116000, 
        129000, 
        133000, 
        135000, 
        138000, 
        142000, 
        156000, 
        159000, 
        162000, 
        167000, 
        169000, 
        174000, 
        179000, 
        181000, 
        188000, 
        193000, 
        196000, 
        199000, 
        200000, 
        204000, 
        206000, 
        209000, 
        212000, 
        216000, 
        217000, 
        220000, 
        221000, 
        223000, 
        226000, 
        227000, 
        229000, 
        232000, 
        233000, 
        235000, 
        237000, 
        239000, 
        243000, 
        246000, 
        248000, 
        250000, 
        256000, 
        259000, 
        260000, 
        263000, 
        264000, 
        267000, 
        269000, 
        279000, 
        282000, 
        284000, 
        287000, 
        291000, 
        299000, 
        305000, 
        313000, 
        319000, 
        324000, 
        327000, 
        329000, 
        331000, 
        336000, 
        340000, 
        342000, 
        344000, 
        345000, 
        346000, 
        348000, 
        352000, 
        353000, 
        358000, 
        363000, 
        370000, 
        373000, 
        374000, 
        378000, 
        379000, 
        385000, 
        389000, 
        391000, 
        394000, 
        394000, 
        397000, 
        401000, 
        402000, 
        404000, 
        406000, 
        409000
    ], 
    "end": [
        0, 
        2000, 
        4000, 
        6000, 
        6000, 
        9000, 
        11000, 
        14000, 
        16000, 
        18000, 
        21000, 
        24000, 
        26000, 
        27000, 
        29000, 
        34000, 
        38000, 
        43000, 
        46000, 
        48000, 
        50000, 
        52000, 
        59000, 
        61000, 
        64000, 
        65000, 
        68000, 
        71000, 
        73000, 
        76000, 
        84000, 
        86000, 
        88000, 
        89000, 
        91000, 
        93000, 
        102000, 
        110000, 
        113000, 
        116000, 
        129000, 
        133000, 
        135000, 
        138000, 
        142000, 
        156000, 
        159000, 
        162000, 
        167000, 
        169000, 
        174000, 
        179000, 
        181000, 
        188000, 
        193000, 
        196000, 
        199000, 
        200000, 
        204000, 
        206000, 
        209000, 
        212000, 
        216000, 
        217000, 
        220000, 
        221000, 
        223000, 
        226000, 
        227000, 
        229000, 
        232000, 
        233000, 
        235000, 
        237000, 
        239000, 
        243000, 
        246000, 
        248000, 
        250000, 
        256000, 
        259000, 
        260000, 
        263000, 
        264000, 
        267000, 
        269000, 
        279000, 
        282000, 
        284000, 
        287000, 
        291000, 
        299000, 
        305000, 
        313000, 
        319000, 
        324000, 
        327000, 
        329000, 
        331000, 
        336000, 
        340000, 
        342000, 
        344000, 
        345000, 
        346000, 
        348000, 
        352000, 
        353000, 
        358000, 
        363000, 
        370000, 
        373000, 
        374000, 
        378000, 
        379000, 
        385000, 
        389000, 
        391000, 
        394000, 
        394000, 
        397000, 
        401000, 
        402000, 
        404000, 
        406000, 
        409000, 
        412000
    ], 
    "text": [
        "", 
        "This is the last of a series of examples", 
        "I gave of how complexity classes are stable when you", 
        "kind of change the definition.", 
        "Right?", 
        "So we saw different gate sets work,", 
        "allowing noisy gates will work.", 
        "Changing the error probability so it's not 1/3", 
        "but it's, you know, 1/2 minus epsilon,", 
        "or even exponentially small, those all", 
        "leave you kind of with the same model.", 
        "So that gives some kind of justification", 
        "to the idea of defining a complexity", 
        "class in the first place.", 
        "You know, you say it really does capture", 
        "some broad sense of what type of computing", 
        "is possible with a quantum computer.", 
        "And one thing that makes complexity classes easier", 
        "to work with is that often we can think of them", 
        "in terms of a single problem.", 
        "And these problems are called complete problems.", 
        "And that's what I want to talk about next.", 
        "So I want to talk about a way of describing a complexity class", 
        "in terms of a single problem.", 
        "And to do that, I'm going to start", 
        "with the notion of reduction.", 
        "So a reduction is a way of saying", 
        "this problem is harder than that problem,", 
        "or I should say at least as hard as that problem.", 
        "", 
        "So, you know, if I have a hard time unlocking my car door", 
        "and I also have-- you know, the problem", 
        "of driving down the street is at least as hard", 
        "as the problem of unlocking the car door.", 
        "Maybe that's a bad example.", 
        "Let me do complexity problems.", 
        "So what I mean by reduction is if you have languages L1", 
        "and L2, then we write that L1 is less than or equal to L2", 
        "if L2 is at least as hard as L1.", 
        "And what do I mean by that?", 
        "I mean that an algorithm for L2 yields an algorithm for L1.", 
        "", 
        "So let me-- that's kind of the intuition behind it.", 
        "Let me now give you the definition.", 
        "So the definition is there exists", 
        "a poly time function f such that x is in L1 if", 
        "and only if f of x is in L2.", 
        "", 
        "So why does that mean that an algorithm for L2", 
        "yields an algorithm for L1?", 
        "Well, we have this poly time computable function f.", 
        "So what that means is, if I have an algorithm for L2", 
        "and I want to solve L1, I can take", 
        "x, which I want to know yes or no is it in L1, apply f to it,", 
        "use my algorithm for L2, and figure out if f of x is in L2.", 
        "And then, because of this claim, that", 
        "means I'll have learned whether x was in L1.", 
        "OK?", 
        "So that's why saying that I have such a function", 
        "means that I have a way of turning an L2 algorithm", 
        "into an L1 algorithm.", 
        "I'm slightly pulling a fast one here because you", 
        "might say there are other ways of using an algorithm for L2", 
        "to solve L1.", 
        "For example, in the way I've described it,", 
        "I do something very specific.", 
        "I take the input, I transform it,", 
        "and then I run my L2 algorithm and I return back", 
        "the same answer.", 
        "But maybe I want to use the L2 algorithm", 
        "as a subroutine many, many times.", 
        "Right?", 
        "So when I do--", 
        "you know, if I have an exponentiation algorithm", 
        "on a computer, I might use a multiplication subroutine", 
        "many, many times, not just once.", 
        "And that's a different kind of reduction.", 
        "And for the purpose of today, I'm", 
        "just going to talk about this form of reduction.", 
        "But kind of more generally, when we say that L1 reduces to L2,", 
        "we could talk about a Karp reduction or a Turing reduction", 
        "or other kinds, as well.", 
        "", 
        "I want you to know that they're out there,", 
        "but for today this is what I mean by reduction.", 
        "OK?", 
        "So these reductions let us now reduce entire complexity", 
        "classes to individual languages.", 
        "And so when this is possible, we say", 
        "that that language is a hard problem for that complexity", 
        "class, meaning it's as hard as anything in the language.", 
        "So one common example is we say that L is NP-hard", 
        "if, for any L prime in NP, L prime is", 
        "less than or equal to L. So what that means is, if L is NP-hard,", 
        "any other problem in NP can be turned into L.", 
        "And so if I can solve L, I can solve any other problem in NP.", 
        "Now, I'm free to write this definition down.", 
        "That doesn't mean any such languages exist, right?", 
        "Like, the world doesn't have to be nice to me this way.", 
        "But if it did, that would mean that I could characterize", 
        "the entire complexity of NP in terms of a single problem.", 
        "But you might object, well, this problem", 
        "could be way harder than NP.", 
        "Right?", 
        "So this could be kind of too much.", 
        "That doesn't mean it's equivalent,", 
        "it just means that NP is easier than L. So then to say,", 
        "well, let's try and capture something", 
        "that's really equal to the hardest problems in NP,", 
        "we define the notion of NP-complete.", 
        "We said L is NP-complete if L is in NP and L is NP-hard.", 
        "", 
        "OK?", 
        "So now, again, there's no guarantee", 
        "such a problem exists.", 
        "But if it did, that would mean that this is a problem in NP,", 
        "and if I could solve it, I could solve any other problem in NP.", 
        "So there might be easier problems in NP,", 
        "but there's no harder problem.", 
        "Right?", 
        "NP always-- it contains things that are in P also, right?", 
        "It contains the language that is the empty set, where", 
        "the answer is always null.", 
        "So there's definitely easier problems.", 
        "But there's nothing harder in NP.", 
        "And this, at the same time, is not itself harder than NP,", 
        ""
    ]
}