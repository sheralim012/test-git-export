{
    "start": [
        0, 
        0, 
        2000, 
        3000, 
        8000, 
        12000, 
        14000, 
        15000, 
        17000, 
        18000, 
        20000, 
        24000, 
        32000, 
        41000, 
        43000, 
        45000, 
        48000, 
        51000, 
        52000, 
        57000, 
        59000, 
        63000, 
        70000, 
        77000, 
        80000, 
        86000, 
        89000, 
        91000, 
        94000, 
        106000, 
        109000, 
        111000, 
        116000, 
        124000, 
        126000, 
        129000, 
        132000, 
        133000, 
        137000, 
        140000, 
        146000, 
        149000, 
        157000, 
        157000, 
        161000, 
        165000, 
        170000, 
        172000, 
        177000, 
        179000, 
        191000, 
        193000, 
        197000, 
        200000, 
        201000, 
        203000, 
        205000, 
        210000, 
        212000, 
        216000, 
        218000, 
        220000, 
        222000, 
        225000, 
        231000, 
        234000, 
        237000, 
        239000, 
        241000, 
        256000, 
        257000, 
        259000, 
        263000, 
        265000, 
        267000, 
        269000, 
        270000, 
        275000, 
        278000, 
        278000, 
        280000, 
        285000, 
        296000, 
        300000, 
        302000, 
        306000, 
        309000, 
        318000, 
        322000, 
        326000, 
        331000, 
        334000, 
        336000, 
        340000, 
        341000, 
        343000, 
        346000, 
        348000, 
        350000, 
        356000, 
        361000, 
        364000, 
        367000, 
        370000, 
        375000, 
        378000, 
        381000, 
        391000, 
        393000, 
        395000, 
        396000, 
        399000, 
        404000, 
        406000, 
        410000, 
        411000, 
        414000, 
        416000, 
        419000, 
        419000, 
        422000, 
        424000, 
        425000, 
        426000, 
        428000, 
        431000, 
        433000
    ], 
    "end": [
        0, 
        2000, 
        3000, 
        8000, 
        12000, 
        14000, 
        15000, 
        17000, 
        18000, 
        20000, 
        24000, 
        32000, 
        41000, 
        43000, 
        45000, 
        48000, 
        51000, 
        52000, 
        57000, 
        59000, 
        63000, 
        70000, 
        77000, 
        80000, 
        86000, 
        89000, 
        91000, 
        94000, 
        106000, 
        109000, 
        111000, 
        116000, 
        124000, 
        126000, 
        129000, 
        132000, 
        133000, 
        137000, 
        140000, 
        146000, 
        149000, 
        157000, 
        157000, 
        161000, 
        165000, 
        170000, 
        172000, 
        177000, 
        179000, 
        191000, 
        193000, 
        197000, 
        200000, 
        201000, 
        203000, 
        205000, 
        210000, 
        212000, 
        216000, 
        218000, 
        220000, 
        222000, 
        225000, 
        231000, 
        234000, 
        237000, 
        239000, 
        241000, 
        256000, 
        257000, 
        259000, 
        263000, 
        265000, 
        267000, 
        269000, 
        270000, 
        275000, 
        278000, 
        278000, 
        280000, 
        285000, 
        296000, 
        300000, 
        302000, 
        306000, 
        309000, 
        318000, 
        322000, 
        326000, 
        331000, 
        334000, 
        336000, 
        340000, 
        341000, 
        343000, 
        346000, 
        348000, 
        350000, 
        356000, 
        361000, 
        364000, 
        367000, 
        370000, 
        375000, 
        378000, 
        381000, 
        391000, 
        393000, 
        395000, 
        396000, 
        399000, 
        404000, 
        406000, 
        410000, 
        411000, 
        414000, 
        416000, 
        419000, 
        419000, 
        422000, 
        424000, 
        425000, 
        426000, 
        428000, 
        431000, 
        433000, 
        436000
    ], 
    "text": [
        "", 
        "Now, we don't just have one bit.", 
        "We have a whole vector of them.", 
        "So the syndrome vector b, each entry of it", 
        "is the inner product of a row with some column vector.", 
        "So the first entry is--", 
        "maybe I should do it like this.", 
        "The first row times some column, then", 
        "the second row times some column,", 
        "the third row times some column.", 
        "So we can just package that up in matrix form,", 
        "and we can write that some matrix v times lambda times e,", 
        "where v is the matrix whose rows--", 
        "the rows of the matrix--", 
        "are the various vi's--", 
        "v1, v2, through vn minus k.", 
        "OK, so this is just a matrix version", 
        "of that equation for a single bit.", 
        "", 
        "And if you remember back to classical linear codes--", 
        "", 
        "so for classical linear codes, we have this check matrix H,", 
        "and the syndrome was just H times e.", 
        "So here the classical check matrix", 
        "has been replaced by the quantum list of stabilizers.", 
        "And then we've also inserted this lambda", 
        "to make it a symplectic inner product.", 
        "Otherwise, it's almost the same as for classical linear codes.", 
        "", 
        "So what do we get from this picture?", 
        "Now that we're trying to decode, this", 
        "tells us very precisely what the decoding problem is.", 
        "The decoding problem is, given our observation--", 
        "so our measurement outcome is b.", 
        "That's what we actually get to see.", 
        "We want to figure out which error that happened", 
        "so that we can reverse it.", 
        "", 
        "So we want to guess e.", 
        "And in general, e is going to be underdetermined.", 
        "", 
        "Because e, if you remember, the space is f2 to the 2n.", 
        "Right?", 
        "It describes a general poly and n qubits.", 
        "Whereas b is only n minus k bits.", 
        "So what we have is a linear system of equations", 
        "with 2n variables--", 
        "2n unknowns-- and n minus k equations.", 
        "So the solution of that is that we", 
        "know that e lies in some affine subspace of dimension, 2n", 
        "minus n minus k.", 
        "In other words, n plus k.", 
        "So we have not fully determined e.", 
        "Far from it.", 
        "But we have some information about it.", 
        "We've pinned it down to some affine subspace.", 
        "", 
        "And there always has to be some ambiguity, right?", 
        "Because if e acts with a stabilizer generator,", 
        "that's not going to show up in the syndrome.", 
        "If e acts through the logical operator,", 
        "that's not going to show up in the syndrome.", 
        "So we always have that level of ambiguity.", 
        "And now what we want to do is, within this affine subspace,", 
        "guess the most likely error.", 
        "And here is where the error model comes in.", 
        "Here is also where the computational difficulty", 
        "comes in.", 
        "So one approach is sort of the analog of maximum likelihood", 
        "decoding.", 
        "So classically, maximum likelihood decoding", 
        "says if you flip each bit with independent probability p,", 
        "then you try to guess the error string", 
        "compatible to your syndrome that was", 
        "most likely to have occurred.", 
        "So the quantum analog--", 
        "and to do that classically, you say", 
        "it's most likely that the fewest number of bits", 
        "have been flipped.", 
        "So I just try to find the way of fixing", 
        "the syndrome that reverses the fewest number of bit flips.", 
        "So the quantum analog of that is minimize the weight of e,", 
        "subject to this constraint.", 
        "v lambda e equals b.", 
        "", 
        "And by the weight of e, I mean the number", 
        "of non-identity positions.", 
        "", 
        "So remember we talked about weight l errors before, right?", 
        "How many non-identity polys do you have in a string?", 
        "And this is kind of like the Hamming weight of e,", 
        "but it's a little bit different.", 
        "Because if I have both an x and a z on the same poly,", 
        "that doesn't contribute weight two.", 
        "It only contributes weight one.", 
        "Because that's just a single y on that qubit.", 
        "So it's not quite the Hamming weight of e,", 
        "but it's kind of similar to it.", 
        "", 
        "So this now gives a very concrete decoding scheme.", 
        "Now, you might worry--", 
        "the number of vectors in this subspace is 2 to the n plus k.", 
        "If I just have to check all of those, that's a lot of vectors.", 
        "It sounds a little bit like an MP search problem.", 
        "And sometimes, when you have these large spaces", 
        "to search over, there's an efficient way of doing it.", 
        "But in this case, it's really MP complete in the worst case.", 
        "In other words, if someone just hands you", 
        "a stabilizer code with no-- and you", 
        "don't know any structure of it.", 
        "You just know the generators.", 
        "Solving this maximum likelihood decoding problem", 
        "is as hard as solving 3SAT.", 
        "So you're unlikely to be able to do it in polynomial time.", 
        "So to make further progress on this,", 
        "we have to choose the code with some structure", 
        "that we can make sense of.", 
        "Now, one option is the code is so small, you don't care.", 
        "Right?", 
        "For the five qubit code, you don't", 
        "care that this problem is sort of asymptotically", 
        "going to infinity.", 
        "You only have five qubits in front of you.", 
        "That's a finite problem.", 
        "But for larger code families, you", 
        "want to design them so that the decoding algorithm", 
        ""
    ]
}