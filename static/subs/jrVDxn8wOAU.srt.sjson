{
    "start": [
        0, 
        0, 
        2000, 
        7000, 
        11000, 
        14000, 
        18000, 
        21000, 
        39000, 
        42000, 
        47000, 
        50000, 
        53000, 
        57000, 
        60000, 
        66000, 
        68000, 
        74000, 
        75000, 
        81000, 
        84000, 
        88000, 
        99000, 
        101000, 
        106000, 
        120000, 
        123000, 
        125000, 
        128000, 
        131000, 
        135000, 
        136000, 
        139000, 
        144000, 
        148000, 
        151000, 
        154000, 
        159000, 
        163000, 
        167000, 
        172000, 
        174000, 
        179000, 
        181000, 
        185000, 
        186000, 
        194000, 
        196000, 
        201000, 
        208000, 
        210000, 
        212000, 
        214000, 
        217000, 
        222000, 
        229000, 
        232000, 
        235000, 
        238000, 
        241000, 
        244000, 
        254000, 
        256000, 
        259000, 
        262000, 
        266000, 
        268000, 
        270000, 
        272000, 
        275000, 
        279000
    ], 
    "end": [
        0, 
        2000, 
        7000, 
        11000, 
        14000, 
        18000, 
        21000, 
        39000, 
        42000, 
        47000, 
        50000, 
        53000, 
        57000, 
        60000, 
        66000, 
        68000, 
        74000, 
        75000, 
        81000, 
        84000, 
        88000, 
        99000, 
        101000, 
        106000, 
        120000, 
        123000, 
        125000, 
        128000, 
        131000, 
        135000, 
        136000, 
        139000, 
        144000, 
        148000, 
        151000, 
        154000, 
        159000, 
        163000, 
        167000, 
        172000, 
        174000, 
        179000, 
        181000, 
        185000, 
        186000, 
        194000, 
        196000, 
        201000, 
        208000, 
        210000, 
        212000, 
        214000, 
        217000, 
        222000, 
        229000, 
        232000, 
        235000, 
        238000, 
        241000, 
        244000, 
        254000, 
        256000, 
        259000, 
        262000, 
        266000, 
        268000, 
        270000, 
        272000, 
        275000, 
        279000, 
        280000
    ], 
    "text": [
        "", 
        "Let me now give the other half of the argument", 
        "that approximate counting is contained in PostBPP.", 
        "So in other words, I have the ability to do postselection,", 
        "and I want to estimate whether the number of satisfying", 
        "assignments to something is bigger than some threshold", 
        "or less than some other threshold.", 
        "So what I'll do is I will determine whether some count is", 
        "greater than or equal to 4T or less than or equal to T.", 
        "By the amplification arguments I gave before, this", 
        "is sufficient to solve the approximate-counting problem", 
        "in general.", 
        "And then the way I do this is I will--", 
        "", 
        "so I will think about, I have these inputs.", 
        "Let me draw it like this.", 
        "I have some set at most T inputs that--", 
        "let's say I'm in the second case and I", 
        "have at most T inputs on which the formula is satisfied.", 
        "On these, I will output 1.", 
        "", 
        "Then on the remaining inputs, I'll output question mark.", 
        "So this is kind of like what I was saying before", 
        "about postselect and getting a satisfying assignment.", 
        "And then I will also, in this other case, I get 1 here,", 
        "and question mark in these cases.", 
        "This is not quite enough because there's", 
        "a possibility of having no question marks,", 
        "plus I don't have any zeros here.", 
        "So what I'll do is I'll add some additional inputs.", 
        "So here I have to 2 to the n inputs.", 
        "These correspond to all n-bit strings.", 
        "I'm going to add some more bits so I have room for more inputs.", 
        "And with these extra inputs, I'm going to have 2T of them", 
        "always go to 0.", 
        "So I have 2T here.", 
        "These are not really drawn to scale, but you can imagine.", 
        "So I have 2T inputs that are always mapped to 0.", 
        "And this is what my PostBPP machine is going to do.", 
        "So I'm going to augment my space so that instead of n bits", 
        "I have, I don't know, n plus 1 bits.", 
        "And I'll use the first 2 to the n possible inputs", 
        "to evaluate my 3SAT instance.", 
        "And then the remaining 2 to the n inputs, I'll use 2T of them", 
        "to map them to 0.", 
        "And then I guess the rest, 2 to the n minus T,", 
        "I'll put a question mark.", 
        "So I've kind of rounded it out.", 
        "And now, let's look at the ratio of ones to zeros.", 
        "In the first case, this is less than", 
        "or equal to T divided by 2T.", 
        "So this is less than 1/2.", 
        "In the second case, it's more than 2.", 
        "So I've distinguished these two cases with my PostBPP machine.", 
        "", 
        "And so in this way, I've used a PostBPP machine", 
        "to solve the approximate-counting problem.", 
        "And that proves that PostBPP is at least as", 
        "strong as approximate counting.", 
        "And above I showed you the opposite.", 
        "So what this implies is that PostBPP", 
        "is equal to approximate counting in power.", 
        "", 
        "And I've been saying approximately equal because,", 
        "to go in that direction, I had to call", 
        "the approximate-counting oracle many times.", 
        "So it's not like a one-to-one use,", 
        "but they're polynomially related.", 
        "If I have polynomially many used of an approximate-counting", 
        "oracle, I can solve a PostBPP problem, and vise versa.", 
        ""
    ]
}