{
    "start": [
        0, 
        0, 
        1000, 
        3000, 
        6000, 
        9000, 
        14000, 
        17000, 
        26000, 
        29000, 
        41000, 
        44000, 
        50000, 
        53000, 
        62000, 
        64000, 
        66000, 
        70000, 
        71000, 
        74000, 
        76000, 
        78000, 
        94000, 
        100000, 
        101000, 
        108000, 
        110000, 
        114000, 
        115000, 
        120000, 
        123000, 
        124000, 
        131000, 
        137000, 
        145000, 
        147000, 
        150000, 
        153000, 
        156000, 
        159000, 
        162000, 
        164000, 
        167000, 
        172000, 
        174000, 
        178000, 
        180000, 
        183000, 
        184000, 
        189000, 
        196000, 
        202000, 
        212000, 
        213000, 
        216000, 
        224000, 
        228000, 
        233000, 
        236000, 
        240000, 
        242000, 
        245000, 
        253000, 
        257000, 
        259000, 
        262000, 
        264000, 
        267000, 
        271000, 
        275000, 
        285000, 
        290000, 
        292000, 
        296000, 
        298000, 
        300000, 
        303000, 
        308000, 
        313000, 
        316000, 
        320000, 
        322000, 
        324000, 
        327000, 
        330000, 
        335000, 
        338000, 
        340000, 
        344000, 
        348000, 
        349000, 
        355000, 
        358000, 
        359000, 
        363000, 
        369000, 
        372000, 
        376000, 
        379000, 
        382000, 
        385000, 
        387000, 
        390000, 
        394000, 
        396000, 
        404000, 
        407000, 
        410000, 
        413000, 
        415000, 
        421000, 
        422000, 
        426000, 
        431000, 
        434000, 
        438000, 
        442000, 
        443000, 
        445000, 
        449000, 
        454000, 
        457000, 
        461000, 
        465000, 
        466000, 
        468000, 
        474000, 
        475000, 
        477000, 
        482000, 
        484000, 
        488000, 
        493000, 
        506000, 
        509000, 
        511000, 
        515000, 
        518000, 
        520000, 
        525000, 
        528000, 
        531000, 
        533000, 
        535000, 
        541000, 
        542000, 
        545000, 
        548000, 
        551000, 
        553000, 
        556000, 
        560000, 
        561000, 
        563000, 
        566000, 
        568000, 
        572000, 
        575000, 
        579000, 
        582000, 
        585000, 
        587000, 
        593000, 
        595000, 
        598000, 
        606000, 
        608000, 
        610000, 
        613000, 
        616000, 
        618000, 
        620000, 
        623000, 
        628000, 
        635000, 
        639000, 
        645000, 
        648000, 
        653000, 
        655000, 
        659000, 
        660000, 
        662000, 
        667000, 
        669000, 
        671000, 
        674000, 
        675000, 
        677000, 
        678000, 
        682000, 
        685000, 
        688000
    ], 
    "end": [
        0, 
        1000, 
        3000, 
        6000, 
        9000, 
        14000, 
        17000, 
        26000, 
        29000, 
        41000, 
        44000, 
        50000, 
        53000, 
        62000, 
        64000, 
        66000, 
        70000, 
        71000, 
        74000, 
        76000, 
        78000, 
        94000, 
        100000, 
        101000, 
        108000, 
        110000, 
        114000, 
        115000, 
        120000, 
        123000, 
        124000, 
        131000, 
        137000, 
        145000, 
        147000, 
        150000, 
        153000, 
        156000, 
        159000, 
        162000, 
        164000, 
        167000, 
        172000, 
        174000, 
        178000, 
        180000, 
        183000, 
        184000, 
        189000, 
        196000, 
        202000, 
        212000, 
        213000, 
        216000, 
        224000, 
        228000, 
        233000, 
        236000, 
        240000, 
        242000, 
        245000, 
        253000, 
        257000, 
        259000, 
        262000, 
        264000, 
        267000, 
        271000, 
        275000, 
        285000, 
        290000, 
        292000, 
        296000, 
        298000, 
        300000, 
        303000, 
        308000, 
        313000, 
        316000, 
        320000, 
        322000, 
        324000, 
        327000, 
        330000, 
        335000, 
        338000, 
        340000, 
        344000, 
        348000, 
        349000, 
        355000, 
        358000, 
        359000, 
        363000, 
        369000, 
        372000, 
        376000, 
        379000, 
        382000, 
        385000, 
        387000, 
        390000, 
        394000, 
        396000, 
        404000, 
        407000, 
        410000, 
        413000, 
        415000, 
        421000, 
        422000, 
        426000, 
        431000, 
        434000, 
        438000, 
        442000, 
        443000, 
        445000, 
        449000, 
        454000, 
        457000, 
        461000, 
        465000, 
        466000, 
        468000, 
        474000, 
        475000, 
        477000, 
        482000, 
        484000, 
        488000, 
        493000, 
        506000, 
        509000, 
        511000, 
        515000, 
        518000, 
        520000, 
        525000, 
        528000, 
        531000, 
        533000, 
        535000, 
        541000, 
        542000, 
        545000, 
        548000, 
        551000, 
        553000, 
        556000, 
        560000, 
        561000, 
        563000, 
        566000, 
        568000, 
        572000, 
        575000, 
        579000, 
        582000, 
        585000, 
        587000, 
        593000, 
        595000, 
        598000, 
        606000, 
        608000, 
        610000, 
        613000, 
        616000, 
        618000, 
        620000, 
        623000, 
        628000, 
        635000, 
        639000, 
        645000, 
        648000, 
        653000, 
        655000, 
        659000, 
        660000, 
        662000, 
        667000, 
        669000, 
        671000, 
        674000, 
        675000, 
        677000, 
        678000, 
        682000, 
        685000, 
        688000, 
        690000
    ], 
    "text": [
        "", 
        "Let me just talk a little bit more", 
        "about how this scheme works.", 
        "The idea, basically, is everything is encoded.", 
        "And we replace every operation with a fault-tolerant version.", 
        "And between any two steps, we do a fault-tolerant recovery.", 
        "", 
        "Let me give an example of fault tolerant encoding.", 
        "", 
        "So let's say we start with some circuit looks like this.", 
        "We do a Hadamard controlled NOT.", 
        "And then we'll measure the qubit.", 
        "And I'm going to introduce--", 
        "when I write this, it's different notation", 
        "for just a measurement in the z basis.", 
        "So previously, we used this notation.", 
        "Today I want to sometimes use z and sometimes x measurements,", 
        "and so I'm going to--", 
        "I'll write it like this.", 
        "So here's just a simple circuit.", 
        "How are we going to make this fault tolerant?", 
        "So the fault tolerant version of the circuit is--", 
        "everything we do here, we replace with a fault tolerant", 
        "version of it.", 
        "So we can do a fault-tolerant preparation", 
        "of the encoded zero state.", 
        "So instead of preparing zero, we prepare the encoded zero state.", 
        "We do that twice.", 
        "", 
        "Then we might have made a mistake here.", 
        "There could be an error in this.", 
        "So we do a round of fault-tolerant recovery.", 
        "", 
        "Then we do the Hadamard, which I'll just write as H bar,", 
        "meaning a logical Hadamard.", 
        "And of course, how we do that logical Hadamard--", 
        "we have to be careful to follow the rules of fault tolerance.", 
        "Hadamard is not too hard, but for other gates,", 
        "may be more challenging.", 
        "Then we might have made a mistake here.", 
        "And also, these qubits were just sitting around,", 
        "so there may have been an error that happened here.", 
        "So let's do another round of fault-tolerant recovery.", 
        "Then we do the controlled NOT.", 
        "", 
        "Of course, this qubit we do the encoded version of,", 
        "because we're acting on encoded qubits.", 
        "We do another round of recovery.", 
        "", 
        "And then we measure, again, in the encoded basis.", 
        "", 
        "So that is sort of the high-level view", 
        "of what this looks like.", 
        "We just replace everything with this fault-tolerant version.", 
        "And then we argue that each individual component fails", 
        "with some small probability.", 
        "And there's one-- so that, actually--", 
        "", 
        "and you've seen what most of these things look like.", 
        "What I'm going to-- so for each one of them,", 
        "we write them in terms of individual gates.", 
        "So preparing the encoded zero state, for example,", 
        "we just have some circuit that creates--", 
        "that maybe starts from the zero state", 
        "and creates the encoded zero state.", 
        "So we just have just some circuit for that", 
        "made out of elementary gates.", 
        "I don't need to draw that out right now.", 
        "And then what we do is, at each level--", 
        "so level k circuits use level k minus 1 gates.", 
        "So let's suppose we want to do a fault-tolerant encoding", 
        "of a logical zero.", 
        "Then we would take our circuit for preparing", 
        "a logical zero state.", 
        "This is made out of individual gates.", 
        "And if we were doing a level k encoding,", 
        "each one of these gates would be a level k minus 1 gate.", 
        "And so then, to do those, there's some procedure.", 
        "So a level k minus 1 gate is made up", 
        "of many level k minus 2 gates, and so on.", 
        "Each level of k minus 2 gates is made", 
        "up of level k minus 3 gates, and so on,", 
        "until we finally get down to the basic physical gates", 
        "on the raw qubits.", 
        "So each gate at level k involves an exponential number", 
        "of basic gates, exponential in k.", 
        "But on the plus side, k doesn't have", 
        "to be too large before this is effective.", 
        "So with this scheme there there's", 
        "one thing you have to be careful of,", 
        "which is that we started the theorem with a premise", 
        "that each physical gate fails with an independent probability", 
        "p.", 
        "And physically, this might be somewhat plausible.", 
        "But it is not preserved by this sort of recursive encoding.", 
        "So when I have physical failures at level zero", 
        "which are uncorrelated, the logical failures at level 1", 
        "actually pick up some correlations.", 
        "And so we have to be a little bit", 
        "careful about calling each circuit element totally", 
        "independent.", 
        "But by being a little bit more conservative,", 
        "we can still kind of get the benefits of independence.", 
        "So let me let me illustrate how this works.", 
        "So independence is not strictly preserved.", 
        "", 
        "And I'll illustrate this even with classical fault tolerance,", 
        "because the issue already arises there.", 
        "So what does this look like classically?", 
        "Suppose you want to encode your bit into a 3-bit repetition", 
        "code.", 
        "So then your logical encoding looks like--", 
        "whatever your data is, you just have three copies of it.", 
        "", 
        "When you want to do a logical f, you just", 
        "do it in parallel on each bit.", 
        "And then, you want to intersperse", 
        "doing f with rounds--", 
        "doing your operations with rounds of error correction.", 
        "And so what is the fault-tolerant recovery scheme", 
        "for the 3-bit repetition code?", 
        "Block the majority gates, exactly.", 
        "And it's crucial that there be three of them.", 
        "So I'm just going to write m.", 
        "I'll write majority, like this.", 
        "", 
        "I don't want a single point of failure.", 
        "I want three gates.", 
        "And each of these f's goes into all of them.", 
        "Then I can do the next gates, let's say g.", 
        "", 
        "I do another block of majorities, and so on.", 
        "", 
        "The problem is I could have an error in one", 
        "of these majorities.", 
        "And then it could--", 
        "I'd have to worry about whether there's an error in this block,", 
        "as well as an error in the following block.", 
        "It could combine with either of these to cause problems.", 
        "And so what I really want to say is,", 
        "there's little units of the computation such", 
        "that I can tolerate at most one error", 
        "in any one of those blocks.", 
        "And these blocks, at the lowest level,", 
        "the error rate might be independent.", 
        "But at a higher level, these blocks can overlap.", 
        "So really what I want to do is draw various rectangles.", 
        "So here's one of them.", 
        "I can tolerate at most one error in this block.", 
        "If there's any one error that happens here,", 
        "the output of this will be essentially correct.", 
        "It might not be perfect.", 
        "If there's an error here, the output", 
        "will be correct, correct, incorrect,", 
        "but that's still de-codable to being correct.", 
        "", 
        "And then I can argue the same thing here--", 
        "that if there's any one error in this block, then I'll be OK.", 
        "So suppose that there is one error here.", 
        "And that means that there is no other errors on the f's and no", 
        "other errors on the g's.", 
        "Then the output of this will still be correctable.", 
        "And so if these majorities are correct,", 
        "then we'll be able to recover it.", 
        "And so then we draw kind of another rectangle around these.", 
        "And so what happens if you have these overlapping rectangles,", 
        "you need to guarantee that there's at most", 
        "one error in each rectangle.", 
        "And so these rectangles are, of course,", 
        "not independent from each other.", 
        "But they satisfy this weaker condition", 
        "that the probability of having lots of errors", 
        "goes down exponentially with the number of errors.", 
        "So let me just say, this rectangle approach--", 
        "these are called ex-recs, like extended rectangles.", 
        "And it makes the proof a little bit hairier, but it can be--", 
        "this is necessary in order to make it rigorous.", 
        "And this is due to Panos Aliferis, who", 
        "made a lot of contributions to fault tolerance,", 
        "but isn't working in the area now, Dan Gottesman and John", 
        "Preskill.", 
        "And Gottesman and Preskill are some", 
        "of the main contributors to the theory of fault tolerance.", 
        "And the other thing you can kind of", 
        "see about these extended rectangles", 
        "is this is part of the example of the conservatism", 
        "of the theorem.", 
        "Because the theorem wants to prove that", 
        "this thing is going to work.", 
        "But maybe in practice, it's being too pessimistic.", 
        "And so that's why numerical simulations are used, often,", 
        "to get sharper, but less reliable", 
        ""
    ]
}