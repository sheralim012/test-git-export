{
    "start": [
        0, 
        0, 
        3000, 
        8000, 
        17000, 
        27000, 
        31000, 
        37000, 
        40000, 
        58000, 
        59000, 
        64000, 
        68000, 
        69000, 
        73000, 
        76000, 
        77000, 
        80000, 
        83000, 
        85000, 
        88000, 
        90000, 
        94000, 
        96000, 
        101000, 
        103000, 
        105000, 
        108000, 
        110000, 
        117000, 
        118000, 
        126000, 
        131000, 
        139000, 
        146000, 
        155000, 
        167000, 
        179000, 
        182000, 
        186000, 
        191000, 
        193000, 
        195000, 
        198000, 
        201000, 
        204000, 
        205000, 
        211000, 
        213000, 
        214000, 
        222000, 
        229000, 
        231000, 
        233000, 
        235000, 
        238000, 
        239000, 
        244000, 
        246000, 
        249000, 
        251000, 
        253000, 
        257000, 
        265000, 
        272000, 
        276000, 
        279000, 
        282000, 
        285000, 
        294000, 
        295000, 
        298000, 
        300000, 
        312000, 
        318000, 
        325000, 
        328000, 
        332000, 
        336000, 
        338000, 
        342000, 
        345000, 
        348000, 
        351000, 
        355000, 
        364000, 
        368000, 
        372000, 
        375000, 
        377000, 
        381000, 
        384000, 
        387000, 
        394000, 
        406000, 
        414000, 
        418000, 
        421000, 
        425000, 
        430000, 
        432000, 
        435000, 
        438000, 
        440000, 
        442000, 
        444000, 
        446000, 
        451000, 
        452000, 
        459000, 
        465000, 
        468000, 
        471000, 
        474000, 
        475000, 
        483000, 
        491000, 
        506000, 
        511000, 
        514000, 
        517000, 
        520000, 
        523000, 
        527000, 
        536000, 
        546000, 
        553000, 
        556000, 
        559000, 
        560000, 
        563000, 
        567000, 
        570000, 
        575000, 
        576000, 
        582000, 
        585000, 
        588000, 
        590000, 
        594000
    ], 
    "end": [
        0, 
        3000, 
        8000, 
        17000, 
        27000, 
        31000, 
        37000, 
        40000, 
        58000, 
        59000, 
        64000, 
        68000, 
        69000, 
        73000, 
        76000, 
        77000, 
        80000, 
        83000, 
        85000, 
        88000, 
        90000, 
        94000, 
        96000, 
        101000, 
        103000, 
        105000, 
        108000, 
        110000, 
        117000, 
        118000, 
        126000, 
        131000, 
        139000, 
        146000, 
        155000, 
        167000, 
        179000, 
        182000, 
        186000, 
        191000, 
        193000, 
        195000, 
        198000, 
        201000, 
        204000, 
        205000, 
        211000, 
        213000, 
        214000, 
        222000, 
        229000, 
        231000, 
        233000, 
        235000, 
        238000, 
        239000, 
        244000, 
        246000, 
        249000, 
        251000, 
        253000, 
        257000, 
        265000, 
        272000, 
        276000, 
        279000, 
        282000, 
        285000, 
        294000, 
        295000, 
        298000, 
        300000, 
        312000, 
        318000, 
        325000, 
        328000, 
        332000, 
        336000, 
        338000, 
        342000, 
        345000, 
        348000, 
        351000, 
        355000, 
        364000, 
        368000, 
        372000, 
        375000, 
        377000, 
        381000, 
        384000, 
        387000, 
        394000, 
        406000, 
        414000, 
        418000, 
        421000, 
        425000, 
        430000, 
        432000, 
        435000, 
        438000, 
        440000, 
        442000, 
        444000, 
        446000, 
        451000, 
        452000, 
        459000, 
        465000, 
        468000, 
        471000, 
        474000, 
        475000, 
        483000, 
        491000, 
        506000, 
        511000, 
        514000, 
        517000, 
        520000, 
        523000, 
        527000, 
        536000, 
        546000, 
        553000, 
        556000, 
        559000, 
        560000, 
        563000, 
        567000, 
        570000, 
        575000, 
        576000, 
        582000, 
        585000, 
        588000, 
        590000, 
        594000, 
        594000
    ], 
    "text": [
        "", 
        "So now let's look at quantum postselection.", 
        "What can we do if we take a subblock of a unitary matrix?", 
        "And so let's say you have U has some subblock M.", 
        "And I'm going to ignore all of the others.", 
        "The reason is, I can think about it like this.", 
        "So here, I could say that U psi times", 
        "ket 0, where there's a single qubit,", 
        "is equal to M times psi times 0 plus something else times ket", 
        "1.", 
        "That's what it means for M to be a subblock of the matrix U.", 
        "Or I guess it's one way that M can be a subblock of the matrix", 
        "U.", 
        "And if I postselect on this being 0,", 
        "I've evolved according to the matrix M, where I don't care", 
        "what's in the other blocks.", 
        "", 
        "So here, because I want to make M a square matrix--", 
        "I don't want to deal with rectangular matrices--", 
        "", 
        "not only am I postselecting on this cubit being", 
        "0 on the output, I'm also inputting a 0 qubit here.", 
        "It doesn't make a big difference.", 
        "It just makes the notation a little bit easier.", 
        "And now, we can ask, what are the possible M's", 
        "you can get in this way?", 
        "For stochastic, once we did this, what we found", 
        "is normalization got dropped.", 
        "The only condition became the entries are non-negative.", 
        "So what about in the quantum case?", 
        "", 
        "So it turns out, in the quantum case, we can make M arbitrary.", 
        "So turns out that any M is allowed.", 
        "", 
        "So if we demand that the probability of question mark", 
        "is always less than 1, then we want M to be invertible.", 
        "", 
        "Ultimately, the transformation we're going to do", 
        "will be that psi goes to M times psi.", 
        "And so we never want to take a non-0 vector to a 0 vector.", 
        "And so that means that M should be invertible to rule out", 
        "that possibility.", 
        "But we don't care about overall normalization.", 
        "Just like in the classical case, if we rescale things,", 
        "it's not going to change the ratio of these output", 
        "probabilities.", 
        "And so we can just ignore the overall normalization.", 
        "Mathematically, this corresponds to something", 
        "called projective space.", 
        "In projective space, we say that two vectors are the same", 
        "if one of them is a non-0 scalar multiple of the other one.", 
        "So this is called projective space.", 
        "And it's, effectively, what we're working here", 
        "with with these vectors.", 
        "Normally, we're used to not caring about an overall face.", 
        "And so, we're just going a step further", 
        "and saying we also don't care about overall normalization.", 
        "OK, so I said that any M is allowed--", 
        "or any invertible M-- if we have this constraint that we", 
        "shouldn't send things to 0.", 
        "Let me prove to you why that's true.", 
        "", 
        "So the idea is we can always make--", 
        "OK, so why is this true?", 
        "So the idea is that we can always make a valid Kraus", 
        "operator out of M or something proportional to M.", 
        "And then, given valid Kraus operators,", 
        "we can always embed them into a larger unitary.", 
        "So the claim is, if we take M divided by the norm of M--", 
        "so by this norm of M--", 
        "", 
        "this also means the infinity norm,", 
        "means the largest singular value of M.", 
        "Or you could say it's the square root of the largest", 
        "eigenvalue of M dagger M. Those are all equivalent", 
        "ways of describing the norm.", 
        "So if I take M, and I rescale it in this way,", 
        "I'm going to get something whose largest singular", 
        "value is, at most, 1.", 
        "And I claim this can be a valid Kraus operator.", 
        "And to complete it to a full quantum operation,", 
        "I need another Kraus operator-- or at least one more.", 
        "But it turns out one is all I need.", 
        "And the other one I'll use will be the square root of identity", 
        "minus M dagger M over norm of M squared.", 
        "So you can think of this as a two-outcome measurement", 
        "where this one corresponds to the desired", 
        "action, and this one corresponds to failure.", 
        "And if I just postselect on success,", 
        "then I can achieve my desired time evolution,", 
        "up to some normalization, which I don't care about.", 
        "OK, so why are these valid Kraus operators?", 
        "So let me call this one L. So if you", 
        "look at M over M dagger times M over norm of M plus L dagger", 
        "L, our condition that this be a valid Kraus operator,", 
        "that these be a valid quantum operation,", 
        "is that these should add up to the identity.", 
        "And if you write it out, they pretty clearly do, right?", 
        "This is M dagger M over norm of M squared.", 
        "L and L dagger are the same thing.", 
        "This is a positive semidefinite operator.", 
        "So when I take L dagger L, I just", 
        "get rid of the square root.", 
        "And you can see I have this minus term that's", 
        "going to cancel out this.", 
        "And I'm just left with the identity.", 
        "So this is equal to the identity.", 
        "And so what that means--", 
        "", 
        "that this is a valid quantum operation.", 
        "", 
        "And so, as we saw before, you can always", 
        "embed quantum operations into an isometry.", 
        "So I could write--", 
        "", 
        "so there exists an isometry V such", 
        "that V psi is equal to M psi over norm of M tensor 0 plus L", 
        "psi tensor 1.", 
        "", 
        "The same conditions that make this a valid quantum operation", 
        "make this a legal isometry.", 
        "Now, I've argued before that isometries you can always", 
        "turn into unitaries.", 
        "So you could always write V psi is equal to U times psi tensor", 
        "0 for some unitary U.", 
        "If you go back to this matrix, you could view this block here", 
        "as being V. So V is the block that you", 
        "get when you have a 0 input.", 
        "It gives you this.", 
        "And if you have a 1 input, you'll get something else.", 
        "To be a unitary, you have to be well-defined on all inputs.", 
        "We just don't care about what happens with the 1 input.", 
        "Because we're only going to use this by inputting 0", 
        "into the second register.", 
        "", 
        "OK, so this completes the argument", 
        "that, with quantum postselection,", 
        "you can evolve a coin to, basically, whatever", 
        "matrix you want, as long as it doesn't send your norm to 0.", 
        ""
    ]
}