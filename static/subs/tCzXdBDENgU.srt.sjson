{
    "start": [
        0, 
        0, 
        2000, 
        5000, 
        9000, 
        11000, 
        13000, 
        16000, 
        22000, 
        24000, 
        27000, 
        28000, 
        30000, 
        32000, 
        33000, 
        36000, 
        40000, 
        42000, 
        46000, 
        50000, 
        54000, 
        58000, 
        61000, 
        62000, 
        68000, 
        72000, 
        75000, 
        79000, 
        81000, 
        83000, 
        88000, 
        92000, 
        95000, 
        96000, 
        103000, 
        108000, 
        110000, 
        112000, 
        114000, 
        118000, 
        121000, 
        123000, 
        126000, 
        128000, 
        136000, 
        139000, 
        142000, 
        146000, 
        147000, 
        151000, 
        156000, 
        157000, 
        163000, 
        166000, 
        170000, 
        172000, 
        174000, 
        176000, 
        178000, 
        182000, 
        184000, 
        186000, 
        189000, 
        192000, 
        194000, 
        195000, 
        197000, 
        202000, 
        205000, 
        208000, 
        214000, 
        218000, 
        221000, 
        224000, 
        228000, 
        231000, 
        236000, 
        244000, 
        246000, 
        248000, 
        254000, 
        269000, 
        273000, 
        275000, 
        277000, 
        279000, 
        281000, 
        283000, 
        284000, 
        286000, 
        288000, 
        291000, 
        296000, 
        299000, 
        302000, 
        313000, 
        320000, 
        321000, 
        322000, 
        324000, 
        327000, 
        333000, 
        336000, 
        339000, 
        346000, 
        348000, 
        351000, 
        354000, 
        359000, 
        361000, 
        364000, 
        366000, 
        370000, 
        372000, 
        375000, 
        378000, 
        383000, 
        384000, 
        388000, 
        392000, 
        394000, 
        398000, 
        400000, 
        401000, 
        403000, 
        405000, 
        409000, 
        412000, 
        415000, 
        417000, 
        419000, 
        421000, 
        424000, 
        426000, 
        428000, 
        432000, 
        433000, 
        436000, 
        439000, 
        441000, 
        442000, 
        446000, 
        452000, 
        462000, 
        464000, 
        468000, 
        472000, 
        474000, 
        477000, 
        479000, 
        482000, 
        486000, 
        487000, 
        488000, 
        490000, 
        493000, 
        497000, 
        498000, 
        502000, 
        504000, 
        506000, 
        507000, 
        509000, 
        512000, 
        517000, 
        519000, 
        522000, 
        529000, 
        542000, 
        548000, 
        550000, 
        553000, 
        556000, 
        558000, 
        563000, 
        565000, 
        566000, 
        571000, 
        575000, 
        577000, 
        579000, 
        582000
    ], 
    "end": [
        0, 
        2000, 
        5000, 
        9000, 
        11000, 
        13000, 
        16000, 
        22000, 
        24000, 
        27000, 
        28000, 
        30000, 
        32000, 
        33000, 
        36000, 
        40000, 
        42000, 
        46000, 
        50000, 
        54000, 
        58000, 
        61000, 
        62000, 
        68000, 
        72000, 
        75000, 
        79000, 
        81000, 
        83000, 
        88000, 
        92000, 
        95000, 
        96000, 
        103000, 
        108000, 
        110000, 
        112000, 
        114000, 
        118000, 
        121000, 
        123000, 
        126000, 
        128000, 
        136000, 
        139000, 
        142000, 
        146000, 
        147000, 
        151000, 
        156000, 
        157000, 
        163000, 
        166000, 
        170000, 
        172000, 
        174000, 
        176000, 
        178000, 
        182000, 
        184000, 
        186000, 
        189000, 
        192000, 
        194000, 
        195000, 
        197000, 
        202000, 
        205000, 
        208000, 
        214000, 
        218000, 
        221000, 
        224000, 
        228000, 
        231000, 
        236000, 
        244000, 
        246000, 
        248000, 
        254000, 
        269000, 
        273000, 
        275000, 
        277000, 
        279000, 
        281000, 
        283000, 
        284000, 
        286000, 
        288000, 
        291000, 
        296000, 
        299000, 
        302000, 
        313000, 
        320000, 
        321000, 
        322000, 
        324000, 
        327000, 
        333000, 
        336000, 
        339000, 
        346000, 
        348000, 
        351000, 
        354000, 
        359000, 
        361000, 
        364000, 
        366000, 
        370000, 
        372000, 
        375000, 
        378000, 
        383000, 
        384000, 
        388000, 
        392000, 
        394000, 
        398000, 
        400000, 
        401000, 
        403000, 
        405000, 
        409000, 
        412000, 
        415000, 
        417000, 
        419000, 
        421000, 
        424000, 
        426000, 
        428000, 
        432000, 
        433000, 
        436000, 
        439000, 
        441000, 
        442000, 
        446000, 
        452000, 
        462000, 
        464000, 
        468000, 
        472000, 
        474000, 
        477000, 
        479000, 
        482000, 
        486000, 
        487000, 
        488000, 
        490000, 
        493000, 
        497000, 
        498000, 
        502000, 
        504000, 
        506000, 
        507000, 
        509000, 
        512000, 
        517000, 
        519000, 
        522000, 
        529000, 
        542000, 
        548000, 
        550000, 
        553000, 
        556000, 
        558000, 
        563000, 
        565000, 
        566000, 
        571000, 
        575000, 
        577000, 
        579000, 
        582000, 
        583000
    ], 
    "text": [
        "", 
        "It's probably fairly obvious what the advantages", 
        "and disadvantages are, but I want to briefly discuss them.", 
        "So let me talk about the pros and cons", 
        "of these different models.", 
        "So why is this standard model a good one?", 
        "", 
        "I think one reason is that it's often what we want to do.", 
        "", 
        "We have a lot of computing tasks where our input naturally", 
        "is classical.", 
        "And I don't know about you, but I", 
        "have trouble just looking at a quantum state", 
        "and understand what it is.", 
        "I like to read things in a classical way.", 
        "So we often want classical input and classical output.", 
        "So that corresponds to the things", 
        "that are useful in terms of applications.", 
        "Also, we're often comparing quantum to classical computers.", 
        "And so as theorists, if we're developing algorithms,", 
        "even if they're not useful, we want to be able to say,", 
        "this is clearly more powerful than a corresponding classical", 
        "algorithm.", 
        "And so when you're working in the standard model,", 
        "it's more of a fair fight with classical algorithms.", 
        "I can directly compare Shor's algorithm", 
        "to an algorithm running on a normal classical CPU.", 
        "And there's no dispute about whether I'm", 
        "using the right model of computing to do this.", 
        "", 
        "The disadvantage is that, of course, these are hard to find.", 
        "", 
        "And there's another, more subtle,", 
        "disadvantage, which is, if you want a quantum, is that--", 
        "well, as I mentioned before, whatever this input size is, n,", 
        "you somehow already are--", 
        "no matter what, you have to expend effort, m,", 
        "in the course of this problem.", 
        "And so by the time you specify the full input n,", 
        "you've already given up the possibility", 
        "of running in time sub-linear in n.", 
        "So you need to find problems with a classical running time", 
        "that grows rapidly with n.", 
        "So the runtime is always at least n,", 
        "which means the classical algorithms should", 
        "run in at least time n squared, or n cubed.", 
        "Ideally, exponential in n, if you want a possibility", 
        "of a real quantum speedup.", 
        "", 
        "So by contrast, in the oracle model,", 
        "we can get provable speedups.", 
        "", 
        "So I should have said, in the standard model,", 
        "we can never prove any speedups, because we can never prove", 
        "that P is not equal to BQP.", 
        "So for Shor's algorithm, we're pretty", 
        "sure it's a speedup, because we're", 
        "pretty sure there's not a classical factoring algorithm.", 
        "But these are things that complexity theorists just", 
        "conjecture, they don't prove.", 
        "But there are some things that complexity theorists can just", 
        "prove, and those are oracle lower bounds.", 
        "So in the oracle model, you can unconditionally", 
        "prove various advantages.", 
        "Grover's algorithm.", 
        "We know the quantum is in root n,", 
        "and it's very easy to prove a classical lower bound of order.", 
        "And there are many, many other oracle algorithms where you", 
        "can prove exponential speedups.", 
        "The speedups are also more diverse than the ones", 
        "for which we have an standard input model.", 
        "We have very wacky oracle speedups.", 
        "And often, the oracle speedup is the first step", 
        "towards developing one of these more standard model", 
        "algorithmic speedups.", 
        "So this gives us ideas.", 
        "And there exist classical oracles.", 
        "So it's possible to compare against what", 
        "the classical computer does, even", 
        "if it's a slightly weird model of computing.", 
        "The main downside is, how do we implement the oracle?", 
        "The way to view algorithms of types two, three, and four--", 
        "I would say that these are incomplete algorithms.", 
        "These are like subroutines.", 
        "So when I do Grover's algorithm, you", 
        "could say I have a string of n bits.", 
        "I want to know if any one of them is 1.", 
        "The next question is, well, where", 
        "did that string come from?", 
        "We haven't answered to that question yet.", 
        "Once you answer that question, you get a complete algorithm.", 
        "For example, you might say--", 
        "so actually, I was looking at the 8.370 lecture,", 
        "and Peter [? Shor ?] gave an example of--", 
        "I want to find solutions to some Diophantine equation,", 
        "like a to the 4 plus b to the 4 plus c to the 4 equals d", 
        "to the 4, the kind of thing covered", 
        "in Fermat's Last Theorem.", 
        "And let's say I want all the numbers", 
        "to be less than 1 billion.", 
        "So that's 10 to the 9 choices of each one.", 
        "", 
        "And it's probably not the best way to do this,", 
        "but I could say that there are 10 to the 27 choices of a, b,", 
        "and c.", 
        "And classically, I could just brute force over all of them,", 
        "or quantumly, I could Grover over this.", 
        "And what that means is, I have a string of length 10 of the 27.", 
        "Every entry in the string is indexed", 
        "by my choice of a, b, and c.", 
        "And the entry is either 0 or 1.", 
        "It's 1 if the fourth root is an integer--", 
        "in other words, if I can find an integer,", 
        "d, such that this equation holds.", 
        "And it's 0 if its fourth root is not an integer.", 
        "And by doing simple math I can compute, given a, b, and c,", 
        "that entry of the string.", 
        "Just take a, b, and c, raise them to the fourth power,", 
        "add them up, take the fourth root, check if it's an integer.", 
        "So all that is a short calculation", 
        "that I can do to instantiate that oracle.", 
        "So that unitary oracle that I've just posited", 
        "for Grover's algorithm--", 
        "I've put together a sequence of gates", 
        "that I'm going to call the oracle.", 
        "\"Oracle,\" you could think of it as another word for subroutine.", 
        "So I have to come up with what's in this subroutine.", 
        "And then I can run Grover's algorithm here.", 
        "So it's not hard to come up with these oracles", 
        "for which Grover's is interesting,", 
        "but you have to do the work.", 
        "You have to come up with such an oracle.", 
        "And [INAUDIBLE] Shor's is a complete algorithm.", 
        "I mean, I guess you haven't told me where you got the input", 
        "numbers from, but at a certain point,", 
        "there's always an infinite regress.", 
        "The input always has to come from somewhere.", 
        "But with Grover, you still have to specify part of the code,", 
        "and so you have to come up with the code", 
        "to instantiate the oracle.", 
        "", 
        "And for three and four, the situation is pretty similar.", 
        "The disadvantage is that these are incomplete algorithms.", 
        "For example, let's suppose I want", 
        "to do Hamiltonian simulation, a very useful thing.", 
        "I have to tell you, how do I specify the Hamiltonian?", 
        "There has to be some encoding.", 
        "For example, if it's a chemistry problem", 
        "I have to have some way of turning", 
        "in my description of the molecule, which ultimately", 
        "is going to be in terms of a bit string, into that Hamiltonian.", 
        "There are ways of doing this.", 
        "It's doable.", 
        "But that's part of the thing that you have to specify,", 
        "that wasn't in there already.", 
        "I have to specify how I create the input state to the problem.", 
        "I have to specify what measurement", 
        "I make on the output state, because just knowing", 
        "that in the bowels of my quantum computer", 
        "I've evolved from one state to another one--", 
        "that does me no good.", 
        "In the end, I want to make a measurement", 
        "and extract an answer, which I can write down.", 
        "So just like oracle algorithms, these other ones", 
        "are incomplete, and they take additional work", 
        "to turn into something in the standard model.", 
        "On the other hand, three and four can be very useful in part", 
        "because for both of them, there is no obvious classical", 
        "analogue, I would say, for both of these.", 
        "So for example, if you're looking", 
        "at quantum speedups for factoring or combinatorial", 
        "optimization, classical computers", 
        "have a lot of good algorithms for those.", 
        "If you want a quantum speedup for Hamiltonian simulation,", 
        "there are classical algorithms for those,", 
        "but they're much worse.", 
        "They're much closer just to the naive exponential type thing.", 
        "So for these types of algorithms,", 
        "quantum really has a head start.", 
        "But you do still have to do the work", 
        "to turn it into something in the standard model.", 
        ""
    ]
}