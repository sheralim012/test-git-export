{
    "start": [
        0, 
        0, 
        2000, 
        7000, 
        12000, 
        21000, 
        23000, 
        27000, 
        31000, 
        34000, 
        37000, 
        39000, 
        41000, 
        43000, 
        48000, 
        49000, 
        51000, 
        54000, 
        61000, 
        64000, 
        68000, 
        70000, 
        78000, 
        81000, 
        85000, 
        90000, 
        92000, 
        96000, 
        104000, 
        111000, 
        120000, 
        128000, 
        131000, 
        134000, 
        141000, 
        141000, 
        145000, 
        154000, 
        155000, 
        155000, 
        157000, 
        158000, 
        159000, 
        160000, 
        161000, 
        163000, 
        165000, 
        168000, 
        170000, 
        179000, 
        186000, 
        188000, 
        189000, 
        191000, 
        193000, 
        196000, 
        200000, 
        209000, 
        218000, 
        221000, 
        224000, 
        230000, 
        236000, 
        242000, 
        248000, 
        251000, 
        254000, 
        256000, 
        261000, 
        262000, 
        264000, 
        267000, 
        273000, 
        276000, 
        282000, 
        288000, 
        293000, 
        296000, 
        303000, 
        312000, 
        314000, 
        316000, 
        319000, 
        320000, 
        323000, 
        325000, 
        338000, 
        341000, 
        344000, 
        349000, 
        351000, 
        355000, 
        358000, 
        359000, 
        361000, 
        365000, 
        369000, 
        372000, 
        380000, 
        381000, 
        385000, 
        388000, 
        389000, 
        395000, 
        403000, 
        406000, 
        408000, 
        411000, 
        414000
    ], 
    "end": [
        0, 
        2000, 
        7000, 
        12000, 
        21000, 
        23000, 
        27000, 
        31000, 
        34000, 
        37000, 
        39000, 
        41000, 
        43000, 
        48000, 
        49000, 
        51000, 
        54000, 
        61000, 
        64000, 
        68000, 
        70000, 
        78000, 
        81000, 
        85000, 
        90000, 
        92000, 
        96000, 
        104000, 
        111000, 
        120000, 
        128000, 
        131000, 
        134000, 
        141000, 
        141000, 
        145000, 
        154000, 
        155000, 
        155000, 
        157000, 
        158000, 
        159000, 
        160000, 
        161000, 
        163000, 
        165000, 
        168000, 
        170000, 
        179000, 
        186000, 
        188000, 
        189000, 
        191000, 
        193000, 
        196000, 
        200000, 
        209000, 
        218000, 
        221000, 
        224000, 
        230000, 
        236000, 
        242000, 
        248000, 
        251000, 
        254000, 
        256000, 
        261000, 
        262000, 
        264000, 
        267000, 
        273000, 
        276000, 
        282000, 
        288000, 
        293000, 
        296000, 
        303000, 
        312000, 
        314000, 
        316000, 
        319000, 
        320000, 
        323000, 
        325000, 
        338000, 
        341000, 
        344000, 
        349000, 
        351000, 
        355000, 
        358000, 
        359000, 
        361000, 
        365000, 
        369000, 
        372000, 
        380000, 
        381000, 
        385000, 
        388000, 
        389000, 
        395000, 
        403000, 
        406000, 
        408000, 
        411000, 
        414000, 
        417000
    ], 
    "text": [
        "", 
        "So let us recurse and see what happens if we do", 
        "the same thing now recursively.", 
        "What we want to do is to now repeat the encoding and let a 0", 
        "be mapped to 000 000 000 and a 1 be mapped to nine 1's.", 
        "And there are three groups in this.", 
        "So you can actually see what we've done is repeat and encode", 
        "000 by repeating that three times.", 
        "And thus, this recursive step that I'm about to show you", 
        "could be repeated again and again.", 
        "And thus, we will get a system which", 
        "shows you what happens when you scale", 
        "to a large number of gates.", 
        "And this construction is very simple to imagine", 
        "and are literally tedious to draw.", 
        "So what we'll have is--", 
        "", 
        "this will be A and this will be B coming in.", 
        "And we will have three big blocks here.", 
        "", 
        "And in each one of these three big blocks,", 
        "we're going to have the same construction with six gates", 
        "that I just showed you on the other board.", 
        "", 
        "And each one of these will output three wires", 
        "and take six wires in.", 
        "So the way this works is we get a part", 
        "of A coming in over here, over here,", 
        "over here, over here, over here, and so forth.", 
        "", 
        "And now, this is our encoded gate,", 
        "and we will subsequently also perform--", 
        "", 
        "this is three blocks of M's, and this is our error correction", 
        "step.", 
        "So just like the construction that you saw over there,", 
        "what we're now going to do is to copy these three over", 
        "in the appropriate ways.", 
        "OK.", 
        "So this one goes here.", 
        "It also goes here.", 
        "It also goes here.", 
        "This one goes here.", 
        "It also goes here.", 
        "It also goes here.", 
        "And so on and so forth.", 
        "And here's where I start to scribble.", 
        "But you get the idea.", 
        "And what we're going to get out is 1, 2, 3, 4, 5, 6, 7, 8, 9.", 
        "And these nine outputs are going to give you, in total, A and B", 
        "negated.", 
        "Good?", 
        "And so this is a recursive structure.", 
        "What we want to do is to calculate", 
        "the probability of failure of this recursive structure.", 
        "And I want to write this formula out in a nice way for you.", 
        "So we can see that the output is incorrect only", 
        "if two blocks of gates fail.", 
        "So this is the identical language", 
        "that I used in the previous construction.", 
        "And there are 6 choose 2 ways of having blocks fail.", 
        "", 
        "And thus, the probability of failure", 
        "goes as 15 times 15p squared quantity squared.", 
        "", 
        "But let's write that in a nicer way.", 
        "Let's get now a recursive formula", 
        "for the error probability of this cascaded, concatenated", 
        "gate sequence.", 
        "", 
        "What we have up there is that p fail", 
        "goes as 15 p squared squared.", 
        "", 
        "And it's nice to write this as 15p squared--", 
        "excuse me, 15p to the fourth power divide by 15.", 
        "Because I claim that if we continue this recursion,", 
        "then we can expand on this pattern that we have.", 
        "At level 1 we had that p fail times c.", 
        "And if we define c as being the number of fault paths.", 
        "And in this case, above, it's 15.", 
        "So we have c times p fail--", 
        "this is the number c which I moved over to the left-hand", 
        "side--", 
        "is equal to 15--", 
        "which is c. c times p squared.", 
        "At level 2, cp fail is equal to cp to 2 to the 2.", 
        "", 
        "At level three, if we kept on doing the same thing,", 
        "we would find that cp fail is equal to c times p to the 2", 
        "to the 3.", 
        "So it would go square, fourth power, and eighth power,", 
        "and then 16, et cetera.", 
        "OK?", 
        "64.", 
        "And the nice thing about this is that we", 
        "can write down the formula for the extent of how this goes.", 
        "At the k-th level recursion, c times p", 
        "fail will be cp to the 2 to the k-th power.", 
        "OK.", 
        "And the idea of fault tolerance is", 
        "that this is growing exponentially or doubling", 
        "exponentially.", 
        "And thus, as long as p is less than 1 over c,", 
        "then this probability of failure goes to 0, very rapidly,", 
        "as we increase the level of recursion.", 
        "Doubly exponentially rapidly.", 
        "And this is part of the idea of this computational capacity,", 
        "that it goes so rapidly to zero.", 
        ""
    ]
}