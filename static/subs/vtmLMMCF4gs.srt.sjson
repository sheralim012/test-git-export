{
    "start": [
        0, 
        0, 
        7000, 
        14000, 
        18000, 
        19000, 
        22000, 
        25000, 
        27000, 
        30000, 
        33000, 
        37000, 
        39000, 
        44000, 
        47000, 
        50000, 
        53000, 
        60000, 
        67000, 
        68000, 
        72000, 
        76000, 
        86000, 
        86000, 
        89000, 
        98000, 
        106000, 
        109000, 
        119000, 
        122000, 
        124000, 
        125000, 
        127000, 
        129000, 
        131000, 
        134000, 
        136000, 
        138000, 
        140000, 
        144000, 
        146000, 
        148000, 
        151000, 
        154000, 
        156000, 
        158000, 
        161000, 
        164000, 
        167000, 
        169000, 
        173000, 
        176000, 
        178000, 
        181000, 
        186000, 
        187000, 
        190000, 
        192000, 
        194000, 
        197000, 
        197000, 
        200000, 
        201000, 
        204000, 
        208000, 
        210000, 
        213000, 
        215000, 
        219000, 
        222000, 
        223000, 
        226000, 
        232000, 
        235000, 
        238000, 
        239000, 
        244000, 
        248000, 
        250000, 
        252000, 
        256000, 
        259000, 
        261000, 
        264000, 
        267000, 
        269000, 
        270000, 
        273000, 
        275000, 
        277000, 
        280000, 
        282000, 
        284000, 
        286000, 
        289000, 
        291000, 
        294000
    ], 
    "end": [
        0, 
        7000, 
        14000, 
        18000, 
        19000, 
        22000, 
        25000, 
        27000, 
        30000, 
        33000, 
        37000, 
        39000, 
        44000, 
        47000, 
        50000, 
        53000, 
        60000, 
        67000, 
        68000, 
        72000, 
        76000, 
        86000, 
        86000, 
        89000, 
        98000, 
        106000, 
        109000, 
        119000, 
        122000, 
        124000, 
        125000, 
        127000, 
        129000, 
        131000, 
        134000, 
        136000, 
        138000, 
        140000, 
        144000, 
        146000, 
        148000, 
        151000, 
        154000, 
        156000, 
        158000, 
        161000, 
        164000, 
        167000, 
        169000, 
        173000, 
        176000, 
        178000, 
        181000, 
        186000, 
        187000, 
        190000, 
        192000, 
        194000, 
        197000, 
        197000, 
        200000, 
        201000, 
        204000, 
        208000, 
        210000, 
        213000, 
        215000, 
        219000, 
        222000, 
        223000, 
        226000, 
        232000, 
        235000, 
        238000, 
        239000, 
        244000, 
        248000, 
        250000, 
        252000, 
        256000, 
        259000, 
        261000, 
        264000, 
        267000, 
        269000, 
        270000, 
        273000, 
        275000, 
        277000, 
        280000, 
        282000, 
        284000, 
        286000, 
        289000, 
        291000, 
        294000, 
        296000
    ], 
    "text": [
        "", 
        "The idea is that a distance 3 code corrects one error.", 
        "So the probability of logical error", 
        "goes from P to order P squared.", 
        "Right?", 
        "So P to P squared times some constant.", 
        "And so if I iterate that K times it's", 
        "going to go P squared, P to the fourth,", 
        "P to the eighth, et cetera up to P to the two to the K.", 
        "Hence this number right here.", 
        "But the constant here is also getting squared.", 
        "So that's why we really have this kind of race", 
        "between the P, which is hopefully small enough", 
        "that squaring it helps you, and the constant prefactor, which", 
        "is bigger than 1 and where squaring it hurts you.", 
        "This is kind of the fault paths that you heard about on Monday.", 
        "", 
        "So this is the rough idea and the repeater squaring", 
        "is very powerful, right?", 
        "Because even though the overhead is exponential in K", 
        "the error is doubly exponentially small.", 
        "So what this means is that if you have an N-gate circuit,", 
        "becomes.", 
        "", 
        "So after, fault tolerant in coding", 
        "becomes an N polylog N over epsilon circuit.", 
        "", 
        "With epsilon probability of overall error.", 
        "So the reason is what is the ultimate error", 
        "that we want to target?", 
        "Well, let's say we--", 
        "our answer is going to be a bit, right?", 
        "We run this entire circuit, it just", 
        "gives us the end yes no answer.", 
        "So we'd like it to be right more than half the time.", 
        "Probably significantly more than half the time,", 
        "let's say 2/3 of the time.", 
        "So the error probability you want", 
        "to target this final epsilon let's say it would be 1/3.", 
        "But whatever it is, that's the error probability", 
        "for the entire circuit.", 
        "And pessimistically we'd have to say", 
        "if there's any error along the way in any single gate, that", 
        "could invalidate the entire circuit.", 
        "In some cases that's too conservative.", 
        "In other cases, like let's say I'm multiplying two numbers", 
        "or I'm raising one number to the power,", 
        "I'm doing exponentiation.", 
        "In that case, even a single gate error in the middle", 
        "is going to make my final answer almost totally wrong.", 
        "So what I like to do is guarantee", 
        "that there's no error on any individual gate.", 
        "So if I have N gates, I want the probability of error", 
        "on any individual gate to be epsilon overhead.", 
        "So that when I do N of these gates,", 
        "the total error is at most epsilon.", 
        "You did a problem on your P set where you showed", 
        "that this works for unitaries.", 
        "Right, if I have N unitaries and each one is off by epsilon--", 
        "oh, sorry.", 
        "Each one is off by epsilon over N,", 
        "then the product of all those unitaries", 
        "will be off by at most epsilon.", 
        "And I assert that the same thing is true of quantum operations.", 
        "It's a pretty easy corollary of the problem", 
        "that you did on the P set.", 
        "So it suffices to get each individual case", 
        "gate to some low error and then the overall circuit", 
        "will be correct with high probability.", 
        "OK.", 
        "So this is very nice in a theoretical computer science", 
        "sense because you know polylog N is pretty close to--", 
        "you know N polylog N is pretty close to N.", 
        "In a practical sense, the constants involved", 
        "are pretty big.", 
        "So in the near term people are looking a little bit more", 
        "to the toric code for a more, slightly more efficient way", 
        "of getting at the threshold.", 
        "But on the other hand, people are still", 
        "improving dramatically these concatenated code schemes.", 
        "And so, ultimately it's really not clear", 
        "which is going to be the more efficient way", 
        "to realize fault tolerance.", 
        "And that's a very interesting area of current research", 
        "is taking these theoretical guarantees, which", 
        "I'm going to--", 
        "Today I'm going to sketch to you just that all the ingredients", 
        "are possible, and then taking those", 
        "and really optimizing them.", 
        "That plays a big role in making quantum computers closer", 
        "to being feasible.", 
        "And when you think about the relative cost", 
        "of multiplying the qubits by 10 or spending", 
        "some more of theorist time and optimizing the error correction", 
        "schemes, it seems like a very clear win", 
        "that we should be working to optimize these as much", 
        ""
    ]
}