{
  "start": [
    0, 
    0, 
    2000, 
    4000, 
    5000, 
    8000, 
    10000, 
    15000, 
    20000, 
    21000, 
    29000, 
    35000, 
    38000, 
    41000, 
    46000, 
    50000, 
    51000, 
    54000, 
    65000, 
    68000, 
    71000, 
    77000, 
    78000, 
    80000, 
    83000, 
    87000, 
    90000, 
    94000, 
    98000, 
    100000, 
    103000, 
    105000, 
    109000, 
    120000, 
    122000, 
    126000, 
    134000, 
    135000, 
    138000, 
    143000, 
    151000, 
    158000, 
    160000, 
    162000, 
    167000, 
    170000, 
    171000, 
    175000, 
    178000, 
    182000, 
    184000, 
    186000, 
    193000, 
    196000, 
    199000, 
    211000, 
    219000, 
    223000, 
    225000, 
    227000, 
    231000, 
    233000, 
    238000, 
    245000, 
    247000, 
    249000, 
    252000, 
    261000, 
    273000, 
    276000, 
    281000, 
    284000, 
    292000, 
    294000, 
    298000, 
    302000, 
    304000, 
    309000, 
    315000, 
    318000, 
    324000, 
    327000, 
    328000
  ], 
  "end": [
    0, 
    2000, 
    4000, 
    5000, 
    8000, 
    10000, 
    15000, 
    20000, 
    21000, 
    29000, 
    35000, 
    38000, 
    41000, 
    46000, 
    50000, 
    51000, 
    54000, 
    65000, 
    68000, 
    71000, 
    77000, 
    78000, 
    80000, 
    83000, 
    87000, 
    90000, 
    94000, 
    98000, 
    100000, 
    103000, 
    105000, 
    109000, 
    120000, 
    122000, 
    126000, 
    134000, 
    135000, 
    138000, 
    143000, 
    151000, 
    158000, 
    160000, 
    162000, 
    167000, 
    170000, 
    171000, 
    175000, 
    178000, 
    182000, 
    184000, 
    186000, 
    193000, 
    196000, 
    199000, 
    211000, 
    219000, 
    223000, 
    225000, 
    227000, 
    231000, 
    233000, 
    238000, 
    245000, 
    247000, 
    249000, 
    252000, 
    261000, 
    273000, 
    276000, 
    281000, 
    284000, 
    292000, 
    294000, 
    298000, 
    302000, 
    304000, 
    309000, 
    315000, 
    318000, 
    324000, 
    327000, 
    328000, 
    332000
  ], 
  "text": [
    "", 
    "So what I've said about quantum codes is very general.", 
    "And we have a hard time, even with fully general", 
    "classical codes--", 
    "we have to retreat to linear codes, classically.", 
    "So quantumly, it's not surprising we also", 
    "want to look at an analog of linear codes.", 
    "Let's-- let me just first review what classical linear codes", 
    "are.", 
    "So a classical linear code we can", 
    "write as the image of some generator matrix,", 
    "or the kernel of some check matrix.", 
    "", 
    "And either way, it's a linear subspace of F_2 to the n.", 
    "These are two equivalent ways of describing it.", 
    "Neither one is fundamental.", 
    "Either one would work.", 
    "But what we will find is that this, the check operators,", 
    "will generalize nicely to the quantum case.", 
    "", 
    "This image of the generators is not the most natural thing", 
    "to generalize.", 
    "We'll see that some version of the generators", 
    "appears in the quantum case, but they're not the most useful way", 
    "of defining the code, whereas the kernel of the check matrix.", 
    "So let me just briefly explain how", 
    "to think about the kernel of the check matrix", 
    "in a way that could work for quantum codes.", 
    "And to do this, let me go back to thinking", 
    "about classical codes as quantum codes.", 
    "And just using the quantum formalism", 
    "to describe these classical codes that we already have.", 
    "So in other words, let me take C to be the span of all x", 
    "where x belongs to the classical code.", 
    "", 
    "All these x's satisfy H_x equals zero.", 
    "Right?", 
    "That's what it means to be the check matrix.", 
    "And we can reduce this to saying any column of H", 
    "or any linear combination of columns has inner product 0.", 
    "This is for any h in the image of capital H.", 
    "This is true for the columns.", 
    "It's also true for any linear combinations", 
    "that they are orthogonal to x in this F_2 sense.", 
    "", 
    "I want to write it like this.", 
    "So I can think of a quantum operator that will measure", 
    "whether this is the case.", 
    "And so to do this, let me define z to the h.", 
    "You have to be careful about this notation.", 
    "That could be a single cubit.", 
    "But if h is a vector, what that means is z_1 to the h_1, z_2", 
    "to the h_2, z_n to the h_n.", 
    "", 
    "So if we apply z_h to the vector x, what are we going to get?", 
    "We're going to get z_1 h_1 x_1 tensor z_n to the h_n x_n.", 
    "", 
    "Each one in each place, we're going", 
    "to get a phase of minus 1.", 
    "If h_1 is equal to 1 and x_1 is equal to 1.", 
    "Otherwise, we won't get any phase.", 
    "So we put this together, we get minus 1", 
    "to the inner product of h with x, at x.", 
    "And here, it's kind of nice because inner product", 
    "is mod 2, which goes really well with the fact", 
    "that we're doing minus 1 to this number.", 
    "And so now, I find that x is in the code if", 
    "and only if it's in the plus 1 eigenspace of all of these z_h.", 
    "", 
    "And so what I've done is I've written the code--", 
    "", 
    "the code space is now the set of states psi", 
    "that are plus 1 eigenstates of all", 
    "of these z to the h operators from all h", 
    "in the image of capital H.", 
    "So don't worry too much about what does is this set image", 
    "of capital H. The relevant thing to think about here is my code", 
    "space is the simultaneous plus 1 eigenspace of all of these", 
    "different operators, all of these z to the h's.", 
    "And so before, I had this F_2 linear algebra picture.", 
    "And what I'm saying is that if you move to polymatrices,", 
    "this is equivalent to being the plus 1", 
    ""
  ]
}