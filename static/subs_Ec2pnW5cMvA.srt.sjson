{
  "start": [
    0, 
    0, 
    1000, 
    4000, 
    10000, 
    15000, 
    18000, 
    21000, 
    32000, 
    37000, 
    53000, 
    59000, 
    61000, 
    69000, 
    78000, 
    81000, 
    87000, 
    91000, 
    94000, 
    96000, 
    99000, 
    102000, 
    104000, 
    108000, 
    111000, 
    113000, 
    116000, 
    119000, 
    122000, 
    125000, 
    128000, 
    129000, 
    132000, 
    133000, 
    136000, 
    138000, 
    141000, 
    144000, 
    147000, 
    151000, 
    152000, 
    154000, 
    156000, 
    158000, 
    166000, 
    168000, 
    169000, 
    172000, 
    175000, 
    176000, 
    180000, 
    184000, 
    186000, 
    188000, 
    191000, 
    193000, 
    196000, 
    198000, 
    203000, 
    205000, 
    209000, 
    211000, 
    211000, 
    214000, 
    216000, 
    223000, 
    232000, 
    236000, 
    237000, 
    240000, 
    243000, 
    247000, 
    249000, 
    251000, 
    261000, 
    268000, 
    273000, 
    278000, 
    280000, 
    281000, 
    285000, 
    288000, 
    290000, 
    292000
  ], 
  "end": [
    0, 
    1000, 
    4000, 
    10000, 
    15000, 
    18000, 
    21000, 
    32000, 
    37000, 
    53000, 
    59000, 
    61000, 
    69000, 
    78000, 
    81000, 
    87000, 
    91000, 
    94000, 
    96000, 
    99000, 
    102000, 
    104000, 
    108000, 
    111000, 
    113000, 
    116000, 
    119000, 
    122000, 
    125000, 
    128000, 
    129000, 
    132000, 
    133000, 
    136000, 
    138000, 
    141000, 
    144000, 
    147000, 
    151000, 
    152000, 
    154000, 
    156000, 
    158000, 
    166000, 
    168000, 
    169000, 
    172000, 
    175000, 
    176000, 
    180000, 
    184000, 
    186000, 
    188000, 
    191000, 
    193000, 
    196000, 
    198000, 
    203000, 
    205000, 
    209000, 
    211000, 
    211000, 
    214000, 
    216000, 
    223000, 
    232000, 
    236000, 
    237000, 
    240000, 
    243000, 
    247000, 
    249000, 
    251000, 
    261000, 
    268000, 
    273000, 
    278000, 
    280000, 
    281000, 
    285000, 
    288000, 
    290000, 
    292000, 
    296000
  ], 
  "text": [
    "", 
    "It's worth pointing out that these", 
    "do more than just correct sort of discrete bit flip errors.", 
    "Suppose we have the repetition code", 
    "and we have an error that looks like e to the i theta x3.", 
    "Right, so this repetition code--", 
    "so this is on let's say the 3-bit repetition code.", 
    "", 
    "This code can correct any single bit flip.", 
    "So c can correct the span of i x1, x2, x3.", 
    "And so this continuous range of errors, e to the i theta x3,", 
    "we do not have to worry about because I", 
    "can write it as a linear combination of these operators.", 
    "In other words, this contains e to the i theta x3.", 
    "OK, so that's an example of how continuous errors", 
    "with no extra effort are corrected by this code.", 
    "And the reason-- I'll answer in one second--", 
    "the reason why this happens is that when we measure--", 
    "So correcting the code will involve making a measurement", 
    "to see which error happened.", 
    "And before we do that measurement,", 
    "we'll see that the state is in a superposition.", 
    "You could say a superposition of i and x3.", 
    "Of course, superposition is just a term", 
    "that we use because we have a preferred basis.", 
    "But if our preferred basis of errors is identity and x3,", 
    "our state is in a superposition of those two.", 
    "And so if we measure to figure out which error happens,", 
    "that measurement will have a random answer.", 
    "Sometimes we'll find that there was no error,", 
    "that we can have I, and sometimes you'll", 
    "find that there was x3.", 
    "And so that will--", 
    "when you make a measurement, it will collapse the superposition", 
    "to one of those two possibilities.", 
    "And that measurement collapse will", 
    "take care of this continuous range of outcomes.", 
    "So we have this continuous range of outcomes-- sorry--", 
    "continuous range of parameters here and that gets", 
    "collapsed once we do the measurement,", 
    "that sort of measurement collapse", 
    "here is working in our favor.", 
    "Uh, you had a question?", 
    "[INAUDIBLE] between two patterns, it becomes scalar?", 
    "Maybe I didn't catch what you said in--", 
    "So this is a definition.", 
    "Yeah, so you think of inner product", 
    "as taking in two vectors and outputting a number?", 
    "Yes.", 
    "In general, it could take in two objects.", 
    "They can be matrices, vectors, any kind of object", 
    "where linear combinations are well-defined", 
    "and output a number.", 
    "And the reason why I call it a bio-linear form,", 
    "or maybe I should say a [INAUDIBLE] linear form,", 
    "is that it's linear in the second argument and conjugate", 
    "linear in the first argument.", 
    "So in other words, if I replace e1 there with e1 plus e1 prime,", 
    "then the corresponding numbers just add.", 
    "Or if I take e2, and I multiply that by a scalar,", 
    "the number there gets multiplied by the complex conjugate", 
    "of that skill.", 
    "", 
    "Did we see that [INAUDIBLE]?", 
    "", 
    "So in this case--", 
    "", 
    "yeah, I think I don't want to--", 
    "I think it would take me too far afield to work it out.", 
    "But in this case, basically, these", 
    "would all be orthonormal, or--", 
    "yeah, orthonormal in that inner product.", 
    "So what the inner product would be", 
    "is basically if you call these operators a0, a1, through a3,", 
    "then the inner product would look like ai, aj is delta ij.", 
    "", 
    "So that part is not so obvious.", 
    "What I think is more obvious is seeing", 
    "that this condition holds.", 
    "You know, 0 0 0 and 1 0 1 are orthogonal,", 
    "and they remain so even after applying a single poleaxe.", 
    "I think that's more obvious and intuitive.", 
    "This is I think not so obvious.", 
    ""
  ]
}