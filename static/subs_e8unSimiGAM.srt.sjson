{
  "start": [
    0, 
    0, 
    2000, 
    4000, 
    6000, 
    9000, 
    21000, 
    22000, 
    25000, 
    27000, 
    28000, 
    30000, 
    33000, 
    36000, 
    38000, 
    40000, 
    42000, 
    44000, 
    45000, 
    49000, 
    50000, 
    53000, 
    56000, 
    59000, 
    63000, 
    67000, 
    68000, 
    72000, 
    75000, 
    77000, 
    79000, 
    81000, 
    86000, 
    91000, 
    99000, 
    103000, 
    105000, 
    109000, 
    114000, 
    115000, 
    118000, 
    120000, 
    125000, 
    126000, 
    135000, 
    140000, 
    148000, 
    152000, 
    155000, 
    157000, 
    162000, 
    165000, 
    169000, 
    172000, 
    173000, 
    175000, 
    178000, 
    181000, 
    189000, 
    196000, 
    197000, 
    200000, 
    208000, 
    209000, 
    214000, 
    223000, 
    225000, 
    227000, 
    232000, 
    235000, 
    240000, 
    242000, 
    246000, 
    251000, 
    252000, 
    260000, 
    264000, 
    269000, 
    275000, 
    275000, 
    280000, 
    283000, 
    285000, 
    288000, 
    290000, 
    296000, 
    300000, 
    302000, 
    305000, 
    311000, 
    314000, 
    320000, 
    328000, 
    331000, 
    332000, 
    337000, 
    341000, 
    357000, 
    358000, 
    362000, 
    367000, 
    373000, 
    375000, 
    378000, 
    381000, 
    383000, 
    390000, 
    393000, 
    395000, 
    399000, 
    401000, 
    403000, 
    406000, 
    411000, 
    416000, 
    420000, 
    423000, 
    427000, 
    430000, 
    433000, 
    435000, 
    441000, 
    447000, 
    449000, 
    462000, 
    466000, 
    468000, 
    469000, 
    471000, 
    474000, 
    478000, 
    479000, 
    482000, 
    487000, 
    492000, 
    494000, 
    498000, 
    499000, 
    502000, 
    512000, 
    514000, 
    518000, 
    519000, 
    526000, 
    536000, 
    542000, 
    545000, 
    546000, 
    548000, 
    552000, 
    560000, 
    564000, 
    569000, 
    572000, 
    575000, 
    580000, 
    591000, 
    595000, 
    599000, 
    609000, 
    611000, 
    614000, 
    617000, 
    619000, 
    623000, 
    627000, 
    628000, 
    630000, 
    633000, 
    634000, 
    638000, 
    644000, 
    647000, 
    650000, 
    652000, 
    660000, 
    663000, 
    667000, 
    672000, 
    675000, 
    679000, 
    683000, 
    685000, 
    687000, 
    692000, 
    694000, 
    698000, 
    700000, 
    701000, 
    706000, 
    713000, 
    716000, 
    718000, 
    721000, 
    724000, 
    726000, 
    729000, 
    733000, 
    735000, 
    737000, 
    741000, 
    746000, 
    749000, 
    754000, 
    755000, 
    757000, 
    758000, 
    761000, 
    763000, 
    765000, 
    767000, 
    768000, 
    770000, 
    774000, 
    776000, 
    782000, 
    783000, 
    786000, 
    788000, 
    793000, 
    793000, 
    799000, 
    803000, 
    807000, 
    809000, 
    811000, 
    814000, 
    819000, 
    820000, 
    822000, 
    824000, 
    830000, 
    839000
  ], 
  "end": [
    0, 
    2000, 
    4000, 
    6000, 
    9000, 
    21000, 
    22000, 
    25000, 
    27000, 
    28000, 
    30000, 
    33000, 
    36000, 
    38000, 
    40000, 
    42000, 
    44000, 
    45000, 
    49000, 
    50000, 
    53000, 
    56000, 
    59000, 
    63000, 
    67000, 
    68000, 
    72000, 
    75000, 
    77000, 
    79000, 
    81000, 
    86000, 
    91000, 
    99000, 
    103000, 
    105000, 
    109000, 
    114000, 
    115000, 
    118000, 
    120000, 
    125000, 
    126000, 
    135000, 
    140000, 
    148000, 
    152000, 
    155000, 
    157000, 
    162000, 
    165000, 
    169000, 
    172000, 
    173000, 
    175000, 
    178000, 
    181000, 
    189000, 
    196000, 
    197000, 
    200000, 
    208000, 
    209000, 
    214000, 
    223000, 
    225000, 
    227000, 
    232000, 
    235000, 
    240000, 
    242000, 
    246000, 
    251000, 
    252000, 
    260000, 
    264000, 
    269000, 
    275000, 
    275000, 
    280000, 
    283000, 
    285000, 
    288000, 
    290000, 
    296000, 
    300000, 
    302000, 
    305000, 
    311000, 
    314000, 
    320000, 
    328000, 
    331000, 
    332000, 
    337000, 
    341000, 
    357000, 
    358000, 
    362000, 
    367000, 
    373000, 
    375000, 
    378000, 
    381000, 
    383000, 
    390000, 
    393000, 
    395000, 
    399000, 
    401000, 
    403000, 
    406000, 
    411000, 
    416000, 
    420000, 
    423000, 
    427000, 
    430000, 
    433000, 
    435000, 
    441000, 
    447000, 
    449000, 
    462000, 
    466000, 
    468000, 
    469000, 
    471000, 
    474000, 
    478000, 
    479000, 
    482000, 
    487000, 
    492000, 
    494000, 
    498000, 
    499000, 
    502000, 
    512000, 
    514000, 
    518000, 
    519000, 
    526000, 
    536000, 
    542000, 
    545000, 
    546000, 
    548000, 
    552000, 
    560000, 
    564000, 
    569000, 
    572000, 
    575000, 
    580000, 
    591000, 
    595000, 
    599000, 
    609000, 
    611000, 
    614000, 
    617000, 
    619000, 
    623000, 
    627000, 
    628000, 
    630000, 
    633000, 
    634000, 
    638000, 
    644000, 
    647000, 
    650000, 
    652000, 
    660000, 
    663000, 
    667000, 
    672000, 
    675000, 
    679000, 
    683000, 
    685000, 
    687000, 
    692000, 
    694000, 
    698000, 
    700000, 
    701000, 
    706000, 
    713000, 
    716000, 
    718000, 
    721000, 
    724000, 
    726000, 
    729000, 
    733000, 
    735000, 
    737000, 
    741000, 
    746000, 
    749000, 
    754000, 
    755000, 
    757000, 
    758000, 
    761000, 
    763000, 
    765000, 
    767000, 
    768000, 
    770000, 
    774000, 
    776000, 
    782000, 
    783000, 
    786000, 
    788000, 
    793000, 
    793000, 
    799000, 
    803000, 
    807000, 
    809000, 
    811000, 
    814000, 
    819000, 
    820000, 
    822000, 
    824000, 
    830000, 
    839000, 
    840000
  ], 
  "text": [
    "", 
    "We use F2 to understand linear codes.", 
    "And there's a few hints that it should also", 
    "be useful for stabilizer codes.", 
    "And so now I won't explore that in more detail.", 
    "I want to start by addressing the question of whether two", 
    "poly matrices commute.", 
    "", 
    "For single qubits this is not a very interesting question,", 
    "right?", 
    "The polys are the same.", 
    "Or if one of them is the identity, then they commute.", 
    "Otherwise if they're different in both non-identity,", 
    "they anti-commute.", 
    "End of discussion.", 
    "If you have a string of them, then you have to count.", 
    "How many of them commute?", 
    "How many them anti-commute?", 
    "And then if an even number of the entries anti-commute,", 
    "the whole thing commutes.", 
    "Otherwise the whole thing anti-commutes.", 
    "Sounds like a pretty simple rule.", 
    "But rephrasing it in linear algebra terms", 
    "can let us import a lot of the powerful machinery", 
    "of linear algebra and will let us understand these codes", 
    "in a more sophisticated way.", 
    "So that's our first hint that linear algebra is useful.", 
    "The other hint is when I talk about independence here.", 
    "And I said, it's a lot like linear independence.", 
    "I mean it really is linear independence.", 
    "And when we rephrased it that way,", 
    "again we can start to get access to some more useful things.", 
    "So let me start by talking about the commuting conditions.", 
    "Let's suppose I have two poly matrices,", 
    "and let me write them in this way.", 
    "They each look like minus 1 to the a.", 
    "", 
    "They're each in this form, minus 1 to some power, x to the b, z", 
    "to the c.", 
    "And this is deceptively simple notation,", 
    "when I write x to the b, you know", 
    "what I mean is x1 to the b1 through xn to the bn.", 
    "And so on.", 
    "So a belongs to f2, b and c belong to f2 to the f.", 
    "And let me also define p prime is equal minus 1", 
    "to the a prime, x to the b prime, z to the c prime.", 
    "So one very basic question is, do p", 
    "and p prime commute or anti-commute?", 
    "This is necessary for example, to figure out", 
    "if I can put them both into the same stabilizer subgroup.", 
    "So when I have a collection of stabilizers,", 
    "I guess I just erased this example of the short code,", 
    "but you always need a collection where everything in it", 
    "commutes.", 
    "Which means that they overlap.", 
    "The individual positions may anti-commute,", 
    "but it's always an even number of them that do for any pair.", 
    "So what does that look like when we write the polys this way?", 
    "So lets calculate p times p prime.", 
    "You can pull off the minus 1, this is minus 1", 
    "to the a plus a prime.", 
    "Then you have x to the a, z to the b, like this.", 
    "Right?", 
    "", 
    "Oh thanks, thanks, thanks, yeah, b c b c.", 
    "The a's are kind of irrelevant.", 
    "So I tend to forget them, but these", 
    "are b's and c's So let me try to write this in the standard form", 
    "that I used for the individual polys.", 
    "To do that I need to move this x past the z.", 
    "OK?", 
    "So how can I do that?", 
    "I can write z to the c, x to the b prime.", 
    "So let me expand that out.", 
    "That's z1 to the c1 through zn to the cn, x1 to the v1 prime", 
    "through xn to the bn prime.", 
    "And then on each individual qubit,", 
    "I can move the corresponding x past the corresponding z.", 
    "OK?", 
    "And in doing so, I may pick up a minus sign.", 
    "In fact, if there is both a z and an f present,", 
    "I will pick up a minus sign.", 
    "If they're both identity, or at least one of them is identity,", 
    "there will be no minus sign.", 
    "So when I move it past, I'm going to get x to the b prime,", 
    "z to the c, and then I pick up a minus sign", 
    "whenever they're both equal to 1.", 
    "So in other words, I have b1 prime times c1, 1,", 
    "plus dot, dot, dot, bn prime times cn prime.", 
    "Or I could just write this as minus 1", 
    "to the inner product of b prime with c, xb prime, z to the c.", 
    "", 
    "So the phase I get is the inner product of these vectors.", 
    "Mod two.", 
    "", 
    "I can go in the other direction as well, I can do p p prime.", 
    "And if I calculate this out, let me plug this in to pp prime", 
    "and then do it in the other order.", 
    "This is minus 1 to the a plus a prime,", 
    "plus this inner product, x to the b plus", 
    "b prime z to the c plus c prime.", 
    "So once I reverse the order of these,", 
    "this b prime just joins with x to the b.", 
    "You have x to the b times x to the b prime,", 
    "I would just get x to the b plus b prime.", 
    "Likewise, the z's combine, I get z to the c plus c prime,", 
    "and of course, the minus 1, the a plus a prime.", 
    "So in general, it looks like I just take the vectors a, b,", 
    "and c and I add them together, except there's this extra phase", 
    "term.", 
    "And that's kind of like when you multiply polys,", 
    "you can just keep track of the number x's and z's.", 
    "And those act as though they are abelian,", 
    "except there's this phase term that may be plus or minus.", 
    "So this extra phase term, depending", 
    "on the order that we multiply p and p prime in.", 
    "So if we do it in the other order, we do p prime p,", 
    "we can repeat the same calculation and we get minus 1", 
    "to the a plus a prime.", 
    "And now the inner product is going", 
    "to be between b and c prime.", 
    "And then we again get x to the b plus b prime, c to the c plus c", 
    "prime.", 
    "So we have these polys and we can represent them as vectors.", 
    "", 
    "And it's almost like we just add the two vectors together.", 
    "Right?", 
    "When you multiply these two polys,", 
    "it looks a lot like vector addition.", 
    "And if they completely commuted, you would have vector addition.", 
    "But they don't commute, and so you", 
    "have these extra phases here.", 
    "", 
    "OK, so we see that in p p prime you get one phase.", 
    "And p prime p, you get a different phase.", 
    "So to figure out whether p and p prime commute or anti-commute,", 
    "we should see whether these phases", 
    "are the same or different.", 
    "So if you calculate p times p prime,", 
    "let me think of how to put this.", 
    "", 
    "Right, so we can say that p times", 
    "p prime is equal to minus 1 to the b, this inner product.", 
    "", 
    "So let's compare these two terms, p p prime and p prime p,", 
    "they look almost the same except they differ in this phase term", 
    "here.", 
    "So this is what will tell us whether the p", 
    "and p prime commute or anti-commute.", 
    "So if this is zero, then they commute.", 
    "If it's 1, then they anti-commute.", 
    "", 
    "So it's kind of nice, we have it down", 
    "to a sum of two different inner products.", 
    "But there's a way to write this even as a single inner product.", 
    "So this sum of inner products here, b c prime plus c b prime,", 
    "I could also write it as b transpose c", 
    "transpose times this block matrix.", 
    "", 
    "So I have here the block vector b prime c", 
    "prime here b transpose c transpose, In the middle,", 
    "zero identity, identity zero.", 
    "And what this block matrix does, is", 
    "it makes the b here match up with the c prime,", 
    "and the c here, match up with the b prime.", 
    "OK?", 
    "So in this way I can write this as sort", 
    "of an inner product between the b c vector", 
    "and the b prime c prime vector.", 
    "", 
    "And this matrix in the middle, let me define it, lambda.", 
    "You could think of it as the matrix that", 
    "defines this inner product.", 
    "So let me write this one more time as,", 
    "bc transpose lambda b prime c prime.", 
    "So now this really just looks like a funny inner product", 
    "between the b c vector and the b prime c prime vector.", 
    "And again, if it's zero, if they're", 
    "orthogonal in this funny inner product, then they commute.", 
    "If it's 1, they anti-commute.", 
    "So this inner product is different than the usual one.", 
    "The usual one is, you just line up", 
    "the entries of one vector with the other one,", 
    "and you multiply each vector with its partner", 
    "entry in the other vector.", 
    "With this inner product we take the vectors in two blocks", 
    "and we switch the two blocks before doing", 
    "the regular inner product.", 
    "So the partner of each entry comes from the other block.", 
    "And this is called a symplectic inner product.", 
    "", 
    "The symplectic, I don't know where the word comes from,", 
    "but it means when you have this kind of block structure.", 
    "One place where this arises, if you", 
    "come from a physics background, is", 
    "in classical and quantum mechanics.", 
    "If the position and the momenta operators pair up in this way.", 
    "So position operators commute with each other.", 
    "momenta operators can move each other,", 
    "but they anti-commute in these similar sort", 
    "of pairs of the piece of i -th positioned coordinate", 
    "with the j-th momentum coordinate, get", 
    "matched up with a similar kind of symplectic inner product.", 
    "And if you come from a math background,", 
    "well you're probably fine with all sorts", 
    "of non-degenerate inner products.", 
    "So this is as good as any others.", 
    "And if you're from computer science,", 
    "I don't have anything good to say", 
    "about the symplectic inner product for you.", 
    "I'm sorry.", 
    "", 
    "Well, except it's with bits, so you should be happy.", 
    "So this inner product, it tells you", 
    "whether or not two things will commute or anti-commute.", 
    "Ah, good.", 
    "So usually when we say there's a symplectic inner product,", 
    "there's a minus i here.", 
    "And just to oblige you, I'll put a minus sign there.", 
    "What's that?", 
    "[INAUDIBLE]", 
    "Right, so this is f2, so plus and minus are the same.", 
    "But you're absolutely right in general symplectic form,", 
    "it has a minus sign.", 
    "And if you want to go to generalized", 
    "poly matrices to cue trips for example,", 
    "three-dimensional systems, then instead of minus 1 everywhere,", 
    "you get a third root of unity.", 
    "You know, the 2 pi i over 3.", 
    "And then you absolutely need the minus sign.", 
    "", 
    "If going beyond qubits, then you need this.", 
    ""
  ]
}